2024-12-12 17:14:53,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:14:53,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:14:53,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:14:53,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:14:54,428:INFO:PyCaret RegressionExperiment
2024-12-12 17:14:54,428:INFO:Logging name: reg-default-name
2024-12-12 17:14:54,428:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-12 17:14:54,428:INFO:version 3.3.2
2024-12-12 17:14:54,428:INFO:Initializing setup()
2024-12-12 17:14:54,428:INFO:self.USI: 256e
2024-12-12 17:14:54,428:INFO:self._variable_keys: {'logging_param', 'idx', 'pipeline', 'data', 'fold_shuffle_param', 'target_param', 'memory', '_ml_usecase', 'log_plots_param', 'y', 'y_test', 'y_train', 'gpu_param', 'USI', 'X_train', 'transform_target_param', 'exp_name_log', '_available_plots', 'X_test', 'fold_groups_param', 'n_jobs_param', 'gpu_n_jobs_param', 'html_param', 'X', 'fold_generator', 'seed', 'exp_id'}
2024-12-12 17:14:54,428:INFO:Checking environment
2024-12-12 17:14:54,428:INFO:python_version: 3.11.3
2024-12-12 17:14:54,428:INFO:python_build: ('tags/v3.11.3:f3909b8', 'Apr  4 2023 23:49:59')
2024-12-12 17:14:54,428:INFO:machine: AMD64
2024-12-12 17:14:54,442:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-12 17:14:54,442:INFO:Memory: svmem(total=16475824128, available=2082664448, percent=87.4, used=14393159680, free=2082664448)
2024-12-12 17:14:54,442:INFO:Physical Core: 6
2024-12-12 17:14:54,442:INFO:Logical Core: 12
2024-12-12 17:14:54,442:INFO:Checking libraries
2024-12-12 17:14:54,442:INFO:System:
2024-12-12 17:14:54,442:INFO:    python: 3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)]
2024-12-12 17:14:54,442:INFO:executable: C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\python.exe
2024-12-12 17:14:54,442:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-12 17:14:54,442:INFO:PyCaret required dependencies:
2024-12-12 17:14:54,587:INFO:                 pip: 24.2
2024-12-12 17:14:54,587:INFO:          setuptools: 67.8.0
2024-12-12 17:14:54,587:INFO:             pycaret: 3.3.2
2024-12-12 17:14:54,587:INFO:             IPython: 8.13.2
2024-12-12 17:14:54,587:INFO:          ipywidgets: 8.1.5
2024-12-12 17:14:54,587:INFO:                tqdm: 4.66.5
2024-12-12 17:14:54,587:INFO:               numpy: 1.23.5
2024-12-12 17:14:54,587:INFO:              pandas: 2.1.4
2024-12-12 17:14:54,587:INFO:              jinja2: 3.1.2
2024-12-12 17:14:54,587:INFO:               scipy: 1.11.4
2024-12-12 17:14:54,587:INFO:              joblib: 1.3.2
2024-12-12 17:14:54,587:INFO:             sklearn: 1.4.2
2024-12-12 17:14:54,587:INFO:                pyod: 2.0.2
2024-12-12 17:14:54,587:INFO:            imblearn: 0.12.3
2024-12-12 17:14:54,587:INFO:   category_encoders: 2.6.3
2024-12-12 17:14:54,587:INFO:            lightgbm: 4.4.0
2024-12-12 17:14:54,587:INFO:               numba: 0.60.0
2024-12-12 17:14:54,587:INFO:            requests: 2.32.3
2024-12-12 17:14:54,587:INFO:          matplotlib: 3.7.5
2024-12-12 17:14:54,587:INFO:          scikitplot: 0.3.7
2024-12-12 17:14:54,587:INFO:         yellowbrick: 1.5
2024-12-12 17:14:54,587:INFO:              plotly: 5.24.0
2024-12-12 17:14:54,587:INFO:    plotly-resampler: Not installed
2024-12-12 17:14:54,587:INFO:             kaleido: 0.2.1
2024-12-12 17:14:54,587:INFO:           schemdraw: 0.15
2024-12-12 17:14:54,587:INFO:         statsmodels: 0.14.2
2024-12-12 17:14:54,587:INFO:              sktime: 0.26.0
2024-12-12 17:14:54,587:INFO:               tbats: 1.1.3
2024-12-12 17:14:54,587:INFO:            pmdarima: 2.0.4
2024-12-12 17:14:54,587:INFO:              psutil: 5.9.5
2024-12-12 17:14:54,587:INFO:          markupsafe: 2.1.2
2024-12-12 17:14:54,587:INFO:             pickle5: Not installed
2024-12-12 17:14:54,587:INFO:         cloudpickle: 3.0.0
2024-12-12 17:14:54,587:INFO:         deprecation: 2.1.0
2024-12-12 17:14:54,587:INFO:              xxhash: 3.5.0
2024-12-12 17:14:54,587:INFO:           wurlitzer: Not installed
2024-12-12 17:14:54,587:INFO:PyCaret optional dependencies:
2024-12-12 17:14:54,761:INFO:                shap: Not installed
2024-12-12 17:14:54,761:INFO:           interpret: Not installed
2024-12-12 17:14:54,761:INFO:                umap: Not installed
2024-12-12 17:14:54,761:INFO:     ydata_profiling: Not installed
2024-12-12 17:14:54,761:INFO:  explainerdashboard: Not installed
2024-12-12 17:14:54,761:INFO:             autoviz: Not installed
2024-12-12 17:14:54,761:INFO:           fairlearn: Not installed
2024-12-12 17:14:54,761:INFO:          deepchecks: Not installed
2024-12-12 17:14:54,761:INFO:             xgboost: 2.1.1
2024-12-12 17:14:54,761:INFO:            catboost: Not installed
2024-12-12 17:14:54,761:INFO:              kmodes: Not installed
2024-12-12 17:14:54,761:INFO:             mlxtend: Not installed
2024-12-12 17:14:54,761:INFO:       statsforecast: Not installed
2024-12-12 17:14:54,761:INFO:        tune_sklearn: Not installed
2024-12-12 17:14:54,761:INFO:                 ray: Not installed
2024-12-12 17:14:54,761:INFO:            hyperopt: Not installed
2024-12-12 17:14:54,761:INFO:              optuna: 3.6.1
2024-12-12 17:14:54,761:INFO:               skopt: Not installed
2024-12-12 17:14:54,761:INFO:              mlflow: Not installed
2024-12-12 17:14:54,761:INFO:              gradio: Not installed
2024-12-12 17:14:54,761:INFO:             fastapi: Not installed
2024-12-12 17:14:54,761:INFO:             uvicorn: Not installed
2024-12-12 17:14:54,761:INFO:              m2cgen: Not installed
2024-12-12 17:14:54,765:INFO:           evidently: Not installed
2024-12-12 17:14:54,765:INFO:               fugue: Not installed
2024-12-12 17:14:54,765:INFO:           streamlit: 1.26.0
2024-12-12 17:14:54,765:INFO:             prophet: Not installed
2024-12-12 17:14:54,765:INFO:None
2024-12-12 17:14:54,765:INFO:Set up data.
2024-12-12 17:14:54,765:INFO:Set up folding strategy.
2024-12-12 17:14:54,765:INFO:Set up train/test split.
2024-12-12 17:14:54,765:INFO:Set up index.
2024-12-12 17:14:54,765:INFO:Assigning column types.
2024-12-12 17:14:54,777:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-12 17:14:54,777:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,779:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,779:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,878:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:54,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:54,889:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,893:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,893:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,999:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:54,999:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,004:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-12 17:14:55,007:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,007:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,096:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,111:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,168:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,203:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,211:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,211:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-12 17:14:55,215:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,273:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,311:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,316:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,373:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,405:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,420:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-12 17:14:55,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,523:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,617:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,617:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,617:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-12 17:14:55,687:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,728:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:14:55,825:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:55,825:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-12 17:14:55,938:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:55,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:56,040:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:56,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:56,040:INFO:Preparing preprocessing pipeline...
2024-12-12 17:14:56,040:INFO:Set up simple imputation.
2024-12-12 17:14:56,092:INFO:Finished creating preprocessing pipeline.
2024-12-12 17:14:56,097:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\KANAJI~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['layers_1', 'layers_2',
                                             'batch_size_1', 'batch_size_2',
                                             'model1_Param', 'model2_Param',
                                             'model1_FLP', 'model2_FLP'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-12-12 17:14:56,097:INFO:Creating final display dataframe.
2024-12-12 17:14:56,154:INFO:Setup _display_container:                     Description             Value
0                    Session id              8196
1                        Target             Power
2                   Target type        Regression
3           Original data shape           (90, 9)
4        Transformed data shape           (90, 9)
5   Transformed train set shape           (62, 9)
6    Transformed test set shape           (28, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              256e
2024-12-12 17:14:56,278:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:56,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:56,389:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:14:56,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:14:56,392:INFO:setup() successfully completed in 1.96s...............
2024-12-12 17:14:56,392:INFO:Initializing compare_models()
2024-12-12 17:14:56,392:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=18, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 18, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:14:56,392:INFO:Checking exceptions
2024-12-12 17:14:56,394:INFO:Preparing display monitor
2024-12-12 17:14:56,396:INFO:Initializing Linear Regression
2024-12-12 17:14:56,396:INFO:Total runtime is 0.0 minutes
2024-12-12 17:14:56,396:INFO:SubProcess create_model() called ==================================
2024-12-12 17:14:56,396:INFO:Initializing create_model()
2024-12-12 17:14:56,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:14:56,396:INFO:Checking exceptions
2024-12-12 17:14:56,396:INFO:Importing libraries
2024-12-12 17:14:56,396:INFO:Copying training dataset
2024-12-12 17:14:56,396:INFO:Defining folds
2024-12-12 17:14:56,396:INFO:Declaring metric variables
2024-12-12 17:14:56,396:INFO:Importing untrained model
2024-12-12 17:14:56,396:INFO:Linear Regression Imported successfully
2024-12-12 17:14:56,396:INFO:Starting cross validation
2024-12-12 17:14:56,407:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:01,565:INFO:Calculating mean and std
2024-12-12 17:15:01,565:INFO:Creating metrics dataframe
2024-12-12 17:15:01,570:INFO:Uploading results into container
2024-12-12 17:15:01,570:INFO:Uploading model into container now
2024-12-12 17:15:01,570:INFO:_master_model_container: 1
2024-12-12 17:15:01,570:INFO:_display_container: 2
2024-12-12 17:15:01,570:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:15:01,570:INFO:create_model() successfully completed......................................
2024-12-12 17:15:01,670:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:01,670:INFO:Creating metrics dataframe
2024-12-12 17:15:01,674:INFO:Initializing Lasso Regression
2024-12-12 17:15:01,674:INFO:Total runtime is 0.08796439965566 minutes
2024-12-12 17:15:01,674:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:01,674:INFO:Initializing create_model()
2024-12-12 17:15:01,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:01,674:INFO:Checking exceptions
2024-12-12 17:15:01,674:INFO:Importing libraries
2024-12-12 17:15:01,674:INFO:Copying training dataset
2024-12-12 17:15:01,678:INFO:Defining folds
2024-12-12 17:15:01,678:INFO:Declaring metric variables
2024-12-12 17:15:01,678:INFO:Importing untrained model
2024-12-12 17:15:01,678:INFO:Lasso Regression Imported successfully
2024-12-12 17:15:01,679:INFO:Starting cross validation
2024-12-12 17:15:01,679:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:03,979:INFO:Calculating mean and std
2024-12-12 17:15:03,979:INFO:Creating metrics dataframe
2024-12-12 17:15:03,979:INFO:Uploading results into container
2024-12-12 17:15:03,979:INFO:Uploading model into container now
2024-12-12 17:15:03,979:INFO:_master_model_container: 2
2024-12-12 17:15:03,979:INFO:_display_container: 2
2024-12-12 17:15:03,979:INFO:Lasso(random_state=8196)
2024-12-12 17:15:03,979:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,067:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,067:INFO:Creating metrics dataframe
2024-12-12 17:15:04,071:INFO:Initializing Ridge Regression
2024-12-12 17:15:04,071:INFO:Total runtime is 0.12791714270909627 minutes
2024-12-12 17:15:04,071:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,071:INFO:Initializing create_model()
2024-12-12 17:15:04,071:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,071:INFO:Checking exceptions
2024-12-12 17:15:04,071:INFO:Importing libraries
2024-12-12 17:15:04,071:INFO:Copying training dataset
2024-12-12 17:15:04,072:INFO:Defining folds
2024-12-12 17:15:04,072:INFO:Declaring metric variables
2024-12-12 17:15:04,072:INFO:Importing untrained model
2024-12-12 17:15:04,072:INFO:Ridge Regression Imported successfully
2024-12-12 17:15:04,072:INFO:Starting cross validation
2024-12-12 17:15:04,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:04,124:INFO:Calculating mean and std
2024-12-12 17:15:04,124:INFO:Creating metrics dataframe
2024-12-12 17:15:04,124:INFO:Uploading results into container
2024-12-12 17:15:04,124:INFO:Uploading model into container now
2024-12-12 17:15:04,124:INFO:_master_model_container: 3
2024-12-12 17:15:04,124:INFO:_display_container: 2
2024-12-12 17:15:04,124:INFO:Ridge(random_state=8196)
2024-12-12 17:15:04,124:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,204:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,205:INFO:Creating metrics dataframe
2024-12-12 17:15:04,208:INFO:Initializing Elastic Net
2024-12-12 17:15:04,208:INFO:Total runtime is 0.1301979621251424 minutes
2024-12-12 17:15:04,208:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,208:INFO:Initializing create_model()
2024-12-12 17:15:04,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,208:INFO:Checking exceptions
2024-12-12 17:15:04,208:INFO:Importing libraries
2024-12-12 17:15:04,208:INFO:Copying training dataset
2024-12-12 17:15:04,210:INFO:Defining folds
2024-12-12 17:15:04,211:INFO:Declaring metric variables
2024-12-12 17:15:04,211:INFO:Importing untrained model
2024-12-12 17:15:04,211:INFO:Elastic Net Imported successfully
2024-12-12 17:15:04,211:INFO:Starting cross validation
2024-12-12 17:15:04,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:04,273:INFO:Calculating mean and std
2024-12-12 17:15:04,273:INFO:Creating metrics dataframe
2024-12-12 17:15:04,273:INFO:Uploading results into container
2024-12-12 17:15:04,273:INFO:Uploading model into container now
2024-12-12 17:15:04,273:INFO:_master_model_container: 4
2024-12-12 17:15:04,273:INFO:_display_container: 2
2024-12-12 17:15:04,273:INFO:ElasticNet(random_state=8196)
2024-12-12 17:15:04,273:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,342:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,342:INFO:Creating metrics dataframe
2024-12-12 17:15:04,353:INFO:Initializing Least Angle Regression
2024-12-12 17:15:04,353:INFO:Total runtime is 0.13261459668477374 minutes
2024-12-12 17:15:04,353:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,354:INFO:Initializing create_model()
2024-12-12 17:15:04,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,354:INFO:Checking exceptions
2024-12-12 17:15:04,354:INFO:Importing libraries
2024-12-12 17:15:04,354:INFO:Copying training dataset
2024-12-12 17:15:04,356:INFO:Defining folds
2024-12-12 17:15:04,356:INFO:Declaring metric variables
2024-12-12 17:15:04,356:INFO:Importing untrained model
2024-12-12 17:15:04,357:INFO:Least Angle Regression Imported successfully
2024-12-12 17:15:04,357:INFO:Starting cross validation
2024-12-12 17:15:04,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:04,421:INFO:Calculating mean and std
2024-12-12 17:15:04,421:INFO:Creating metrics dataframe
2024-12-12 17:15:04,421:INFO:Uploading results into container
2024-12-12 17:15:04,421:INFO:Uploading model into container now
2024-12-12 17:15:04,421:INFO:_master_model_container: 5
2024-12-12 17:15:04,421:INFO:_display_container: 2
2024-12-12 17:15:04,421:INFO:Lars(random_state=8196)
2024-12-12 17:15:04,421:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,492:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,492:INFO:Creating metrics dataframe
2024-12-12 17:15:04,492:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:15:04,492:INFO:Total runtime is 0.13493305444717404 minutes
2024-12-12 17:15:04,492:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,492:INFO:Initializing create_model()
2024-12-12 17:15:04,492:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,492:INFO:Checking exceptions
2024-12-12 17:15:04,492:INFO:Importing libraries
2024-12-12 17:15:04,503:INFO:Copying training dataset
2024-12-12 17:15:04,505:INFO:Defining folds
2024-12-12 17:15:04,505:INFO:Declaring metric variables
2024-12-12 17:15:04,505:INFO:Importing untrained model
2024-12-12 17:15:04,506:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:15:04,506:INFO:Starting cross validation
2024-12-12 17:15:04,506:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:04,566:INFO:Calculating mean and std
2024-12-12 17:15:04,566:INFO:Creating metrics dataframe
2024-12-12 17:15:04,569:INFO:Uploading results into container
2024-12-12 17:15:04,569:INFO:Uploading model into container now
2024-12-12 17:15:04,569:INFO:_master_model_container: 6
2024-12-12 17:15:04,569:INFO:_display_container: 2
2024-12-12 17:15:04,569:INFO:LassoLars(random_state=8196)
2024-12-12 17:15:04,569:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,646:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,646:INFO:Creating metrics dataframe
2024-12-12 17:15:04,648:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:15:04,648:INFO:Total runtime is 0.13754167556762692 minutes
2024-12-12 17:15:04,648:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,648:INFO:Initializing create_model()
2024-12-12 17:15:04,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,648:INFO:Checking exceptions
2024-12-12 17:15:04,648:INFO:Importing libraries
2024-12-12 17:15:04,648:INFO:Copying training dataset
2024-12-12 17:15:04,652:INFO:Defining folds
2024-12-12 17:15:04,652:INFO:Declaring metric variables
2024-12-12 17:15:04,652:INFO:Importing untrained model
2024-12-12 17:15:04,653:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:15:04,653:INFO:Starting cross validation
2024-12-12 17:15:04,653:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:04,706:INFO:Calculating mean and std
2024-12-12 17:15:04,707:INFO:Creating metrics dataframe
2024-12-12 17:15:04,707:INFO:Uploading results into container
2024-12-12 17:15:04,707:INFO:Uploading model into container now
2024-12-12 17:15:04,707:INFO:_master_model_container: 7
2024-12-12 17:15:04,707:INFO:_display_container: 2
2024-12-12 17:15:04,707:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:15:04,707:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,787:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,787:INFO:Creating metrics dataframe
2024-12-12 17:15:04,788:INFO:Initializing Bayesian Ridge
2024-12-12 17:15:04,788:INFO:Total runtime is 0.1398669878641764 minutes
2024-12-12 17:15:04,788:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,789:INFO:Initializing create_model()
2024-12-12 17:15:04,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,789:INFO:Checking exceptions
2024-12-12 17:15:04,789:INFO:Importing libraries
2024-12-12 17:15:04,789:INFO:Copying training dataset
2024-12-12 17:15:04,791:INFO:Defining folds
2024-12-12 17:15:04,791:INFO:Declaring metric variables
2024-12-12 17:15:04,791:INFO:Importing untrained model
2024-12-12 17:15:04,791:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:15:04,791:INFO:Starting cross validation
2024-12-12 17:15:04,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:04,846:INFO:Calculating mean and std
2024-12-12 17:15:04,846:INFO:Creating metrics dataframe
2024-12-12 17:15:04,847:INFO:Uploading results into container
2024-12-12 17:15:04,847:INFO:Uploading model into container now
2024-12-12 17:15:04,847:INFO:_master_model_container: 8
2024-12-12 17:15:04,847:INFO:_display_container: 2
2024-12-12 17:15:04,847:INFO:BayesianRidge()
2024-12-12 17:15:04,847:INFO:create_model() successfully completed......................................
2024-12-12 17:15:04,939:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:04,940:INFO:Creating metrics dataframe
2024-12-12 17:15:04,940:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:15:04,940:INFO:Total runtime is 0.14240338802337643 minutes
2024-12-12 17:15:04,940:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:04,940:INFO:Initializing create_model()
2024-12-12 17:15:04,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:04,940:INFO:Checking exceptions
2024-12-12 17:15:04,940:INFO:Importing libraries
2024-12-12 17:15:04,940:INFO:Copying training dataset
2024-12-12 17:15:04,940:INFO:Defining folds
2024-12-12 17:15:04,940:INFO:Declaring metric variables
2024-12-12 17:15:04,940:INFO:Importing untrained model
2024-12-12 17:15:04,940:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:15:04,940:INFO:Starting cross validation
2024-12-12 17:15:04,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:05,004:INFO:Calculating mean and std
2024-12-12 17:15:05,004:INFO:Creating metrics dataframe
2024-12-12 17:15:05,004:INFO:Uploading results into container
2024-12-12 17:15:05,004:INFO:Uploading model into container now
2024-12-12 17:15:05,004:INFO:_master_model_container: 9
2024-12-12 17:15:05,004:INFO:_display_container: 2
2024-12-12 17:15:05,004:INFO:PassiveAggressiveRegressor(random_state=8196)
2024-12-12 17:15:05,004:INFO:create_model() successfully completed......................................
2024-12-12 17:15:05,084:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:05,084:INFO:Creating metrics dataframe
2024-12-12 17:15:05,086:INFO:Initializing Huber Regressor
2024-12-12 17:15:05,086:INFO:Total runtime is 0.14484195709228512 minutes
2024-12-12 17:15:05,086:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:05,086:INFO:Initializing create_model()
2024-12-12 17:15:05,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:05,086:INFO:Checking exceptions
2024-12-12 17:15:05,086:INFO:Importing libraries
2024-12-12 17:15:05,086:INFO:Copying training dataset
2024-12-12 17:15:05,087:INFO:Defining folds
2024-12-12 17:15:05,087:INFO:Declaring metric variables
2024-12-12 17:15:05,087:INFO:Importing untrained model
2024-12-12 17:15:05,087:INFO:Huber Regressor Imported successfully
2024-12-12 17:15:05,087:INFO:Starting cross validation
2024-12-12 17:15:05,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:05,165:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:05,165:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:05,165:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:05,165:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:05,165:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:05,175:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:05,187:INFO:Calculating mean and std
2024-12-12 17:15:05,187:INFO:Creating metrics dataframe
2024-12-12 17:15:05,189:INFO:Uploading results into container
2024-12-12 17:15:05,189:INFO:Uploading model into container now
2024-12-12 17:15:05,190:INFO:_master_model_container: 10
2024-12-12 17:15:05,190:INFO:_display_container: 2
2024-12-12 17:15:05,190:INFO:HuberRegressor()
2024-12-12 17:15:05,190:INFO:create_model() successfully completed......................................
2024-12-12 17:15:05,267:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:05,267:INFO:Creating metrics dataframe
2024-12-12 17:15:05,269:INFO:Initializing K Neighbors Regressor
2024-12-12 17:15:05,269:INFO:Total runtime is 0.1478862921396891 minutes
2024-12-12 17:15:05,269:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:05,269:INFO:Initializing create_model()
2024-12-12 17:15:05,269:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:05,269:INFO:Checking exceptions
2024-12-12 17:15:05,269:INFO:Importing libraries
2024-12-12 17:15:05,269:INFO:Copying training dataset
2024-12-12 17:15:05,272:INFO:Defining folds
2024-12-12 17:15:05,272:INFO:Declaring metric variables
2024-12-12 17:15:05,272:INFO:Importing untrained model
2024-12-12 17:15:05,272:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:05,273:INFO:Starting cross validation
2024-12-12 17:15:05,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:05,354:INFO:Calculating mean and std
2024-12-12 17:15:05,354:INFO:Creating metrics dataframe
2024-12-12 17:15:05,355:INFO:Uploading results into container
2024-12-12 17:15:05,355:INFO:Uploading model into container now
2024-12-12 17:15:05,355:INFO:_master_model_container: 11
2024-12-12 17:15:05,355:INFO:_display_container: 2
2024-12-12 17:15:05,355:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:05,355:INFO:create_model() successfully completed......................................
2024-12-12 17:15:05,433:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:05,433:INFO:Creating metrics dataframe
2024-12-12 17:15:05,435:INFO:Initializing Decision Tree Regressor
2024-12-12 17:15:05,435:INFO:Total runtime is 0.15065939426422115 minutes
2024-12-12 17:15:05,435:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:05,435:INFO:Initializing create_model()
2024-12-12 17:15:05,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:05,435:INFO:Checking exceptions
2024-12-12 17:15:05,435:INFO:Importing libraries
2024-12-12 17:15:05,435:INFO:Copying training dataset
2024-12-12 17:15:05,438:INFO:Defining folds
2024-12-12 17:15:05,438:INFO:Declaring metric variables
2024-12-12 17:15:05,439:INFO:Importing untrained model
2024-12-12 17:15:05,439:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:15:05,439:INFO:Starting cross validation
2024-12-12 17:15:05,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:05,492:INFO:Calculating mean and std
2024-12-12 17:15:05,492:INFO:Creating metrics dataframe
2024-12-12 17:15:05,492:INFO:Uploading results into container
2024-12-12 17:15:05,495:INFO:Uploading model into container now
2024-12-12 17:15:05,495:INFO:_master_model_container: 12
2024-12-12 17:15:05,495:INFO:_display_container: 2
2024-12-12 17:15:05,495:INFO:DecisionTreeRegressor(random_state=8196)
2024-12-12 17:15:05,495:INFO:create_model() successfully completed......................................
2024-12-12 17:15:05,572:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:05,572:INFO:Creating metrics dataframe
2024-12-12 17:15:05,574:INFO:Initializing Random Forest Regressor
2024-12-12 17:15:05,574:INFO:Total runtime is 0.15297158956527707 minutes
2024-12-12 17:15:05,574:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:05,574:INFO:Initializing create_model()
2024-12-12 17:15:05,574:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:05,575:INFO:Checking exceptions
2024-12-12 17:15:05,575:INFO:Importing libraries
2024-12-12 17:15:05,575:INFO:Copying training dataset
2024-12-12 17:15:05,577:INFO:Defining folds
2024-12-12 17:15:05,577:INFO:Declaring metric variables
2024-12-12 17:15:05,577:INFO:Importing untrained model
2024-12-12 17:15:05,577:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:05,578:INFO:Starting cross validation
2024-12-12 17:15:05,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:05,868:INFO:Calculating mean and std
2024-12-12 17:15:05,868:INFO:Creating metrics dataframe
2024-12-12 17:15:05,868:INFO:Uploading results into container
2024-12-12 17:15:05,868:INFO:Uploading model into container now
2024-12-12 17:15:05,868:INFO:_master_model_container: 13
2024-12-12 17:15:05,868:INFO:_display_container: 2
2024-12-12 17:15:05,868:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:05,868:INFO:create_model() successfully completed......................................
2024-12-12 17:15:05,947:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:05,947:INFO:Creating metrics dataframe
2024-12-12 17:15:05,949:INFO:Initializing Extra Trees Regressor
2024-12-12 17:15:05,949:INFO:Total runtime is 0.1592169404029846 minutes
2024-12-12 17:15:05,950:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:05,950:INFO:Initializing create_model()
2024-12-12 17:15:05,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:05,950:INFO:Checking exceptions
2024-12-12 17:15:05,950:INFO:Importing libraries
2024-12-12 17:15:05,950:INFO:Copying training dataset
2024-12-12 17:15:05,952:INFO:Defining folds
2024-12-12 17:15:05,952:INFO:Declaring metric variables
2024-12-12 17:15:05,952:INFO:Importing untrained model
2024-12-12 17:15:05,953:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:05,953:INFO:Starting cross validation
2024-12-12 17:15:05,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:06,181:INFO:Calculating mean and std
2024-12-12 17:15:06,182:INFO:Creating metrics dataframe
2024-12-12 17:15:06,183:INFO:Uploading results into container
2024-12-12 17:15:06,183:INFO:Uploading model into container now
2024-12-12 17:15:06,183:INFO:_master_model_container: 14
2024-12-12 17:15:06,183:INFO:_display_container: 2
2024-12-12 17:15:06,183:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:06,183:INFO:create_model() successfully completed......................................
2024-12-12 17:15:06,249:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:06,249:INFO:Creating metrics dataframe
2024-12-12 17:15:06,265:INFO:Initializing AdaBoost Regressor
2024-12-12 17:15:06,265:INFO:Total runtime is 0.16449036200841266 minutes
2024-12-12 17:15:06,265:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:06,265:INFO:Initializing create_model()
2024-12-12 17:15:06,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:06,265:INFO:Checking exceptions
2024-12-12 17:15:06,265:INFO:Importing libraries
2024-12-12 17:15:06,265:INFO:Copying training dataset
2024-12-12 17:15:06,268:INFO:Defining folds
2024-12-12 17:15:06,268:INFO:Declaring metric variables
2024-12-12 17:15:06,268:INFO:Importing untrained model
2024-12-12 17:15:06,268:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:15:06,268:INFO:Starting cross validation
2024-12-12 17:15:06,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:06,421:INFO:Calculating mean and std
2024-12-12 17:15:06,421:INFO:Creating metrics dataframe
2024-12-12 17:15:06,421:INFO:Uploading results into container
2024-12-12 17:15:06,421:INFO:Uploading model into container now
2024-12-12 17:15:06,421:INFO:_master_model_container: 15
2024-12-12 17:15:06,421:INFO:_display_container: 2
2024-12-12 17:15:06,421:INFO:AdaBoostRegressor(random_state=8196)
2024-12-12 17:15:06,421:INFO:create_model() successfully completed......................................
2024-12-12 17:15:06,500:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:06,500:INFO:Creating metrics dataframe
2024-12-12 17:15:06,502:INFO:Initializing Gradient Boosting Regressor
2024-12-12 17:15:06,502:INFO:Total runtime is 0.16843983729680378 minutes
2024-12-12 17:15:06,503:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:06,503:INFO:Initializing create_model()
2024-12-12 17:15:06,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:06,503:INFO:Checking exceptions
2024-12-12 17:15:06,503:INFO:Importing libraries
2024-12-12 17:15:06,503:INFO:Copying training dataset
2024-12-12 17:15:06,505:INFO:Defining folds
2024-12-12 17:15:06,505:INFO:Declaring metric variables
2024-12-12 17:15:06,505:INFO:Importing untrained model
2024-12-12 17:15:06,506:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:06,506:INFO:Starting cross validation
2024-12-12 17:15:06,506:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:06,633:INFO:Calculating mean and std
2024-12-12 17:15:06,633:INFO:Creating metrics dataframe
2024-12-12 17:15:06,633:INFO:Uploading results into container
2024-12-12 17:15:06,633:INFO:Uploading model into container now
2024-12-12 17:15:06,633:INFO:_master_model_container: 16
2024-12-12 17:15:06,633:INFO:_display_container: 2
2024-12-12 17:15:06,633:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:06,633:INFO:create_model() successfully completed......................................
2024-12-12 17:15:06,715:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:06,716:INFO:Creating metrics dataframe
2024-12-12 17:15:06,719:INFO:Initializing Extreme Gradient Boosting
2024-12-12 17:15:06,719:INFO:Total runtime is 0.17204316854476928 minutes
2024-12-12 17:15:06,719:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:06,719:INFO:Initializing create_model()
2024-12-12 17:15:06,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:06,719:INFO:Checking exceptions
2024-12-12 17:15:06,719:INFO:Importing libraries
2024-12-12 17:15:06,719:INFO:Copying training dataset
2024-12-12 17:15:06,721:INFO:Defining folds
2024-12-12 17:15:06,721:INFO:Declaring metric variables
2024-12-12 17:15:06,721:INFO:Importing untrained model
2024-12-12 17:15:06,722:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:15:06,722:INFO:Starting cross validation
2024-12-12 17:15:06,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:06,897:INFO:Calculating mean and std
2024-12-12 17:15:06,897:INFO:Creating metrics dataframe
2024-12-12 17:15:06,897:INFO:Uploading results into container
2024-12-12 17:15:06,897:INFO:Uploading model into container now
2024-12-12 17:15:06,897:INFO:_master_model_container: 17
2024-12-12 17:15:06,897:INFO:_display_container: 2
2024-12-12 17:15:06,897:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...)
2024-12-12 17:15:06,897:INFO:create_model() successfully completed......................................
2024-12-12 17:15:06,979:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:06,979:INFO:Creating metrics dataframe
2024-12-12 17:15:06,980:INFO:Initializing Light Gradient Boosting Machine
2024-12-12 17:15:06,980:INFO:Total runtime is 0.17640647888183594 minutes
2024-12-12 17:15:06,980:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:06,980:INFO:Initializing create_model()
2024-12-12 17:15:06,980:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:06,980:INFO:Checking exceptions
2024-12-12 17:15:06,980:INFO:Importing libraries
2024-12-12 17:15:06,980:INFO:Copying training dataset
2024-12-12 17:15:06,986:INFO:Defining folds
2024-12-12 17:15:06,986:INFO:Declaring metric variables
2024-12-12 17:15:06,986:INFO:Importing untrained model
2024-12-12 17:15:06,986:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:06,986:INFO:Starting cross validation
2024-12-12 17:15:06,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:07,429:INFO:Calculating mean and std
2024-12-12 17:15:07,429:INFO:Creating metrics dataframe
2024-12-12 17:15:07,429:INFO:Uploading results into container
2024-12-12 17:15:07,429:INFO:Uploading model into container now
2024-12-12 17:15:07,429:INFO:_master_model_container: 18
2024-12-12 17:15:07,429:INFO:_display_container: 2
2024-12-12 17:15:07,429:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:07,429:INFO:create_model() successfully completed......................................
2024-12-12 17:15:07,534:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:07,534:INFO:Creating metrics dataframe
2024-12-12 17:15:07,536:INFO:Initializing Dummy Regressor
2024-12-12 17:15:07,536:INFO:Total runtime is 0.1856642206509908 minutes
2024-12-12 17:15:07,536:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:07,536:INFO:Initializing create_model()
2024-12-12 17:15:07,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33BB54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:07,537:INFO:Checking exceptions
2024-12-12 17:15:07,537:INFO:Importing libraries
2024-12-12 17:15:07,537:INFO:Copying training dataset
2024-12-12 17:15:07,539:INFO:Defining folds
2024-12-12 17:15:07,539:INFO:Declaring metric variables
2024-12-12 17:15:07,540:INFO:Importing untrained model
2024-12-12 17:15:07,540:INFO:Dummy Regressor Imported successfully
2024-12-12 17:15:07,540:INFO:Starting cross validation
2024-12-12 17:15:07,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:07,591:INFO:Calculating mean and std
2024-12-12 17:15:07,591:INFO:Creating metrics dataframe
2024-12-12 17:15:07,592:INFO:Uploading results into container
2024-12-12 17:15:07,592:INFO:Uploading model into container now
2024-12-12 17:15:07,592:INFO:_master_model_container: 19
2024-12-12 17:15:07,592:INFO:_display_container: 2
2024-12-12 17:15:07,592:INFO:DummyRegressor()
2024-12-12 17:15:07,592:INFO:create_model() successfully completed......................................
2024-12-12 17:15:07,671:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:07,671:INFO:Creating metrics dataframe
2024-12-12 17:15:07,675:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-12 17:15:07,676:INFO:Initializing create_model()
2024-12-12 17:15:07,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:07,676:INFO:Checking exceptions
2024-12-12 17:15:07,677:INFO:Importing libraries
2024-12-12 17:15:07,677:INFO:Copying training dataset
2024-12-12 17:15:07,679:INFO:Defining folds
2024-12-12 17:15:07,679:INFO:Declaring metric variables
2024-12-12 17:15:07,679:INFO:Importing untrained model
2024-12-12 17:15:07,679:INFO:Declaring custom model
2024-12-12 17:15:07,679:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:07,680:INFO:Cross validation set to False
2024-12-12 17:15:07,680:INFO:Fitting Model
2024-12-12 17:15:07,778:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:07,778:INFO:create_model() successfully completed......................................
2024-12-12 17:15:07,856:INFO:Initializing create_model()
2024-12-12 17:15:07,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LGBMRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:07,856:INFO:Checking exceptions
2024-12-12 17:15:07,856:INFO:Importing libraries
2024-12-12 17:15:07,856:INFO:Copying training dataset
2024-12-12 17:15:07,859:INFO:Defining folds
2024-12-12 17:15:07,867:INFO:Declaring metric variables
2024-12-12 17:15:07,867:INFO:Importing untrained model
2024-12-12 17:15:07,867:INFO:Declaring custom model
2024-12-12 17:15:07,867:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:07,868:INFO:Cross validation set to False
2024-12-12 17:15:07,868:INFO:Fitting Model
2024-12-12 17:15:07,873:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000031 seconds.
2024-12-12 17:15:07,873:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-12 17:15:07,873:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-12 17:15:07,873:INFO:[LightGBM] [Info] Total Bins 48
2024-12-12 17:15:07,873:INFO:[LightGBM] [Info] Number of data points in the train set: 62, number of used features: 7
2024-12-12 17:15:07,873:INFO:[LightGBM] [Info] Start training from score 43.722936
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:07,898:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:07,898:INFO:create_model() successfully completed......................................
2024-12-12 17:15:07,994:INFO:Initializing create_model()
2024-12-12 17:15:07,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:07,994:INFO:Checking exceptions
2024-12-12 17:15:07,994:INFO:Importing libraries
2024-12-12 17:15:07,994:INFO:Copying training dataset
2024-12-12 17:15:07,994:INFO:Defining folds
2024-12-12 17:15:07,994:INFO:Declaring metric variables
2024-12-12 17:15:07,994:INFO:Importing untrained model
2024-12-12 17:15:07,994:INFO:Declaring custom model
2024-12-12 17:15:07,994:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:07,994:INFO:Cross validation set to False
2024-12-12 17:15:07,994:INFO:Fitting Model
2024-12-12 17:15:08,070:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:08,070:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,147:INFO:Initializing create_model()
2024-12-12 17:15:08,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,147:INFO:Checking exceptions
2024-12-12 17:15:08,147:INFO:Importing libraries
2024-12-12 17:15:08,147:INFO:Copying training dataset
2024-12-12 17:15:08,147:INFO:Defining folds
2024-12-12 17:15:08,147:INFO:Declaring metric variables
2024-12-12 17:15:08,147:INFO:Importing untrained model
2024-12-12 17:15:08,147:INFO:Declaring custom model
2024-12-12 17:15:08,147:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:08,147:INFO:Cross validation set to False
2024-12-12 17:15:08,147:INFO:Fitting Model
2024-12-12 17:15:08,157:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:08,157:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,229:INFO:Initializing create_model()
2024-12-12 17:15:08,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=GradientBoostingRegressor(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,229:INFO:Checking exceptions
2024-12-12 17:15:08,229:INFO:Importing libraries
2024-12-12 17:15:08,229:INFO:Copying training dataset
2024-12-12 17:15:08,229:INFO:Defining folds
2024-12-12 17:15:08,229:INFO:Declaring metric variables
2024-12-12 17:15:08,229:INFO:Importing untrained model
2024-12-12 17:15:08,229:INFO:Declaring custom model
2024-12-12 17:15:08,229:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:08,244:INFO:Cross validation set to False
2024-12-12 17:15:08,244:INFO:Fitting Model
2024-12-12 17:15:08,287:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:08,287:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,361:INFO:Initializing create_model()
2024-12-12 17:15:08,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=AdaBoostRegressor(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,361:INFO:Checking exceptions
2024-12-12 17:15:08,361:INFO:Importing libraries
2024-12-12 17:15:08,361:INFO:Copying training dataset
2024-12-12 17:15:08,372:INFO:Defining folds
2024-12-12 17:15:08,372:INFO:Declaring metric variables
2024-12-12 17:15:08,372:INFO:Importing untrained model
2024-12-12 17:15:08,372:INFO:Declaring custom model
2024-12-12 17:15:08,372:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:15:08,372:INFO:Cross validation set to False
2024-12-12 17:15:08,372:INFO:Fitting Model
2024-12-12 17:15:08,407:INFO:AdaBoostRegressor(random_state=8196)
2024-12-12 17:15:08,407:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,478:INFO:Initializing create_model()
2024-12-12 17:15:08,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,478:INFO:Checking exceptions
2024-12-12 17:15:08,478:INFO:Importing libraries
2024-12-12 17:15:08,478:INFO:Copying training dataset
2024-12-12 17:15:08,478:INFO:Defining folds
2024-12-12 17:15:08,478:INFO:Declaring metric variables
2024-12-12 17:15:08,478:INFO:Importing untrained model
2024-12-12 17:15:08,478:INFO:Declaring custom model
2024-12-12 17:15:08,478:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:15:08,478:INFO:Cross validation set to False
2024-12-12 17:15:08,478:INFO:Fitting Model
2024-12-12 17:15:08,494:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:15:08,494:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,572:INFO:Initializing create_model()
2024-12-12 17:15:08,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,572:INFO:Checking exceptions
2024-12-12 17:15:08,572:INFO:Importing libraries
2024-12-12 17:15:08,572:INFO:Copying training dataset
2024-12-12 17:15:08,573:INFO:Defining folds
2024-12-12 17:15:08,573:INFO:Declaring metric variables
2024-12-12 17:15:08,573:INFO:Importing untrained model
2024-12-12 17:15:08,573:INFO:Declaring custom model
2024-12-12 17:15:08,573:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:15:08,573:INFO:Cross validation set to False
2024-12-12 17:15:08,573:INFO:Fitting Model
2024-12-12 17:15:08,573:INFO:BayesianRidge()
2024-12-12 17:15:08,573:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,661:INFO:Initializing create_model()
2024-12-12 17:15:08,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lasso(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,661:INFO:Checking exceptions
2024-12-12 17:15:08,661:INFO:Importing libraries
2024-12-12 17:15:08,661:INFO:Copying training dataset
2024-12-12 17:15:08,663:INFO:Defining folds
2024-12-12 17:15:08,663:INFO:Declaring metric variables
2024-12-12 17:15:08,663:INFO:Importing untrained model
2024-12-12 17:15:08,663:INFO:Declaring custom model
2024-12-12 17:15:08,663:INFO:Lasso Regression Imported successfully
2024-12-12 17:15:08,663:INFO:Cross validation set to False
2024-12-12 17:15:08,663:INFO:Fitting Model
2024-12-12 17:15:08,663:INFO:Lasso(random_state=8196)
2024-12-12 17:15:08,673:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,750:INFO:Initializing create_model()
2024-12-12 17:15:08,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LassoLars(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,750:INFO:Checking exceptions
2024-12-12 17:15:08,750:INFO:Importing libraries
2024-12-12 17:15:08,750:INFO:Copying training dataset
2024-12-12 17:15:08,752:INFO:Defining folds
2024-12-12 17:15:08,752:INFO:Declaring metric variables
2024-12-12 17:15:08,752:INFO:Importing untrained model
2024-12-12 17:15:08,752:INFO:Declaring custom model
2024-12-12 17:15:08,752:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:15:08,752:INFO:Cross validation set to False
2024-12-12 17:15:08,752:INFO:Fitting Model
2024-12-12 17:15:08,758:INFO:LassoLars(random_state=8196)
2024-12-12 17:15:08,758:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,840:INFO:Initializing create_model()
2024-12-12 17:15:08,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ElasticNet(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,840:INFO:Checking exceptions
2024-12-12 17:15:08,841:INFO:Importing libraries
2024-12-12 17:15:08,841:INFO:Copying training dataset
2024-12-12 17:15:08,843:INFO:Defining folds
2024-12-12 17:15:08,843:INFO:Declaring metric variables
2024-12-12 17:15:08,843:INFO:Importing untrained model
2024-12-12 17:15:08,843:INFO:Declaring custom model
2024-12-12 17:15:08,843:INFO:Elastic Net Imported successfully
2024-12-12 17:15:08,843:INFO:Cross validation set to False
2024-12-12 17:15:08,843:INFO:Fitting Model
2024-12-12 17:15:08,848:INFO:ElasticNet(random_state=8196)
2024-12-12 17:15:08,848:INFO:create_model() successfully completed......................................
2024-12-12 17:15:08,926:INFO:Initializing create_model()
2024-12-12 17:15:08,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:08,926:INFO:Checking exceptions
2024-12-12 17:15:08,926:INFO:Importing libraries
2024-12-12 17:15:08,926:INFO:Copying training dataset
2024-12-12 17:15:08,926:INFO:Defining folds
2024-12-12 17:15:08,926:INFO:Declaring metric variables
2024-12-12 17:15:08,926:INFO:Importing untrained model
2024-12-12 17:15:08,926:INFO:Declaring custom model
2024-12-12 17:15:08,926:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:15:08,926:INFO:Cross validation set to False
2024-12-12 17:15:08,926:INFO:Fitting Model
2024-12-12 17:15:08,992:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...)
2024-12-12 17:15:08,992:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,074:INFO:Initializing create_model()
2024-12-12 17:15:09,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Ridge(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:09,074:INFO:Checking exceptions
2024-12-12 17:15:09,074:INFO:Importing libraries
2024-12-12 17:15:09,074:INFO:Copying training dataset
2024-12-12 17:15:09,090:INFO:Defining folds
2024-12-12 17:15:09,090:INFO:Declaring metric variables
2024-12-12 17:15:09,090:INFO:Importing untrained model
2024-12-12 17:15:09,090:INFO:Declaring custom model
2024-12-12 17:15:09,090:INFO:Ridge Regression Imported successfully
2024-12-12 17:15:09,090:INFO:Cross validation set to False
2024-12-12 17:15:09,090:INFO:Fitting Model
2024-12-12 17:15:09,090:INFO:Ridge(random_state=8196)
2024-12-12 17:15:09,090:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,180:INFO:Initializing create_model()
2024-12-12 17:15:09,180:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:09,180:INFO:Checking exceptions
2024-12-12 17:15:09,180:INFO:Importing libraries
2024-12-12 17:15:09,180:INFO:Copying training dataset
2024-12-12 17:15:09,183:INFO:Defining folds
2024-12-12 17:15:09,183:INFO:Declaring metric variables
2024-12-12 17:15:09,183:INFO:Importing untrained model
2024-12-12 17:15:09,183:INFO:Declaring custom model
2024-12-12 17:15:09,183:INFO:Linear Regression Imported successfully
2024-12-12 17:15:09,183:INFO:Cross validation set to False
2024-12-12 17:15:09,184:INFO:Fitting Model
2024-12-12 17:15:09,188:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:15:09,188:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,266:INFO:Initializing create_model()
2024-12-12 17:15:09,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lars(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:09,266:INFO:Checking exceptions
2024-12-12 17:15:09,266:INFO:Importing libraries
2024-12-12 17:15:09,266:INFO:Copying training dataset
2024-12-12 17:15:09,269:INFO:Defining folds
2024-12-12 17:15:09,269:INFO:Declaring metric variables
2024-12-12 17:15:09,269:INFO:Importing untrained model
2024-12-12 17:15:09,269:INFO:Declaring custom model
2024-12-12 17:15:09,269:INFO:Least Angle Regression Imported successfully
2024-12-12 17:15:09,270:INFO:Cross validation set to False
2024-12-12 17:15:09,270:INFO:Fitting Model
2024-12-12 17:15:09,276:INFO:Lars(random_state=8196)
2024-12-12 17:15:09,277:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,339:INFO:Initializing create_model()
2024-12-12 17:15:09,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=DecisionTreeRegressor(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:09,354:INFO:Checking exceptions
2024-12-12 17:15:09,354:INFO:Importing libraries
2024-12-12 17:15:09,354:INFO:Copying training dataset
2024-12-12 17:15:09,355:INFO:Defining folds
2024-12-12 17:15:09,355:INFO:Declaring metric variables
2024-12-12 17:15:09,355:INFO:Importing untrained model
2024-12-12 17:15:09,355:INFO:Declaring custom model
2024-12-12 17:15:09,355:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:15:09,355:INFO:Cross validation set to False
2024-12-12 17:15:09,355:INFO:Fitting Model
2024-12-12 17:15:09,355:INFO:DecisionTreeRegressor(random_state=8196)
2024-12-12 17:15:09,355:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,440:INFO:Initializing create_model()
2024-12-12 17:15:09,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:09,441:INFO:Checking exceptions
2024-12-12 17:15:09,441:INFO:Importing libraries
2024-12-12 17:15:09,441:INFO:Copying training dataset
2024-12-12 17:15:09,441:INFO:Defining folds
2024-12-12 17:15:09,441:INFO:Declaring metric variables
2024-12-12 17:15:09,441:INFO:Importing untrained model
2024-12-12 17:15:09,441:INFO:Declaring custom model
2024-12-12 17:15:09,441:INFO:Dummy Regressor Imported successfully
2024-12-12 17:15:09,441:INFO:Cross validation set to False
2024-12-12 17:15:09,441:INFO:Fitting Model
2024-12-12 17:15:09,441:INFO:DummyRegressor()
2024-12-12 17:15:09,441:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,525:INFO:Initializing create_model()
2024-12-12 17:15:09,527:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:09,527:INFO:Checking exceptions
2024-12-12 17:15:09,527:INFO:Importing libraries
2024-12-12 17:15:09,527:INFO:Copying training dataset
2024-12-12 17:15:09,527:INFO:Defining folds
2024-12-12 17:15:09,527:INFO:Declaring metric variables
2024-12-12 17:15:09,527:INFO:Importing untrained model
2024-12-12 17:15:09,527:INFO:Declaring custom model
2024-12-12 17:15:09,527:INFO:Huber Regressor Imported successfully
2024-12-12 17:15:09,527:INFO:Cross validation set to False
2024-12-12 17:15:09,527:INFO:Fitting Model
2024-12-12 17:15:09,536:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:09,536:INFO:HuberRegressor()
2024-12-12 17:15:09,536:INFO:create_model() successfully completed......................................
2024-12-12 17:15:09,646:INFO:_master_model_container: 19
2024-12-12 17:15:09,646:INFO:_display_container: 2
2024-12-12 17:15:09,649:INFO:[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196), AdaBoostRegressor(random_state=8196), OrthogonalMatchingPursuit(), BayesianRidge(), Lasso(random_state=8196), LassoLars(random_state=8196), ElasticNet(random_state=8196), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...), Ridge(random_state=8196), LinearRegression(n_jobs=-1), Lars(random_state=8196), DecisionTreeRegressor(random_state=8196), DummyRegressor(), HuberRegressor()]
2024-12-12 17:15:09,649:INFO:compare_models() successfully completed......................................
2024-12-12 17:15:09,649:INFO:Initializing predict_model()
2024-12-12 17:15:09,649:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B33A6BBA0>)
2024-12-12 17:15:09,649:INFO:Checking exceptions
2024-12-12 17:15:09,649:INFO:Preloading libraries
2024-12-12 17:15:09,649:INFO:Set up data.
2024-12-12 17:15:09,664:INFO:Set up index.
2024-12-12 17:15:09,715:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:09,806:INFO:Initializing predict_model()
2024-12-12 17:15:09,806:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LGBMRegressor(n_jobs=-1, random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:09,806:INFO:Checking exceptions
2024-12-12 17:15:09,806:INFO:Preloading libraries
2024-12-12 17:15:09,806:INFO:Set up data.
2024-12-12 17:15:09,813:INFO:Set up index.
2024-12-12 17:15:09,826:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:09,932:INFO:Initializing predict_model()
2024-12-12 17:15:09,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:09,932:INFO:Checking exceptions
2024-12-12 17:15:09,932:INFO:Preloading libraries
2024-12-12 17:15:09,932:INFO:Set up data.
2024-12-12 17:15:09,941:INFO:Set up index.
2024-12-12 17:15:09,968:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,058:INFO:Initializing predict_model()
2024-12-12 17:15:10,059:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,059:INFO:Checking exceptions
2024-12-12 17:15:10,059:INFO:Preloading libraries
2024-12-12 17:15:10,059:INFO:Set up data.
2024-12-12 17:15:10,065:INFO:Set up index.
2024-12-12 17:15:10,093:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,174:INFO:Initializing predict_model()
2024-12-12 17:15:10,174:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=GradientBoostingRegressor(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,174:INFO:Checking exceptions
2024-12-12 17:15:10,174:INFO:Preloading libraries
2024-12-12 17:15:10,174:INFO:Set up data.
2024-12-12 17:15:10,191:INFO:Set up index.
2024-12-12 17:15:10,205:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,292:INFO:Initializing predict_model()
2024-12-12 17:15:10,292:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=AdaBoostRegressor(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,292:INFO:Checking exceptions
2024-12-12 17:15:10,292:INFO:Preloading libraries
2024-12-12 17:15:10,292:INFO:Set up data.
2024-12-12 17:15:10,300:INFO:Set up index.
2024-12-12 17:15:10,315:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,388:INFO:Initializing predict_model()
2024-12-12 17:15:10,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,403:INFO:Checking exceptions
2024-12-12 17:15:10,403:INFO:Preloading libraries
2024-12-12 17:15:10,403:INFO:Set up data.
2024-12-12 17:15:10,411:INFO:Set up index.
2024-12-12 17:15:10,421:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,509:INFO:Initializing predict_model()
2024-12-12 17:15:10,509:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,509:INFO:Checking exceptions
2024-12-12 17:15:10,509:INFO:Preloading libraries
2024-12-12 17:15:10,509:INFO:Set up data.
2024-12-12 17:15:10,515:INFO:Set up index.
2024-12-12 17:15:10,529:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,610:INFO:Initializing predict_model()
2024-12-12 17:15:10,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lasso(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,610:INFO:Checking exceptions
2024-12-12 17:15:10,610:INFO:Preloading libraries
2024-12-12 17:15:10,610:INFO:Set up data.
2024-12-12 17:15:10,625:INFO:Set up index.
2024-12-12 17:15:10,637:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,728:INFO:Initializing predict_model()
2024-12-12 17:15:10,728:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LassoLars(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,728:INFO:Checking exceptions
2024-12-12 17:15:10,728:INFO:Preloading libraries
2024-12-12 17:15:10,728:INFO:Set up data.
2024-12-12 17:15:10,735:INFO:Set up index.
2024-12-12 17:15:10,747:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,837:INFO:Initializing predict_model()
2024-12-12 17:15:10,838:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ElasticNet(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,838:INFO:Checking exceptions
2024-12-12 17:15:10,838:INFO:Preloading libraries
2024-12-12 17:15:10,838:INFO:Set up data.
2024-12-12 17:15:10,846:INFO:Set up index.
2024-12-12 17:15:10,858:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:10,944:INFO:Initializing predict_model()
2024-12-12 17:15:10,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:10,944:INFO:Checking exceptions
2024-12-12 17:15:10,944:INFO:Preloading libraries
2024-12-12 17:15:10,944:INFO:Set up data.
2024-12-12 17:15:10,952:INFO:Set up index.
2024-12-12 17:15:10,968:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,077:INFO:Initializing predict_model()
2024-12-12 17:15:11,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Ridge(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:11,077:INFO:Checking exceptions
2024-12-12 17:15:11,077:INFO:Preloading libraries
2024-12-12 17:15:11,077:INFO:Set up data.
2024-12-12 17:15:11,086:INFO:Set up index.
2024-12-12 17:15:11,099:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,186:INFO:Initializing predict_model()
2024-12-12 17:15:11,186:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:11,186:INFO:Checking exceptions
2024-12-12 17:15:11,186:INFO:Preloading libraries
2024-12-12 17:15:11,186:INFO:Set up data.
2024-12-12 17:15:11,193:INFO:Set up index.
2024-12-12 17:15:11,206:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,290:INFO:Initializing predict_model()
2024-12-12 17:15:11,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lars(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:11,290:INFO:Checking exceptions
2024-12-12 17:15:11,290:INFO:Preloading libraries
2024-12-12 17:15:11,290:INFO:Set up data.
2024-12-12 17:15:11,290:INFO:Set up index.
2024-12-12 17:15:11,311:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,398:INFO:Initializing predict_model()
2024-12-12 17:15:11,398:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=DecisionTreeRegressor(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:11,398:INFO:Checking exceptions
2024-12-12 17:15:11,398:INFO:Preloading libraries
2024-12-12 17:15:11,399:INFO:Set up data.
2024-12-12 17:15:11,406:INFO:Set up index.
2024-12-12 17:15:11,416:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,506:INFO:Initializing predict_model()
2024-12-12 17:15:11,506:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:11,506:INFO:Checking exceptions
2024-12-12 17:15:11,506:INFO:Preloading libraries
2024-12-12 17:15:11,506:INFO:Set up data.
2024-12-12 17:15:11,514:INFO:Set up index.
2024-12-12 17:15:11,525:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,617:INFO:Initializing predict_model()
2024-12-12 17:15:11,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FD4CB80>)
2024-12-12 17:15:11,617:INFO:Checking exceptions
2024-12-12 17:15:11,617:INFO:Preloading libraries
2024-12-12 17:15:11,617:INFO:Set up data.
2024-12-12 17:15:11,623:INFO:Set up index.
2024-12-12 17:15:11,635:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:11,725:INFO:Initializing compare_models()
2024-12-12 17:15:11,725:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:15:11,725:INFO:Checking exceptions
2024-12-12 17:15:11,727:INFO:Preparing display monitor
2024-12-12 17:15:11,728:INFO:Initializing Linear Regression
2024-12-12 17:15:11,728:INFO:Total runtime is 0.0 minutes
2024-12-12 17:15:11,728:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:11,728:INFO:Initializing create_model()
2024-12-12 17:15:11,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:11,729:INFO:Checking exceptions
2024-12-12 17:15:11,729:INFO:Importing libraries
2024-12-12 17:15:11,729:INFO:Copying training dataset
2024-12-12 17:15:11,731:INFO:Defining folds
2024-12-12 17:15:11,731:INFO:Declaring metric variables
2024-12-12 17:15:11,731:INFO:Importing untrained model
2024-12-12 17:15:11,731:INFO:Linear Regression Imported successfully
2024-12-12 17:15:11,731:INFO:Starting cross validation
2024-12-12 17:15:11,732:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:11,783:INFO:Calculating mean and std
2024-12-12 17:15:11,784:INFO:Creating metrics dataframe
2024-12-12 17:15:11,786:INFO:Uploading results into container
2024-12-12 17:15:11,786:INFO:Uploading model into container now
2024-12-12 17:15:11,786:INFO:_master_model_container: 20
2024-12-12 17:15:11,786:INFO:_display_container: 21
2024-12-12 17:15:11,786:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:15:11,786:INFO:create_model() successfully completed......................................
2024-12-12 17:15:11,852:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:11,852:INFO:Creating metrics dataframe
2024-12-12 17:15:11,852:INFO:Initializing Lasso Regression
2024-12-12 17:15:11,852:INFO:Total runtime is 0.002068205674489339 minutes
2024-12-12 17:15:11,852:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:11,852:INFO:Initializing create_model()
2024-12-12 17:15:11,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:11,852:INFO:Checking exceptions
2024-12-12 17:15:11,852:INFO:Importing libraries
2024-12-12 17:15:11,852:INFO:Copying training dataset
2024-12-12 17:15:11,868:INFO:Defining folds
2024-12-12 17:15:11,868:INFO:Declaring metric variables
2024-12-12 17:15:11,868:INFO:Importing untrained model
2024-12-12 17:15:11,868:INFO:Lasso Regression Imported successfully
2024-12-12 17:15:11,868:INFO:Starting cross validation
2024-12-12 17:15:11,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:11,921:INFO:Calculating mean and std
2024-12-12 17:15:11,922:INFO:Creating metrics dataframe
2024-12-12 17:15:11,922:INFO:Uploading results into container
2024-12-12 17:15:11,922:INFO:Uploading model into container now
2024-12-12 17:15:11,922:INFO:_master_model_container: 21
2024-12-12 17:15:11,922:INFO:_display_container: 21
2024-12-12 17:15:11,922:INFO:Lasso(random_state=8196)
2024-12-12 17:15:11,922:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,001:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,001:INFO:Creating metrics dataframe
2024-12-12 17:15:12,001:INFO:Initializing Ridge Regression
2024-12-12 17:15:12,001:INFO:Total runtime is 0.004547874132792154 minutes
2024-12-12 17:15:12,001:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,001:INFO:Initializing create_model()
2024-12-12 17:15:12,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,001:INFO:Checking exceptions
2024-12-12 17:15:12,001:INFO:Importing libraries
2024-12-12 17:15:12,001:INFO:Copying training dataset
2024-12-12 17:15:12,001:INFO:Defining folds
2024-12-12 17:15:12,001:INFO:Declaring metric variables
2024-12-12 17:15:12,001:INFO:Importing untrained model
2024-12-12 17:15:12,001:INFO:Ridge Regression Imported successfully
2024-12-12 17:15:12,001:INFO:Starting cross validation
2024-12-12 17:15:12,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,059:INFO:Calculating mean and std
2024-12-12 17:15:12,059:INFO:Creating metrics dataframe
2024-12-12 17:15:12,061:INFO:Uploading results into container
2024-12-12 17:15:12,061:INFO:Uploading model into container now
2024-12-12 17:15:12,061:INFO:_master_model_container: 22
2024-12-12 17:15:12,061:INFO:_display_container: 21
2024-12-12 17:15:12,062:INFO:Ridge(random_state=8196)
2024-12-12 17:15:12,062:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,140:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,140:INFO:Creating metrics dataframe
2024-12-12 17:15:12,143:INFO:Initializing Elastic Net
2024-12-12 17:15:12,143:INFO:Total runtime is 0.006917130947113036 minutes
2024-12-12 17:15:12,143:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,143:INFO:Initializing create_model()
2024-12-12 17:15:12,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,143:INFO:Checking exceptions
2024-12-12 17:15:12,143:INFO:Importing libraries
2024-12-12 17:15:12,143:INFO:Copying training dataset
2024-12-12 17:15:12,143:INFO:Defining folds
2024-12-12 17:15:12,143:INFO:Declaring metric variables
2024-12-12 17:15:12,143:INFO:Importing untrained model
2024-12-12 17:15:12,143:INFO:Elastic Net Imported successfully
2024-12-12 17:15:12,143:INFO:Starting cross validation
2024-12-12 17:15:12,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,209:INFO:Calculating mean and std
2024-12-12 17:15:12,209:INFO:Creating metrics dataframe
2024-12-12 17:15:12,210:INFO:Uploading results into container
2024-12-12 17:15:12,210:INFO:Uploading model into container now
2024-12-12 17:15:12,210:INFO:_master_model_container: 23
2024-12-12 17:15:12,210:INFO:_display_container: 21
2024-12-12 17:15:12,210:INFO:ElasticNet(random_state=8196)
2024-12-12 17:15:12,210:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,291:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,291:INFO:Creating metrics dataframe
2024-12-12 17:15:12,293:INFO:Initializing Least Angle Regression
2024-12-12 17:15:12,293:INFO:Total runtime is 0.009427491823832193 minutes
2024-12-12 17:15:12,293:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,293:INFO:Initializing create_model()
2024-12-12 17:15:12,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,293:INFO:Checking exceptions
2024-12-12 17:15:12,294:INFO:Importing libraries
2024-12-12 17:15:12,294:INFO:Copying training dataset
2024-12-12 17:15:12,296:INFO:Defining folds
2024-12-12 17:15:12,296:INFO:Declaring metric variables
2024-12-12 17:15:12,296:INFO:Importing untrained model
2024-12-12 17:15:12,296:INFO:Least Angle Regression Imported successfully
2024-12-12 17:15:12,296:INFO:Starting cross validation
2024-12-12 17:15:12,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,353:INFO:Calculating mean and std
2024-12-12 17:15:12,353:INFO:Creating metrics dataframe
2024-12-12 17:15:12,353:INFO:Uploading results into container
2024-12-12 17:15:12,353:INFO:Uploading model into container now
2024-12-12 17:15:12,353:INFO:_master_model_container: 24
2024-12-12 17:15:12,357:INFO:_display_container: 21
2024-12-12 17:15:12,357:INFO:Lars(random_state=8196)
2024-12-12 17:15:12,357:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,434:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,434:INFO:Creating metrics dataframe
2024-12-12 17:15:12,436:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:15:12,436:INFO:Total runtime is 0.011805252234141032 minutes
2024-12-12 17:15:12,436:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,436:INFO:Initializing create_model()
2024-12-12 17:15:12,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,436:INFO:Checking exceptions
2024-12-12 17:15:12,436:INFO:Importing libraries
2024-12-12 17:15:12,436:INFO:Copying training dataset
2024-12-12 17:15:12,439:INFO:Defining folds
2024-12-12 17:15:12,439:INFO:Declaring metric variables
2024-12-12 17:15:12,439:INFO:Importing untrained model
2024-12-12 17:15:12,439:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:15:12,439:INFO:Starting cross validation
2024-12-12 17:15:12,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,501:INFO:Calculating mean and std
2024-12-12 17:15:12,501:INFO:Creating metrics dataframe
2024-12-12 17:15:12,501:INFO:Uploading results into container
2024-12-12 17:15:12,501:INFO:Uploading model into container now
2024-12-12 17:15:12,501:INFO:_master_model_container: 25
2024-12-12 17:15:12,501:INFO:_display_container: 21
2024-12-12 17:15:12,501:INFO:LassoLars(random_state=8196)
2024-12-12 17:15:12,501:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,582:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,582:INFO:Creating metrics dataframe
2024-12-12 17:15:12,584:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:15:12,584:INFO:Total runtime is 0.01426991621653239 minutes
2024-12-12 17:15:12,584:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,584:INFO:Initializing create_model()
2024-12-12 17:15:12,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,584:INFO:Checking exceptions
2024-12-12 17:15:12,584:INFO:Importing libraries
2024-12-12 17:15:12,584:INFO:Copying training dataset
2024-12-12 17:15:12,584:INFO:Defining folds
2024-12-12 17:15:12,584:INFO:Declaring metric variables
2024-12-12 17:15:12,584:INFO:Importing untrained model
2024-12-12 17:15:12,584:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:15:12,584:INFO:Starting cross validation
2024-12-12 17:15:12,584:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,638:INFO:Calculating mean and std
2024-12-12 17:15:12,638:INFO:Creating metrics dataframe
2024-12-12 17:15:12,640:INFO:Uploading results into container
2024-12-12 17:15:12,640:INFO:Uploading model into container now
2024-12-12 17:15:12,640:INFO:_master_model_container: 26
2024-12-12 17:15:12,640:INFO:_display_container: 21
2024-12-12 17:15:12,640:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:15:12,640:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,721:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,721:INFO:Creating metrics dataframe
2024-12-12 17:15:12,724:INFO:Initializing Bayesian Ridge
2024-12-12 17:15:12,724:INFO:Total runtime is 0.016598149140675863 minutes
2024-12-12 17:15:12,724:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,724:INFO:Initializing create_model()
2024-12-12 17:15:12,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,724:INFO:Checking exceptions
2024-12-12 17:15:12,724:INFO:Importing libraries
2024-12-12 17:15:12,724:INFO:Copying training dataset
2024-12-12 17:15:12,726:INFO:Defining folds
2024-12-12 17:15:12,726:INFO:Declaring metric variables
2024-12-12 17:15:12,726:INFO:Importing untrained model
2024-12-12 17:15:12,726:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:15:12,727:INFO:Starting cross validation
2024-12-12 17:15:12,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,778:INFO:Calculating mean and std
2024-12-12 17:15:12,778:INFO:Creating metrics dataframe
2024-12-12 17:15:12,780:INFO:Uploading results into container
2024-12-12 17:15:12,780:INFO:Uploading model into container now
2024-12-12 17:15:12,780:INFO:_master_model_container: 27
2024-12-12 17:15:12,780:INFO:_display_container: 21
2024-12-12 17:15:12,780:INFO:BayesianRidge()
2024-12-12 17:15:12,780:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,859:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,859:INFO:Creating metrics dataframe
2024-12-12 17:15:12,861:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:15:12,861:INFO:Total runtime is 0.01889405647913615 minutes
2024-12-12 17:15:12,862:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,862:INFO:Initializing create_model()
2024-12-12 17:15:12,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,862:INFO:Checking exceptions
2024-12-12 17:15:12,862:INFO:Importing libraries
2024-12-12 17:15:12,862:INFO:Copying training dataset
2024-12-12 17:15:12,865:INFO:Defining folds
2024-12-12 17:15:12,865:INFO:Declaring metric variables
2024-12-12 17:15:12,866:INFO:Importing untrained model
2024-12-12 17:15:12,866:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:15:12,866:INFO:Starting cross validation
2024-12-12 17:15:12,866:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:12,917:INFO:Calculating mean and std
2024-12-12 17:15:12,917:INFO:Creating metrics dataframe
2024-12-12 17:15:12,917:INFO:Uploading results into container
2024-12-12 17:15:12,917:INFO:Uploading model into container now
2024-12-12 17:15:12,917:INFO:_master_model_container: 28
2024-12-12 17:15:12,917:INFO:_display_container: 21
2024-12-12 17:15:12,917:INFO:PassiveAggressiveRegressor(random_state=8196)
2024-12-12 17:15:12,917:INFO:create_model() successfully completed......................................
2024-12-12 17:15:12,998:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:12,998:INFO:Creating metrics dataframe
2024-12-12 17:15:12,999:INFO:Initializing Huber Regressor
2024-12-12 17:15:12,999:INFO:Total runtime is 0.021192296346028646 minutes
2024-12-12 17:15:12,999:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:12,999:INFO:Initializing create_model()
2024-12-12 17:15:12,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:12,999:INFO:Checking exceptions
2024-12-12 17:15:12,999:INFO:Importing libraries
2024-12-12 17:15:12,999:INFO:Copying training dataset
2024-12-12 17:15:13,003:INFO:Defining folds
2024-12-12 17:15:13,003:INFO:Declaring metric variables
2024-12-12 17:15:13,003:INFO:Importing untrained model
2024-12-12 17:15:13,003:INFO:Huber Regressor Imported successfully
2024-12-12 17:15:13,003:INFO:Starting cross validation
2024-12-12 17:15:13,005:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:13,046:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,056:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,056:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,056:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,066:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,066:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,066:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,077:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,077:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,077:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:13,097:INFO:Calculating mean and std
2024-12-12 17:15:13,097:INFO:Creating metrics dataframe
2024-12-12 17:15:13,097:INFO:Uploading results into container
2024-12-12 17:15:13,097:INFO:Uploading model into container now
2024-12-12 17:15:13,100:INFO:_master_model_container: 29
2024-12-12 17:15:13,100:INFO:_display_container: 21
2024-12-12 17:15:13,100:INFO:HuberRegressor()
2024-12-12 17:15:13,100:INFO:create_model() successfully completed......................................
2024-12-12 17:15:13,180:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:13,180:INFO:Creating metrics dataframe
2024-12-12 17:15:13,183:INFO:Initializing K Neighbors Regressor
2024-12-12 17:15:13,183:INFO:Total runtime is 0.024247376124064128 minutes
2024-12-12 17:15:13,183:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:13,183:INFO:Initializing create_model()
2024-12-12 17:15:13,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:13,183:INFO:Checking exceptions
2024-12-12 17:15:13,184:INFO:Importing libraries
2024-12-12 17:15:13,184:INFO:Copying training dataset
2024-12-12 17:15:13,186:INFO:Defining folds
2024-12-12 17:15:13,186:INFO:Declaring metric variables
2024-12-12 17:15:13,186:INFO:Importing untrained model
2024-12-12 17:15:13,186:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:13,187:INFO:Starting cross validation
2024-12-12 17:15:13,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:13,258:INFO:Calculating mean and std
2024-12-12 17:15:13,258:INFO:Creating metrics dataframe
2024-12-12 17:15:13,259:INFO:Uploading results into container
2024-12-12 17:15:13,259:INFO:Uploading model into container now
2024-12-12 17:15:13,259:INFO:_master_model_container: 30
2024-12-12 17:15:13,259:INFO:_display_container: 21
2024-12-12 17:15:13,259:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:13,261:INFO:create_model() successfully completed......................................
2024-12-12 17:15:13,341:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:13,341:INFO:Creating metrics dataframe
2024-12-12 17:15:13,343:INFO:Initializing Decision Tree Regressor
2024-12-12 17:15:13,343:INFO:Total runtime is 0.026912720998128255 minutes
2024-12-12 17:15:13,343:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:13,343:INFO:Initializing create_model()
2024-12-12 17:15:13,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:13,343:INFO:Checking exceptions
2024-12-12 17:15:13,343:INFO:Importing libraries
2024-12-12 17:15:13,344:INFO:Copying training dataset
2024-12-12 17:15:13,347:INFO:Defining folds
2024-12-12 17:15:13,347:INFO:Declaring metric variables
2024-12-12 17:15:13,347:INFO:Importing untrained model
2024-12-12 17:15:13,348:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:15:13,348:INFO:Starting cross validation
2024-12-12 17:15:13,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:13,399:INFO:Calculating mean and std
2024-12-12 17:15:13,399:INFO:Creating metrics dataframe
2024-12-12 17:15:13,399:INFO:Uploading results into container
2024-12-12 17:15:13,399:INFO:Uploading model into container now
2024-12-12 17:15:13,399:INFO:_master_model_container: 31
2024-12-12 17:15:13,399:INFO:_display_container: 21
2024-12-12 17:15:13,399:INFO:DecisionTreeRegressor(random_state=8196)
2024-12-12 17:15:13,399:INFO:create_model() successfully completed......................................
2024-12-12 17:15:13,482:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:13,482:INFO:Creating metrics dataframe
2024-12-12 17:15:13,484:INFO:Initializing Random Forest Regressor
2024-12-12 17:15:13,484:INFO:Total runtime is 0.029264779885609944 minutes
2024-12-12 17:15:13,484:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:13,485:INFO:Initializing create_model()
2024-12-12 17:15:13,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:13,485:INFO:Checking exceptions
2024-12-12 17:15:13,485:INFO:Importing libraries
2024-12-12 17:15:13,485:INFO:Copying training dataset
2024-12-12 17:15:13,487:INFO:Defining folds
2024-12-12 17:15:13,487:INFO:Declaring metric variables
2024-12-12 17:15:13,487:INFO:Importing untrained model
2024-12-12 17:15:13,487:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:13,488:INFO:Starting cross validation
2024-12-12 17:15:13,488:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:13,779:INFO:Calculating mean and std
2024-12-12 17:15:13,779:INFO:Creating metrics dataframe
2024-12-12 17:15:13,779:INFO:Uploading results into container
2024-12-12 17:15:13,779:INFO:Uploading model into container now
2024-12-12 17:15:13,779:INFO:_master_model_container: 32
2024-12-12 17:15:13,779:INFO:_display_container: 21
2024-12-12 17:15:13,779:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:13,779:INFO:create_model() successfully completed......................................
2024-12-12 17:15:13,862:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:13,862:INFO:Creating metrics dataframe
2024-12-12 17:15:13,863:INFO:Initializing Extra Trees Regressor
2024-12-12 17:15:13,863:INFO:Total runtime is 0.03559146722157796 minutes
2024-12-12 17:15:13,863:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:13,864:INFO:Initializing create_model()
2024-12-12 17:15:13,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:13,864:INFO:Checking exceptions
2024-12-12 17:15:13,864:INFO:Importing libraries
2024-12-12 17:15:13,864:INFO:Copying training dataset
2024-12-12 17:15:13,865:INFO:Defining folds
2024-12-12 17:15:13,865:INFO:Declaring metric variables
2024-12-12 17:15:13,865:INFO:Importing untrained model
2024-12-12 17:15:13,865:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:13,865:INFO:Starting cross validation
2024-12-12 17:15:13,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:14,105:INFO:Calculating mean and std
2024-12-12 17:15:14,105:INFO:Creating metrics dataframe
2024-12-12 17:15:14,106:INFO:Uploading results into container
2024-12-12 17:15:14,106:INFO:Uploading model into container now
2024-12-12 17:15:14,106:INFO:_master_model_container: 33
2024-12-12 17:15:14,106:INFO:_display_container: 21
2024-12-12 17:15:14,106:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:14,106:INFO:create_model() successfully completed......................................
2024-12-12 17:15:14,187:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:14,187:INFO:Creating metrics dataframe
2024-12-12 17:15:14,189:INFO:Initializing AdaBoost Regressor
2024-12-12 17:15:14,189:INFO:Total runtime is 0.041025420029958085 minutes
2024-12-12 17:15:14,189:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:14,189:INFO:Initializing create_model()
2024-12-12 17:15:14,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:14,190:INFO:Checking exceptions
2024-12-12 17:15:14,190:INFO:Importing libraries
2024-12-12 17:15:14,190:INFO:Copying training dataset
2024-12-12 17:15:14,192:INFO:Defining folds
2024-12-12 17:15:14,192:INFO:Declaring metric variables
2024-12-12 17:15:14,192:INFO:Importing untrained model
2024-12-12 17:15:14,193:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:15:14,193:INFO:Starting cross validation
2024-12-12 17:15:14,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:14,351:INFO:Calculating mean and std
2024-12-12 17:15:14,351:INFO:Creating metrics dataframe
2024-12-12 17:15:14,351:INFO:Uploading results into container
2024-12-12 17:15:14,351:INFO:Uploading model into container now
2024-12-12 17:15:14,351:INFO:_master_model_container: 34
2024-12-12 17:15:14,351:INFO:_display_container: 21
2024-12-12 17:15:14,351:INFO:AdaBoostRegressor(random_state=8196)
2024-12-12 17:15:14,351:INFO:create_model() successfully completed......................................
2024-12-12 17:15:14,434:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:14,434:INFO:Creating metrics dataframe
2024-12-12 17:15:14,436:INFO:Initializing Gradient Boosting Regressor
2024-12-12 17:15:14,436:INFO:Total runtime is 0.045138482252756754 minutes
2024-12-12 17:15:14,436:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:14,437:INFO:Initializing create_model()
2024-12-12 17:15:14,437:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:14,437:INFO:Checking exceptions
2024-12-12 17:15:14,437:INFO:Importing libraries
2024-12-12 17:15:14,437:INFO:Copying training dataset
2024-12-12 17:15:14,439:INFO:Defining folds
2024-12-12 17:15:14,439:INFO:Declaring metric variables
2024-12-12 17:15:14,439:INFO:Importing untrained model
2024-12-12 17:15:14,440:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:14,440:INFO:Starting cross validation
2024-12-12 17:15:14,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:14,577:INFO:Calculating mean and std
2024-12-12 17:15:14,577:INFO:Creating metrics dataframe
2024-12-12 17:15:14,577:INFO:Uploading results into container
2024-12-12 17:15:14,577:INFO:Uploading model into container now
2024-12-12 17:15:14,577:INFO:_master_model_container: 35
2024-12-12 17:15:14,577:INFO:_display_container: 21
2024-12-12 17:15:14,577:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:14,577:INFO:create_model() successfully completed......................................
2024-12-12 17:15:14,661:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:14,661:INFO:Creating metrics dataframe
2024-12-12 17:15:14,663:INFO:Initializing Extreme Gradient Boosting
2024-12-12 17:15:14,663:INFO:Total runtime is 0.0489195982615153 minutes
2024-12-12 17:15:14,664:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:14,664:INFO:Initializing create_model()
2024-12-12 17:15:14,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:14,664:INFO:Checking exceptions
2024-12-12 17:15:14,664:INFO:Importing libraries
2024-12-12 17:15:14,664:INFO:Copying training dataset
2024-12-12 17:15:14,666:INFO:Defining folds
2024-12-12 17:15:14,666:INFO:Declaring metric variables
2024-12-12 17:15:14,666:INFO:Importing untrained model
2024-12-12 17:15:14,667:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:15:14,667:INFO:Starting cross validation
2024-12-12 17:15:14,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:14,789:INFO:Calculating mean and std
2024-12-12 17:15:14,790:INFO:Creating metrics dataframe
2024-12-12 17:15:14,791:INFO:Uploading results into container
2024-12-12 17:15:14,791:INFO:Uploading model into container now
2024-12-12 17:15:14,791:INFO:_master_model_container: 36
2024-12-12 17:15:14,791:INFO:_display_container: 21
2024-12-12 17:15:14,791:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...)
2024-12-12 17:15:14,791:INFO:create_model() successfully completed......................................
2024-12-12 17:15:14,873:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:14,874:INFO:Creating metrics dataframe
2024-12-12 17:15:14,875:INFO:Initializing Light Gradient Boosting Machine
2024-12-12 17:15:14,875:INFO:Total runtime is 0.05245786110560099 minutes
2024-12-12 17:15:14,877:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:14,877:INFO:Initializing create_model()
2024-12-12 17:15:14,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:14,877:INFO:Checking exceptions
2024-12-12 17:15:14,877:INFO:Importing libraries
2024-12-12 17:15:14,877:INFO:Copying training dataset
2024-12-12 17:15:14,878:INFO:Defining folds
2024-12-12 17:15:14,878:INFO:Declaring metric variables
2024-12-12 17:15:14,878:INFO:Importing untrained model
2024-12-12 17:15:14,878:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:14,878:INFO:Starting cross validation
2024-12-12 17:15:14,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:15,290:INFO:Calculating mean and std
2024-12-12 17:15:15,291:INFO:Creating metrics dataframe
2024-12-12 17:15:15,293:INFO:Uploading results into container
2024-12-12 17:15:15,293:INFO:Uploading model into container now
2024-12-12 17:15:15,293:INFO:_master_model_container: 37
2024-12-12 17:15:15,293:INFO:_display_container: 21
2024-12-12 17:15:15,293:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:15,293:INFO:create_model() successfully completed......................................
2024-12-12 17:15:15,393:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:15,395:INFO:Creating metrics dataframe
2024-12-12 17:15:15,397:INFO:Initializing Dummy Regressor
2024-12-12 17:15:15,397:INFO:Total runtime is 0.06115738948186238 minutes
2024-12-12 17:15:15,397:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:15,397:INFO:Initializing create_model()
2024-12-12 17:15:15,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33E46AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:15,397:INFO:Checking exceptions
2024-12-12 17:15:15,397:INFO:Importing libraries
2024-12-12 17:15:15,397:INFO:Copying training dataset
2024-12-12 17:15:15,399:INFO:Defining folds
2024-12-12 17:15:15,399:INFO:Declaring metric variables
2024-12-12 17:15:15,399:INFO:Importing untrained model
2024-12-12 17:15:15,401:INFO:Dummy Regressor Imported successfully
2024-12-12 17:15:15,401:INFO:Starting cross validation
2024-12-12 17:15:15,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:15,453:INFO:Calculating mean and std
2024-12-12 17:15:15,453:INFO:Creating metrics dataframe
2024-12-12 17:15:15,453:INFO:Uploading results into container
2024-12-12 17:15:15,453:INFO:Uploading model into container now
2024-12-12 17:15:15,453:INFO:_master_model_container: 38
2024-12-12 17:15:15,453:INFO:_display_container: 21
2024-12-12 17:15:15,453:INFO:DummyRegressor()
2024-12-12 17:15:15,453:INFO:create_model() successfully completed......................................
2024-12-12 17:15:15,526:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:15,526:INFO:Creating metrics dataframe
2024-12-12 17:15:15,526:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-12 17:15:15,538:INFO:Initializing create_model()
2024-12-12 17:15:15,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:15,538:INFO:Checking exceptions
2024-12-12 17:15:15,538:INFO:Importing libraries
2024-12-12 17:15:15,538:INFO:Copying training dataset
2024-12-12 17:15:15,539:INFO:Defining folds
2024-12-12 17:15:15,539:INFO:Declaring metric variables
2024-12-12 17:15:15,539:INFO:Importing untrained model
2024-12-12 17:15:15,539:INFO:Declaring custom model
2024-12-12 17:15:15,542:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:15,542:INFO:Cross validation set to False
2024-12-12 17:15:15,542:INFO:Fitting Model
2024-12-12 17:15:15,646:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:15,646:INFO:create_model() successfully completed......................................
2024-12-12 17:15:15,724:INFO:Initializing create_model()
2024-12-12 17:15:15,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LGBMRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:15,724:INFO:Checking exceptions
2024-12-12 17:15:15,724:INFO:Importing libraries
2024-12-12 17:15:15,724:INFO:Copying training dataset
2024-12-12 17:15:15,728:INFO:Defining folds
2024-12-12 17:15:15,728:INFO:Declaring metric variables
2024-12-12 17:15:15,728:INFO:Importing untrained model
2024-12-12 17:15:15,728:INFO:Declaring custom model
2024-12-12 17:15:15,728:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:15,728:INFO:Cross validation set to False
2024-12-12 17:15:15,728:INFO:Fitting Model
2024-12-12 17:15:15,728:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000060 seconds.
2024-12-12 17:15:15,728:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-12 17:15:15,728:INFO:[LightGBM] [Info] Total Bins 48
2024-12-12 17:15:15,728:INFO:[LightGBM] [Info] Number of data points in the train set: 62, number of used features: 7
2024-12-12 17:15:15,728:INFO:[LightGBM] [Info] Start training from score 43.722936
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:15,756:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:15,756:INFO:create_model() successfully completed......................................
2024-12-12 17:15:15,851:INFO:Initializing create_model()
2024-12-12 17:15:15,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:15,851:INFO:Checking exceptions
2024-12-12 17:15:15,852:INFO:Importing libraries
2024-12-12 17:15:15,852:INFO:Copying training dataset
2024-12-12 17:15:15,855:INFO:Defining folds
2024-12-12 17:15:15,855:INFO:Declaring metric variables
2024-12-12 17:15:15,855:INFO:Importing untrained model
2024-12-12 17:15:15,855:INFO:Declaring custom model
2024-12-12 17:15:15,856:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:15,856:INFO:Cross validation set to False
2024-12-12 17:15:15,856:INFO:Fitting Model
2024-12-12 17:15:15,931:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:15,931:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,019:INFO:_master_model_container: 38
2024-12-12 17:15:16,019:INFO:_display_container: 21
2024-12-12 17:15:16,019:INFO:[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196)]
2024-12-12 17:15:16,019:INFO:compare_models() successfully completed......................................
2024-12-12 17:15:16,021:INFO:Initializing compare_models()
2024-12-12 17:15:16,021:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:15:16,021:INFO:Checking exceptions
2024-12-12 17:15:16,021:INFO:Preparing display monitor
2024-12-12 17:15:16,021:INFO:Initializing Linear Regression
2024-12-12 17:15:16,021:INFO:Total runtime is 0.0 minutes
2024-12-12 17:15:16,021:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,021:INFO:Initializing create_model()
2024-12-12 17:15:16,021:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,021:INFO:Checking exceptions
2024-12-12 17:15:16,021:INFO:Importing libraries
2024-12-12 17:15:16,021:INFO:Copying training dataset
2024-12-12 17:15:16,026:INFO:Defining folds
2024-12-12 17:15:16,026:INFO:Declaring metric variables
2024-12-12 17:15:16,026:INFO:Importing untrained model
2024-12-12 17:15:16,026:INFO:Linear Regression Imported successfully
2024-12-12 17:15:16,026:INFO:Starting cross validation
2024-12-12 17:15:16,027:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,078:INFO:Calculating mean and std
2024-12-12 17:15:16,078:INFO:Creating metrics dataframe
2024-12-12 17:15:16,079:INFO:Uploading results into container
2024-12-12 17:15:16,079:INFO:Uploading model into container now
2024-12-12 17:15:16,079:INFO:_master_model_container: 39
2024-12-12 17:15:16,079:INFO:_display_container: 22
2024-12-12 17:15:16,079:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:15:16,079:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,160:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:16,160:INFO:Creating metrics dataframe
2024-12-12 17:15:16,162:INFO:Initializing Lasso Regression
2024-12-12 17:15:16,162:INFO:Total runtime is 0.002357141176859538 minutes
2024-12-12 17:15:16,162:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,162:INFO:Initializing create_model()
2024-12-12 17:15:16,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,162:INFO:Checking exceptions
2024-12-12 17:15:16,162:INFO:Importing libraries
2024-12-12 17:15:16,162:INFO:Copying training dataset
2024-12-12 17:15:16,166:INFO:Defining folds
2024-12-12 17:15:16,166:INFO:Declaring metric variables
2024-12-12 17:15:16,166:INFO:Importing untrained model
2024-12-12 17:15:16,166:INFO:Lasso Regression Imported successfully
2024-12-12 17:15:16,166:INFO:Starting cross validation
2024-12-12 17:15:16,166:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,226:INFO:Calculating mean and std
2024-12-12 17:15:16,226:INFO:Creating metrics dataframe
2024-12-12 17:15:16,227:INFO:Uploading results into container
2024-12-12 17:15:16,227:INFO:Uploading model into container now
2024-12-12 17:15:16,227:INFO:_master_model_container: 40
2024-12-12 17:15:16,227:INFO:_display_container: 22
2024-12-12 17:15:16,227:INFO:Lasso(random_state=8196)
2024-12-12 17:15:16,227:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,305:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:16,305:INFO:Creating metrics dataframe
2024-12-12 17:15:16,308:INFO:Initializing Ridge Regression
2024-12-12 17:15:16,308:INFO:Total runtime is 0.004785799980163574 minutes
2024-12-12 17:15:16,308:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,308:INFO:Initializing create_model()
2024-12-12 17:15:16,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,308:INFO:Checking exceptions
2024-12-12 17:15:16,308:INFO:Importing libraries
2024-12-12 17:15:16,308:INFO:Copying training dataset
2024-12-12 17:15:16,308:INFO:Defining folds
2024-12-12 17:15:16,308:INFO:Declaring metric variables
2024-12-12 17:15:16,308:INFO:Importing untrained model
2024-12-12 17:15:16,308:INFO:Ridge Regression Imported successfully
2024-12-12 17:15:16,308:INFO:Starting cross validation
2024-12-12 17:15:16,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,363:INFO:Calculating mean and std
2024-12-12 17:15:16,363:INFO:Creating metrics dataframe
2024-12-12 17:15:16,365:INFO:Uploading results into container
2024-12-12 17:15:16,365:INFO:Uploading model into container now
2024-12-12 17:15:16,365:INFO:_master_model_container: 41
2024-12-12 17:15:16,365:INFO:_display_container: 22
2024-12-12 17:15:16,365:INFO:Ridge(random_state=8196)
2024-12-12 17:15:16,365:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,443:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:16,443:INFO:Creating metrics dataframe
2024-12-12 17:15:16,444:INFO:Initializing Elastic Net
2024-12-12 17:15:16,444:INFO:Total runtime is 0.007062085469563802 minutes
2024-12-12 17:15:16,444:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,444:INFO:Initializing create_model()
2024-12-12 17:15:16,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,446:INFO:Checking exceptions
2024-12-12 17:15:16,446:INFO:Importing libraries
2024-12-12 17:15:16,446:INFO:Copying training dataset
2024-12-12 17:15:16,446:INFO:Defining folds
2024-12-12 17:15:16,446:INFO:Declaring metric variables
2024-12-12 17:15:16,446:INFO:Importing untrained model
2024-12-12 17:15:16,446:INFO:Elastic Net Imported successfully
2024-12-12 17:15:16,446:INFO:Starting cross validation
2024-12-12 17:15:16,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,508:INFO:Calculating mean and std
2024-12-12 17:15:16,508:INFO:Creating metrics dataframe
2024-12-12 17:15:16,508:INFO:Uploading results into container
2024-12-12 17:15:16,508:INFO:Uploading model into container now
2024-12-12 17:15:16,508:INFO:_master_model_container: 42
2024-12-12 17:15:16,508:INFO:_display_container: 22
2024-12-12 17:15:16,508:INFO:ElasticNet(random_state=8196)
2024-12-12 17:15:16,508:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,592:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:16,592:INFO:Creating metrics dataframe
2024-12-12 17:15:16,594:INFO:Initializing Least Angle Regression
2024-12-12 17:15:16,594:INFO:Total runtime is 0.00955049991607666 minutes
2024-12-12 17:15:16,594:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,594:INFO:Initializing create_model()
2024-12-12 17:15:16,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,594:INFO:Checking exceptions
2024-12-12 17:15:16,594:INFO:Importing libraries
2024-12-12 17:15:16,594:INFO:Copying training dataset
2024-12-12 17:15:16,596:INFO:Defining folds
2024-12-12 17:15:16,596:INFO:Declaring metric variables
2024-12-12 17:15:16,596:INFO:Importing untrained model
2024-12-12 17:15:16,597:INFO:Least Angle Regression Imported successfully
2024-12-12 17:15:16,597:INFO:Starting cross validation
2024-12-12 17:15:16,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,657:INFO:Calculating mean and std
2024-12-12 17:15:16,658:INFO:Creating metrics dataframe
2024-12-12 17:15:16,658:INFO:Uploading results into container
2024-12-12 17:15:16,658:INFO:Uploading model into container now
2024-12-12 17:15:16,658:INFO:_master_model_container: 43
2024-12-12 17:15:16,658:INFO:_display_container: 22
2024-12-12 17:15:16,658:INFO:Lars(random_state=8196)
2024-12-12 17:15:16,658:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,740:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:16,740:INFO:Creating metrics dataframe
2024-12-12 17:15:16,742:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:15:16,742:INFO:Total runtime is 0.012023321787516274 minutes
2024-12-12 17:15:16,742:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,742:INFO:Initializing create_model()
2024-12-12 17:15:16,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,742:INFO:Checking exceptions
2024-12-12 17:15:16,742:INFO:Importing libraries
2024-12-12 17:15:16,742:INFO:Copying training dataset
2024-12-12 17:15:16,745:INFO:Defining folds
2024-12-12 17:15:16,745:INFO:Declaring metric variables
2024-12-12 17:15:16,745:INFO:Importing untrained model
2024-12-12 17:15:16,745:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:15:16,745:INFO:Starting cross validation
2024-12-12 17:15:16,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,797:INFO:Calculating mean and std
2024-12-12 17:15:16,797:INFO:Creating metrics dataframe
2024-12-12 17:15:16,797:INFO:Uploading results into container
2024-12-12 17:15:16,797:INFO:Uploading model into container now
2024-12-12 17:15:16,797:INFO:_master_model_container: 44
2024-12-12 17:15:16,797:INFO:_display_container: 22
2024-12-12 17:15:16,797:INFO:LassoLars(random_state=8196)
2024-12-12 17:15:16,797:INFO:create_model() successfully completed......................................
2024-12-12 17:15:16,880:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:16,880:INFO:Creating metrics dataframe
2024-12-12 17:15:16,882:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:15:16,882:INFO:Total runtime is 0.014350140094757078 minutes
2024-12-12 17:15:16,883:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:16,883:INFO:Initializing create_model()
2024-12-12 17:15:16,883:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:16,883:INFO:Checking exceptions
2024-12-12 17:15:16,883:INFO:Importing libraries
2024-12-12 17:15:16,883:INFO:Copying training dataset
2024-12-12 17:15:16,885:INFO:Defining folds
2024-12-12 17:15:16,885:INFO:Declaring metric variables
2024-12-12 17:15:16,886:INFO:Importing untrained model
2024-12-12 17:15:16,886:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:15:16,886:INFO:Starting cross validation
2024-12-12 17:15:16,886:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:16,936:INFO:Calculating mean and std
2024-12-12 17:15:16,937:INFO:Creating metrics dataframe
2024-12-12 17:15:16,938:INFO:Uploading results into container
2024-12-12 17:15:16,938:INFO:Uploading model into container now
2024-12-12 17:15:16,939:INFO:_master_model_container: 45
2024-12-12 17:15:16,939:INFO:_display_container: 22
2024-12-12 17:15:16,939:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:15:16,939:INFO:create_model() successfully completed......................................
2024-12-12 17:15:17,018:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:17,018:INFO:Creating metrics dataframe
2024-12-12 17:15:17,020:INFO:Initializing Bayesian Ridge
2024-12-12 17:15:17,020:INFO:Total runtime is 0.016657801469167073 minutes
2024-12-12 17:15:17,020:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:17,020:INFO:Initializing create_model()
2024-12-12 17:15:17,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:17,020:INFO:Checking exceptions
2024-12-12 17:15:17,020:INFO:Importing libraries
2024-12-12 17:15:17,020:INFO:Copying training dataset
2024-12-12 17:15:17,023:INFO:Defining folds
2024-12-12 17:15:17,023:INFO:Declaring metric variables
2024-12-12 17:15:17,023:INFO:Importing untrained model
2024-12-12 17:15:17,023:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:15:17,023:INFO:Starting cross validation
2024-12-12 17:15:17,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:17,077:INFO:Calculating mean and std
2024-12-12 17:15:17,077:INFO:Creating metrics dataframe
2024-12-12 17:15:17,078:INFO:Uploading results into container
2024-12-12 17:15:17,078:INFO:Uploading model into container now
2024-12-12 17:15:17,078:INFO:_master_model_container: 46
2024-12-12 17:15:17,078:INFO:_display_container: 22
2024-12-12 17:15:17,078:INFO:BayesianRidge()
2024-12-12 17:15:17,078:INFO:create_model() successfully completed......................................
2024-12-12 17:15:17,159:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:17,159:INFO:Creating metrics dataframe
2024-12-12 17:15:17,162:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:15:17,162:INFO:Total runtime is 0.019017410278320313 minutes
2024-12-12 17:15:17,162:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:17,162:INFO:Initializing create_model()
2024-12-12 17:15:17,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:17,162:INFO:Checking exceptions
2024-12-12 17:15:17,162:INFO:Importing libraries
2024-12-12 17:15:17,162:INFO:Copying training dataset
2024-12-12 17:15:17,165:INFO:Defining folds
2024-12-12 17:15:17,165:INFO:Declaring metric variables
2024-12-12 17:15:17,165:INFO:Importing untrained model
2024-12-12 17:15:17,165:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:15:17,165:INFO:Starting cross validation
2024-12-12 17:15:17,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:17,227:INFO:Calculating mean and std
2024-12-12 17:15:17,227:INFO:Creating metrics dataframe
2024-12-12 17:15:17,227:INFO:Uploading results into container
2024-12-12 17:15:17,227:INFO:Uploading model into container now
2024-12-12 17:15:17,227:INFO:_master_model_container: 47
2024-12-12 17:15:17,227:INFO:_display_container: 22
2024-12-12 17:15:17,227:INFO:PassiveAggressiveRegressor(random_state=8196)
2024-12-12 17:15:17,227:INFO:create_model() successfully completed......................................
2024-12-12 17:15:17,308:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:17,308:INFO:Creating metrics dataframe
2024-12-12 17:15:17,310:INFO:Initializing Huber Regressor
2024-12-12 17:15:17,310:INFO:Total runtime is 0.021494551499684652 minutes
2024-12-12 17:15:17,310:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:17,310:INFO:Initializing create_model()
2024-12-12 17:15:17,310:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:17,310:INFO:Checking exceptions
2024-12-12 17:15:17,310:INFO:Importing libraries
2024-12-12 17:15:17,310:INFO:Copying training dataset
2024-12-12 17:15:17,313:INFO:Defining folds
2024-12-12 17:15:17,313:INFO:Declaring metric variables
2024-12-12 17:15:17,313:INFO:Importing untrained model
2024-12-12 17:15:17,313:INFO:Huber Regressor Imported successfully
2024-12-12 17:15:17,313:INFO:Starting cross validation
2024-12-12 17:15:17,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:17,353:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,364:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,365:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,371:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,371:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,378:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,382:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,384:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,395:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,399:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:17,412:INFO:Calculating mean and std
2024-12-12 17:15:17,412:INFO:Creating metrics dataframe
2024-12-12 17:15:17,412:INFO:Uploading results into container
2024-12-12 17:15:17,412:INFO:Uploading model into container now
2024-12-12 17:15:17,412:INFO:_master_model_container: 48
2024-12-12 17:15:17,415:INFO:_display_container: 22
2024-12-12 17:15:17,415:INFO:HuberRegressor()
2024-12-12 17:15:17,415:INFO:create_model() successfully completed......................................
2024-12-12 17:15:17,496:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:17,496:INFO:Creating metrics dataframe
2024-12-12 17:15:17,498:INFO:Initializing K Neighbors Regressor
2024-12-12 17:15:17,498:INFO:Total runtime is 0.02462271849314372 minutes
2024-12-12 17:15:17,498:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:17,498:INFO:Initializing create_model()
2024-12-12 17:15:17,498:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:17,498:INFO:Checking exceptions
2024-12-12 17:15:17,498:INFO:Importing libraries
2024-12-12 17:15:17,498:INFO:Copying training dataset
2024-12-12 17:15:17,501:INFO:Defining folds
2024-12-12 17:15:17,501:INFO:Declaring metric variables
2024-12-12 17:15:17,501:INFO:Importing untrained model
2024-12-12 17:15:17,502:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:17,502:INFO:Starting cross validation
2024-12-12 17:15:17,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:17,583:INFO:Calculating mean and std
2024-12-12 17:15:17,583:INFO:Creating metrics dataframe
2024-12-12 17:15:17,583:INFO:Uploading results into container
2024-12-12 17:15:17,585:INFO:Uploading model into container now
2024-12-12 17:15:17,585:INFO:_master_model_container: 49
2024-12-12 17:15:17,585:INFO:_display_container: 22
2024-12-12 17:15:17,585:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:17,585:INFO:create_model() successfully completed......................................
2024-12-12 17:15:17,664:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:17,666:INFO:Creating metrics dataframe
2024-12-12 17:15:17,668:INFO:Initializing Decision Tree Regressor
2024-12-12 17:15:17,668:INFO:Total runtime is 0.027451694011688232 minutes
2024-12-12 17:15:17,668:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:17,668:INFO:Initializing create_model()
2024-12-12 17:15:17,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:17,668:INFO:Checking exceptions
2024-12-12 17:15:17,669:INFO:Importing libraries
2024-12-12 17:15:17,669:INFO:Copying training dataset
2024-12-12 17:15:17,671:INFO:Defining folds
2024-12-12 17:15:17,672:INFO:Declaring metric variables
2024-12-12 17:15:17,672:INFO:Importing untrained model
2024-12-12 17:15:17,672:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:15:17,672:INFO:Starting cross validation
2024-12-12 17:15:17,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:17,726:INFO:Calculating mean and std
2024-12-12 17:15:17,726:INFO:Creating metrics dataframe
2024-12-12 17:15:17,726:INFO:Uploading results into container
2024-12-12 17:15:17,726:INFO:Uploading model into container now
2024-12-12 17:15:17,726:INFO:_master_model_container: 50
2024-12-12 17:15:17,726:INFO:_display_container: 22
2024-12-12 17:15:17,726:INFO:DecisionTreeRegressor(random_state=8196)
2024-12-12 17:15:17,726:INFO:create_model() successfully completed......................................
2024-12-12 17:15:17,808:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:17,808:INFO:Creating metrics dataframe
2024-12-12 17:15:17,810:INFO:Initializing Random Forest Regressor
2024-12-12 17:15:17,810:INFO:Total runtime is 0.029823875427246092 minutes
2024-12-12 17:15:17,810:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:17,811:INFO:Initializing create_model()
2024-12-12 17:15:17,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:17,811:INFO:Checking exceptions
2024-12-12 17:15:17,811:INFO:Importing libraries
2024-12-12 17:15:17,811:INFO:Copying training dataset
2024-12-12 17:15:17,813:INFO:Defining folds
2024-12-12 17:15:17,813:INFO:Declaring metric variables
2024-12-12 17:15:17,813:INFO:Importing untrained model
2024-12-12 17:15:17,813:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:17,814:INFO:Starting cross validation
2024-12-12 17:15:17,814:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:18,097:INFO:Calculating mean and std
2024-12-12 17:15:18,098:INFO:Creating metrics dataframe
2024-12-12 17:15:18,100:INFO:Uploading results into container
2024-12-12 17:15:18,100:INFO:Uploading model into container now
2024-12-12 17:15:18,100:INFO:_master_model_container: 51
2024-12-12 17:15:18,100:INFO:_display_container: 22
2024-12-12 17:15:18,100:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:18,100:INFO:create_model() successfully completed......................................
2024-12-12 17:15:18,181:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:18,181:INFO:Creating metrics dataframe
2024-12-12 17:15:18,184:INFO:Initializing Extra Trees Regressor
2024-12-12 17:15:18,184:INFO:Total runtime is 0.03606121142705281 minutes
2024-12-12 17:15:18,184:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:18,184:INFO:Initializing create_model()
2024-12-12 17:15:18,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:18,184:INFO:Checking exceptions
2024-12-12 17:15:18,184:INFO:Importing libraries
2024-12-12 17:15:18,184:INFO:Copying training dataset
2024-12-12 17:15:18,188:INFO:Defining folds
2024-12-12 17:15:18,188:INFO:Declaring metric variables
2024-12-12 17:15:18,188:INFO:Importing untrained model
2024-12-12 17:15:18,188:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:18,189:INFO:Starting cross validation
2024-12-12 17:15:18,189:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:18,437:INFO:Calculating mean and std
2024-12-12 17:15:18,437:INFO:Creating metrics dataframe
2024-12-12 17:15:18,437:INFO:Uploading results into container
2024-12-12 17:15:18,437:INFO:Uploading model into container now
2024-12-12 17:15:18,440:INFO:_master_model_container: 52
2024-12-12 17:15:18,440:INFO:_display_container: 22
2024-12-12 17:15:18,440:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:18,440:INFO:create_model() successfully completed......................................
2024-12-12 17:15:18,523:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:18,523:INFO:Creating metrics dataframe
2024-12-12 17:15:18,525:INFO:Initializing AdaBoost Regressor
2024-12-12 17:15:18,526:INFO:Total runtime is 0.041757520039876296 minutes
2024-12-12 17:15:18,526:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:18,526:INFO:Initializing create_model()
2024-12-12 17:15:18,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:18,526:INFO:Checking exceptions
2024-12-12 17:15:18,526:INFO:Importing libraries
2024-12-12 17:15:18,526:INFO:Copying training dataset
2024-12-12 17:15:18,528:INFO:Defining folds
2024-12-12 17:15:18,529:INFO:Declaring metric variables
2024-12-12 17:15:18,529:INFO:Importing untrained model
2024-12-12 17:15:18,529:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:15:18,529:INFO:Starting cross validation
2024-12-12 17:15:18,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:18,684:INFO:Calculating mean and std
2024-12-12 17:15:18,685:INFO:Creating metrics dataframe
2024-12-12 17:15:18,686:INFO:Uploading results into container
2024-12-12 17:15:18,687:INFO:Uploading model into container now
2024-12-12 17:15:18,687:INFO:_master_model_container: 53
2024-12-12 17:15:18,687:INFO:_display_container: 22
2024-12-12 17:15:18,687:INFO:AdaBoostRegressor(random_state=8196)
2024-12-12 17:15:18,687:INFO:create_model() successfully completed......................................
2024-12-12 17:15:18,767:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:18,767:INFO:Creating metrics dataframe
2024-12-12 17:15:18,769:INFO:Initializing Gradient Boosting Regressor
2024-12-12 17:15:18,769:INFO:Total runtime is 0.045813409487406406 minutes
2024-12-12 17:15:18,769:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:18,769:INFO:Initializing create_model()
2024-12-12 17:15:18,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:18,769:INFO:Checking exceptions
2024-12-12 17:15:18,769:INFO:Importing libraries
2024-12-12 17:15:18,769:INFO:Copying training dataset
2024-12-12 17:15:18,773:INFO:Defining folds
2024-12-12 17:15:18,773:INFO:Declaring metric variables
2024-12-12 17:15:18,773:INFO:Importing untrained model
2024-12-12 17:15:18,773:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:18,773:INFO:Starting cross validation
2024-12-12 17:15:18,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:18,906:INFO:Calculating mean and std
2024-12-12 17:15:18,906:INFO:Creating metrics dataframe
2024-12-12 17:15:18,906:INFO:Uploading results into container
2024-12-12 17:15:18,906:INFO:Uploading model into container now
2024-12-12 17:15:18,909:INFO:_master_model_container: 54
2024-12-12 17:15:18,909:INFO:_display_container: 22
2024-12-12 17:15:18,909:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:18,909:INFO:create_model() successfully completed......................................
2024-12-12 17:15:18,989:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:18,989:INFO:Creating metrics dataframe
2024-12-12 17:15:18,991:INFO:Initializing Extreme Gradient Boosting
2024-12-12 17:15:18,991:INFO:Total runtime is 0.0495127002398173 minutes
2024-12-12 17:15:18,991:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:18,992:INFO:Initializing create_model()
2024-12-12 17:15:18,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:18,992:INFO:Checking exceptions
2024-12-12 17:15:18,992:INFO:Importing libraries
2024-12-12 17:15:18,992:INFO:Copying training dataset
2024-12-12 17:15:18,994:INFO:Defining folds
2024-12-12 17:15:18,994:INFO:Declaring metric variables
2024-12-12 17:15:18,994:INFO:Importing untrained model
2024-12-12 17:15:18,994:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:15:18,994:INFO:Starting cross validation
2024-12-12 17:15:18,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:19,106:INFO:Calculating mean and std
2024-12-12 17:15:19,107:INFO:Creating metrics dataframe
2024-12-12 17:15:19,108:INFO:Uploading results into container
2024-12-12 17:15:19,108:INFO:Uploading model into container now
2024-12-12 17:15:19,109:INFO:_master_model_container: 55
2024-12-12 17:15:19,109:INFO:_display_container: 22
2024-12-12 17:15:19,109:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...)
2024-12-12 17:15:19,109:INFO:create_model() successfully completed......................................
2024-12-12 17:15:19,188:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:19,188:INFO:Creating metrics dataframe
2024-12-12 17:15:19,188:INFO:Initializing Light Gradient Boosting Machine
2024-12-12 17:15:19,188:INFO:Total runtime is 0.05279544989267985 minutes
2024-12-12 17:15:19,188:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:19,188:INFO:Initializing create_model()
2024-12-12 17:15:19,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:19,188:INFO:Checking exceptions
2024-12-12 17:15:19,188:INFO:Importing libraries
2024-12-12 17:15:19,188:INFO:Copying training dataset
2024-12-12 17:15:19,197:INFO:Defining folds
2024-12-12 17:15:19,197:INFO:Declaring metric variables
2024-12-12 17:15:19,197:INFO:Importing untrained model
2024-12-12 17:15:19,197:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:19,197:INFO:Starting cross validation
2024-12-12 17:15:19,198:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:19,557:INFO:Calculating mean and std
2024-12-12 17:15:19,557:INFO:Creating metrics dataframe
2024-12-12 17:15:19,557:INFO:Uploading results into container
2024-12-12 17:15:19,557:INFO:Uploading model into container now
2024-12-12 17:15:19,557:INFO:_master_model_container: 56
2024-12-12 17:15:19,557:INFO:_display_container: 22
2024-12-12 17:15:19,557:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:19,557:INFO:create_model() successfully completed......................................
2024-12-12 17:15:19,674:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:19,674:INFO:Creating metrics dataframe
2024-12-12 17:15:19,676:INFO:Initializing Dummy Regressor
2024-12-12 17:15:19,677:INFO:Total runtime is 0.06092880566914876 minutes
2024-12-12 17:15:19,677:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:19,677:INFO:Initializing create_model()
2024-12-12 17:15:19,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34167290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:19,677:INFO:Checking exceptions
2024-12-12 17:15:19,677:INFO:Importing libraries
2024-12-12 17:15:19,677:INFO:Copying training dataset
2024-12-12 17:15:19,680:INFO:Defining folds
2024-12-12 17:15:19,680:INFO:Declaring metric variables
2024-12-12 17:15:19,680:INFO:Importing untrained model
2024-12-12 17:15:19,681:INFO:Dummy Regressor Imported successfully
2024-12-12 17:15:19,681:INFO:Starting cross validation
2024-12-12 17:15:19,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:19,731:INFO:Calculating mean and std
2024-12-12 17:15:19,731:INFO:Creating metrics dataframe
2024-12-12 17:15:19,731:INFO:Uploading results into container
2024-12-12 17:15:19,731:INFO:Uploading model into container now
2024-12-12 17:15:19,731:INFO:_master_model_container: 57
2024-12-12 17:15:19,731:INFO:_display_container: 22
2024-12-12 17:15:19,731:INFO:DummyRegressor()
2024-12-12 17:15:19,731:INFO:create_model() successfully completed......................................
2024-12-12 17:15:19,811:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:19,811:INFO:Creating metrics dataframe
2024-12-12 17:15:19,814:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-12 17:15:19,816:INFO:Initializing create_model()
2024-12-12 17:15:19,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:19,816:INFO:Checking exceptions
2024-12-12 17:15:19,816:INFO:Importing libraries
2024-12-12 17:15:19,816:INFO:Copying training dataset
2024-12-12 17:15:19,816:INFO:Defining folds
2024-12-12 17:15:19,816:INFO:Declaring metric variables
2024-12-12 17:15:19,816:INFO:Importing untrained model
2024-12-12 17:15:19,816:INFO:Declaring custom model
2024-12-12 17:15:19,816:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:19,816:INFO:Cross validation set to False
2024-12-12 17:15:19,816:INFO:Fitting Model
2024-12-12 17:15:19,915:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:19,915:INFO:create_model() successfully completed......................................
2024-12-12 17:15:19,993:INFO:Initializing create_model()
2024-12-12 17:15:19,993:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LGBMRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:19,993:INFO:Checking exceptions
2024-12-12 17:15:19,993:INFO:Importing libraries
2024-12-12 17:15:19,993:INFO:Copying training dataset
2024-12-12 17:15:19,993:INFO:Defining folds
2024-12-12 17:15:19,993:INFO:Declaring metric variables
2024-12-12 17:15:19,993:INFO:Importing untrained model
2024-12-12 17:15:19,993:INFO:Declaring custom model
2024-12-12 17:15:19,993:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:19,993:INFO:Cross validation set to False
2024-12-12 17:15:19,993:INFO:Fitting Model
2024-12-12 17:15:19,993:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000059 seconds.
2024-12-12 17:15:19,993:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-12 17:15:19,993:INFO:[LightGBM] [Info] Total Bins 48
2024-12-12 17:15:19,993:INFO:[LightGBM] [Info] Number of data points in the train set: 62, number of used features: 7
2024-12-12 17:15:19,993:INFO:[LightGBM] [Info] Start training from score 43.722936
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:19,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:20,008:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:20,008:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,118:INFO:Initializing create_model()
2024-12-12 17:15:20,118:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,118:INFO:Checking exceptions
2024-12-12 17:15:20,119:INFO:Importing libraries
2024-12-12 17:15:20,119:INFO:Copying training dataset
2024-12-12 17:15:20,119:INFO:Defining folds
2024-12-12 17:15:20,119:INFO:Declaring metric variables
2024-12-12 17:15:20,119:INFO:Importing untrained model
2024-12-12 17:15:20,119:INFO:Declaring custom model
2024-12-12 17:15:20,119:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:20,123:INFO:Cross validation set to False
2024-12-12 17:15:20,123:INFO:Fitting Model
2024-12-12 17:15:20,199:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:20,199:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,281:INFO:Initializing create_model()
2024-12-12 17:15:20,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,281:INFO:Checking exceptions
2024-12-12 17:15:20,281:INFO:Importing libraries
2024-12-12 17:15:20,281:INFO:Copying training dataset
2024-12-12 17:15:20,281:INFO:Defining folds
2024-12-12 17:15:20,281:INFO:Declaring metric variables
2024-12-12 17:15:20,281:INFO:Importing untrained model
2024-12-12 17:15:20,281:INFO:Declaring custom model
2024-12-12 17:15:20,281:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:20,281:INFO:Cross validation set to False
2024-12-12 17:15:20,281:INFO:Fitting Model
2024-12-12 17:15:20,290:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:20,290:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,357:INFO:Initializing create_model()
2024-12-12 17:15:20,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=GradientBoostingRegressor(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,357:INFO:Checking exceptions
2024-12-12 17:15:20,357:INFO:Importing libraries
2024-12-12 17:15:20,357:INFO:Copying training dataset
2024-12-12 17:15:20,372:INFO:Defining folds
2024-12-12 17:15:20,372:INFO:Declaring metric variables
2024-12-12 17:15:20,373:INFO:Importing untrained model
2024-12-12 17:15:20,373:INFO:Declaring custom model
2024-12-12 17:15:20,373:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:20,373:INFO:Cross validation set to False
2024-12-12 17:15:20,373:INFO:Fitting Model
2024-12-12 17:15:20,418:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:20,418:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,503:INFO:_master_model_container: 57
2024-12-12 17:15:20,503:INFO:_display_container: 22
2024-12-12 17:15:20,503:INFO:[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196)]
2024-12-12 17:15:20,503:INFO:compare_models() successfully completed......................................
2024-12-12 17:15:20,508:INFO:Initializing compare_models()
2024-12-12 17:15:20,508:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=10, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 10, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:15:20,508:INFO:Checking exceptions
2024-12-12 17:15:20,510:INFO:Preparing display monitor
2024-12-12 17:15:20,510:INFO:Initializing Linear Regression
2024-12-12 17:15:20,510:INFO:Total runtime is 0.0 minutes
2024-12-12 17:15:20,510:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:20,510:INFO:Initializing create_model()
2024-12-12 17:15:20,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,510:INFO:Checking exceptions
2024-12-12 17:15:20,510:INFO:Importing libraries
2024-12-12 17:15:20,510:INFO:Copying training dataset
2024-12-12 17:15:20,510:INFO:Defining folds
2024-12-12 17:15:20,510:INFO:Declaring metric variables
2024-12-12 17:15:20,510:INFO:Importing untrained model
2024-12-12 17:15:20,510:INFO:Linear Regression Imported successfully
2024-12-12 17:15:20,510:INFO:Starting cross validation
2024-12-12 17:15:20,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:20,574:INFO:Calculating mean and std
2024-12-12 17:15:20,574:INFO:Creating metrics dataframe
2024-12-12 17:15:20,576:INFO:Uploading results into container
2024-12-12 17:15:20,577:INFO:Uploading model into container now
2024-12-12 17:15:20,577:INFO:_master_model_container: 58
2024-12-12 17:15:20,577:INFO:_display_container: 23
2024-12-12 17:15:20,577:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:15:20,577:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,655:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:20,655:INFO:Creating metrics dataframe
2024-12-12 17:15:20,659:INFO:Initializing Lasso Regression
2024-12-12 17:15:20,659:INFO:Total runtime is 0.002474657694498698 minutes
2024-12-12 17:15:20,659:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:20,659:INFO:Initializing create_model()
2024-12-12 17:15:20,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,659:INFO:Checking exceptions
2024-12-12 17:15:20,659:INFO:Importing libraries
2024-12-12 17:15:20,659:INFO:Copying training dataset
2024-12-12 17:15:20,662:INFO:Defining folds
2024-12-12 17:15:20,662:INFO:Declaring metric variables
2024-12-12 17:15:20,662:INFO:Importing untrained model
2024-12-12 17:15:20,662:INFO:Lasso Regression Imported successfully
2024-12-12 17:15:20,662:INFO:Starting cross validation
2024-12-12 17:15:20,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:20,725:INFO:Calculating mean and std
2024-12-12 17:15:20,725:INFO:Creating metrics dataframe
2024-12-12 17:15:20,726:INFO:Uploading results into container
2024-12-12 17:15:20,727:INFO:Uploading model into container now
2024-12-12 17:15:20,727:INFO:_master_model_container: 59
2024-12-12 17:15:20,727:INFO:_display_container: 23
2024-12-12 17:15:20,727:INFO:Lasso(random_state=8196)
2024-12-12 17:15:20,727:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,806:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:20,806:INFO:Creating metrics dataframe
2024-12-12 17:15:20,808:INFO:Initializing Ridge Regression
2024-12-12 17:15:20,808:INFO:Total runtime is 0.004957409699757893 minutes
2024-12-12 17:15:20,808:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:20,808:INFO:Initializing create_model()
2024-12-12 17:15:20,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,808:INFO:Checking exceptions
2024-12-12 17:15:20,808:INFO:Importing libraries
2024-12-12 17:15:20,808:INFO:Copying training dataset
2024-12-12 17:15:20,811:INFO:Defining folds
2024-12-12 17:15:20,811:INFO:Declaring metric variables
2024-12-12 17:15:20,811:INFO:Importing untrained model
2024-12-12 17:15:20,811:INFO:Ridge Regression Imported successfully
2024-12-12 17:15:20,811:INFO:Starting cross validation
2024-12-12 17:15:20,811:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:20,866:INFO:Calculating mean and std
2024-12-12 17:15:20,866:INFO:Creating metrics dataframe
2024-12-12 17:15:20,866:INFO:Uploading results into container
2024-12-12 17:15:20,866:INFO:Uploading model into container now
2024-12-12 17:15:20,866:INFO:_master_model_container: 60
2024-12-12 17:15:20,866:INFO:_display_container: 23
2024-12-12 17:15:20,866:INFO:Ridge(random_state=8196)
2024-12-12 17:15:20,866:INFO:create_model() successfully completed......................................
2024-12-12 17:15:20,946:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:20,946:INFO:Creating metrics dataframe
2024-12-12 17:15:20,949:INFO:Initializing Elastic Net
2024-12-12 17:15:20,949:INFO:Total runtime is 0.0073158621788024895 minutes
2024-12-12 17:15:20,949:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:20,949:INFO:Initializing create_model()
2024-12-12 17:15:20,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:20,950:INFO:Checking exceptions
2024-12-12 17:15:20,950:INFO:Importing libraries
2024-12-12 17:15:20,950:INFO:Copying training dataset
2024-12-12 17:15:20,950:INFO:Defining folds
2024-12-12 17:15:20,950:INFO:Declaring metric variables
2024-12-12 17:15:20,950:INFO:Importing untrained model
2024-12-12 17:15:20,950:INFO:Elastic Net Imported successfully
2024-12-12 17:15:20,950:INFO:Starting cross validation
2024-12-12 17:15:20,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,015:INFO:Calculating mean and std
2024-12-12 17:15:21,015:INFO:Creating metrics dataframe
2024-12-12 17:15:21,016:INFO:Uploading results into container
2024-12-12 17:15:21,017:INFO:Uploading model into container now
2024-12-12 17:15:21,017:INFO:_master_model_container: 61
2024-12-12 17:15:21,017:INFO:_display_container: 23
2024-12-12 17:15:21,017:INFO:ElasticNet(random_state=8196)
2024-12-12 17:15:21,017:INFO:create_model() successfully completed......................................
2024-12-12 17:15:21,090:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:21,090:INFO:Creating metrics dataframe
2024-12-12 17:15:21,090:INFO:Initializing Least Angle Regression
2024-12-12 17:15:21,090:INFO:Total runtime is 0.009670742352803548 minutes
2024-12-12 17:15:21,090:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:21,090:INFO:Initializing create_model()
2024-12-12 17:15:21,090:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:21,090:INFO:Checking exceptions
2024-12-12 17:15:21,090:INFO:Importing libraries
2024-12-12 17:15:21,090:INFO:Copying training dataset
2024-12-12 17:15:21,100:INFO:Defining folds
2024-12-12 17:15:21,100:INFO:Declaring metric variables
2024-12-12 17:15:21,100:INFO:Importing untrained model
2024-12-12 17:15:21,100:INFO:Least Angle Regression Imported successfully
2024-12-12 17:15:21,100:INFO:Starting cross validation
2024-12-12 17:15:21,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,162:INFO:Calculating mean and std
2024-12-12 17:15:21,162:INFO:Creating metrics dataframe
2024-12-12 17:15:21,163:INFO:Uploading results into container
2024-12-12 17:15:21,163:INFO:Uploading model into container now
2024-12-12 17:15:21,163:INFO:_master_model_container: 62
2024-12-12 17:15:21,163:INFO:_display_container: 23
2024-12-12 17:15:21,163:INFO:Lars(random_state=8196)
2024-12-12 17:15:21,163:INFO:create_model() successfully completed......................................
2024-12-12 17:15:21,241:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:21,241:INFO:Creating metrics dataframe
2024-12-12 17:15:21,241:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:15:21,241:INFO:Total runtime is 0.012187413374582927 minutes
2024-12-12 17:15:21,241:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:21,241:INFO:Initializing create_model()
2024-12-12 17:15:21,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:21,241:INFO:Checking exceptions
2024-12-12 17:15:21,241:INFO:Importing libraries
2024-12-12 17:15:21,241:INFO:Copying training dataset
2024-12-12 17:15:21,241:INFO:Defining folds
2024-12-12 17:15:21,241:INFO:Declaring metric variables
2024-12-12 17:15:21,241:INFO:Importing untrained model
2024-12-12 17:15:21,241:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:15:21,241:INFO:Starting cross validation
2024-12-12 17:15:21,241:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,306:INFO:Calculating mean and std
2024-12-12 17:15:21,306:INFO:Creating metrics dataframe
2024-12-12 17:15:21,308:INFO:Uploading results into container
2024-12-12 17:15:21,308:INFO:Uploading model into container now
2024-12-12 17:15:21,308:INFO:_master_model_container: 63
2024-12-12 17:15:21,308:INFO:_display_container: 23
2024-12-12 17:15:21,308:INFO:LassoLars(random_state=8196)
2024-12-12 17:15:21,308:INFO:create_model() successfully completed......................................
2024-12-12 17:15:21,380:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:21,380:INFO:Creating metrics dataframe
2024-12-12 17:15:21,391:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:15:21,391:INFO:Total runtime is 0.014681243896484375 minutes
2024-12-12 17:15:21,392:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:21,392:INFO:Initializing create_model()
2024-12-12 17:15:21,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:21,392:INFO:Checking exceptions
2024-12-12 17:15:21,392:INFO:Importing libraries
2024-12-12 17:15:21,392:INFO:Copying training dataset
2024-12-12 17:15:21,392:INFO:Defining folds
2024-12-12 17:15:21,392:INFO:Declaring metric variables
2024-12-12 17:15:21,392:INFO:Importing untrained model
2024-12-12 17:15:21,392:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:15:21,392:INFO:Starting cross validation
2024-12-12 17:15:21,392:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,448:INFO:Calculating mean and std
2024-12-12 17:15:21,448:INFO:Creating metrics dataframe
2024-12-12 17:15:21,448:INFO:Uploading results into container
2024-12-12 17:15:21,448:INFO:Uploading model into container now
2024-12-12 17:15:21,448:INFO:_master_model_container: 64
2024-12-12 17:15:21,448:INFO:_display_container: 23
2024-12-12 17:15:21,448:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:15:21,448:INFO:create_model() successfully completed......................................
2024-12-12 17:15:21,530:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:21,530:INFO:Creating metrics dataframe
2024-12-12 17:15:21,530:INFO:Initializing Bayesian Ridge
2024-12-12 17:15:21,530:INFO:Total runtime is 0.016991825898488362 minutes
2024-12-12 17:15:21,530:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:21,530:INFO:Initializing create_model()
2024-12-12 17:15:21,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:21,530:INFO:Checking exceptions
2024-12-12 17:15:21,530:INFO:Importing libraries
2024-12-12 17:15:21,530:INFO:Copying training dataset
2024-12-12 17:15:21,535:INFO:Defining folds
2024-12-12 17:15:21,535:INFO:Declaring metric variables
2024-12-12 17:15:21,535:INFO:Importing untrained model
2024-12-12 17:15:21,535:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:15:21,536:INFO:Starting cross validation
2024-12-12 17:15:21,536:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,586:INFO:Calculating mean and std
2024-12-12 17:15:21,586:INFO:Creating metrics dataframe
2024-12-12 17:15:21,586:INFO:Uploading results into container
2024-12-12 17:15:21,586:INFO:Uploading model into container now
2024-12-12 17:15:21,586:INFO:_master_model_container: 65
2024-12-12 17:15:21,586:INFO:_display_container: 23
2024-12-12 17:15:21,586:INFO:BayesianRidge()
2024-12-12 17:15:21,586:INFO:create_model() successfully completed......................................
2024-12-12 17:15:21,670:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:21,670:INFO:Creating metrics dataframe
2024-12-12 17:15:21,670:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:15:21,670:INFO:Total runtime is 0.019324187437693277 minutes
2024-12-12 17:15:21,670:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:21,670:INFO:Initializing create_model()
2024-12-12 17:15:21,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:21,670:INFO:Checking exceptions
2024-12-12 17:15:21,670:INFO:Importing libraries
2024-12-12 17:15:21,670:INFO:Copying training dataset
2024-12-12 17:15:21,675:INFO:Defining folds
2024-12-12 17:15:21,675:INFO:Declaring metric variables
2024-12-12 17:15:21,675:INFO:Importing untrained model
2024-12-12 17:15:21,675:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:15:21,676:INFO:Starting cross validation
2024-12-12 17:15:21,676:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,739:INFO:Calculating mean and std
2024-12-12 17:15:21,739:INFO:Creating metrics dataframe
2024-12-12 17:15:21,741:INFO:Uploading results into container
2024-12-12 17:15:21,741:INFO:Uploading model into container now
2024-12-12 17:15:21,741:INFO:_master_model_container: 66
2024-12-12 17:15:21,741:INFO:_display_container: 23
2024-12-12 17:15:21,741:INFO:PassiveAggressiveRegressor(random_state=8196)
2024-12-12 17:15:21,741:INFO:create_model() successfully completed......................................
2024-12-12 17:15:21,820:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:21,820:INFO:Creating metrics dataframe
2024-12-12 17:15:21,820:INFO:Initializing Huber Regressor
2024-12-12 17:15:21,820:INFO:Total runtime is 0.0218274712562561 minutes
2024-12-12 17:15:21,820:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:21,820:INFO:Initializing create_model()
2024-12-12 17:15:21,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:21,820:INFO:Checking exceptions
2024-12-12 17:15:21,820:INFO:Importing libraries
2024-12-12 17:15:21,820:INFO:Copying training dataset
2024-12-12 17:15:21,820:INFO:Defining folds
2024-12-12 17:15:21,820:INFO:Declaring metric variables
2024-12-12 17:15:21,820:INFO:Importing untrained model
2024-12-12 17:15:21,820:INFO:Huber Regressor Imported successfully
2024-12-12 17:15:21,820:INFO:Starting cross validation
2024-12-12 17:15:21,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:21,867:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,880:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,881:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,881:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,881:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,888:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,890:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,896:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,897:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,907:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:15:21,919:INFO:Calculating mean and std
2024-12-12 17:15:21,920:INFO:Creating metrics dataframe
2024-12-12 17:15:21,921:INFO:Uploading results into container
2024-12-12 17:15:21,922:INFO:Uploading model into container now
2024-12-12 17:15:21,922:INFO:_master_model_container: 67
2024-12-12 17:15:21,922:INFO:_display_container: 23
2024-12-12 17:15:21,922:INFO:HuberRegressor()
2024-12-12 17:15:21,923:INFO:create_model() successfully completed......................................
2024-12-12 17:15:22,003:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:22,003:INFO:Creating metrics dataframe
2024-12-12 17:15:22,006:INFO:Initializing K Neighbors Regressor
2024-12-12 17:15:22,006:INFO:Total runtime is 0.024926479657491046 minutes
2024-12-12 17:15:22,006:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:22,006:INFO:Initializing create_model()
2024-12-12 17:15:22,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:22,006:INFO:Checking exceptions
2024-12-12 17:15:22,006:INFO:Importing libraries
2024-12-12 17:15:22,006:INFO:Copying training dataset
2024-12-12 17:15:22,008:INFO:Defining folds
2024-12-12 17:15:22,009:INFO:Declaring metric variables
2024-12-12 17:15:22,009:INFO:Importing untrained model
2024-12-12 17:15:22,009:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:22,009:INFO:Starting cross validation
2024-12-12 17:15:22,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:22,089:INFO:Calculating mean and std
2024-12-12 17:15:22,089:INFO:Creating metrics dataframe
2024-12-12 17:15:22,089:INFO:Uploading results into container
2024-12-12 17:15:22,089:INFO:Uploading model into container now
2024-12-12 17:15:22,089:INFO:_master_model_container: 68
2024-12-12 17:15:22,089:INFO:_display_container: 23
2024-12-12 17:15:22,089:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:22,089:INFO:create_model() successfully completed......................................
2024-12-12 17:15:22,173:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:22,174:INFO:Creating metrics dataframe
2024-12-12 17:15:22,176:INFO:Initializing Decision Tree Regressor
2024-12-12 17:15:22,176:INFO:Total runtime is 0.027769990762074787 minutes
2024-12-12 17:15:22,176:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:22,176:INFO:Initializing create_model()
2024-12-12 17:15:22,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:22,176:INFO:Checking exceptions
2024-12-12 17:15:22,176:INFO:Importing libraries
2024-12-12 17:15:22,176:INFO:Copying training dataset
2024-12-12 17:15:22,178:INFO:Defining folds
2024-12-12 17:15:22,178:INFO:Declaring metric variables
2024-12-12 17:15:22,179:INFO:Importing untrained model
2024-12-12 17:15:22,179:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:15:22,179:INFO:Starting cross validation
2024-12-12 17:15:22,179:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:22,238:INFO:Calculating mean and std
2024-12-12 17:15:22,238:INFO:Creating metrics dataframe
2024-12-12 17:15:22,238:INFO:Uploading results into container
2024-12-12 17:15:22,241:INFO:Uploading model into container now
2024-12-12 17:15:22,241:INFO:_master_model_container: 69
2024-12-12 17:15:22,241:INFO:_display_container: 23
2024-12-12 17:15:22,241:INFO:DecisionTreeRegressor(random_state=8196)
2024-12-12 17:15:22,241:INFO:create_model() successfully completed......................................
2024-12-12 17:15:22,323:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:22,323:INFO:Creating metrics dataframe
2024-12-12 17:15:22,325:INFO:Initializing Random Forest Regressor
2024-12-12 17:15:22,325:INFO:Total runtime is 0.030253084500630696 minutes
2024-12-12 17:15:22,325:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:22,326:INFO:Initializing create_model()
2024-12-12 17:15:22,326:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:22,326:INFO:Checking exceptions
2024-12-12 17:15:22,326:INFO:Importing libraries
2024-12-12 17:15:22,326:INFO:Copying training dataset
2024-12-12 17:15:22,328:INFO:Defining folds
2024-12-12 17:15:22,328:INFO:Declaring metric variables
2024-12-12 17:15:22,328:INFO:Importing untrained model
2024-12-12 17:15:22,328:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:22,328:INFO:Starting cross validation
2024-12-12 17:15:22,330:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:22,648:INFO:Calculating mean and std
2024-12-12 17:15:22,648:INFO:Creating metrics dataframe
2024-12-12 17:15:22,650:INFO:Uploading results into container
2024-12-12 17:15:22,650:INFO:Uploading model into container now
2024-12-12 17:15:22,650:INFO:_master_model_container: 70
2024-12-12 17:15:22,650:INFO:_display_container: 23
2024-12-12 17:15:22,650:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:22,650:INFO:create_model() successfully completed......................................
2024-12-12 17:15:22,733:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:22,733:INFO:Creating metrics dataframe
2024-12-12 17:15:22,736:INFO:Initializing Extra Trees Regressor
2024-12-12 17:15:22,736:INFO:Total runtime is 0.03710120519002279 minutes
2024-12-12 17:15:22,736:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:22,736:INFO:Initializing create_model()
2024-12-12 17:15:22,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:22,736:INFO:Checking exceptions
2024-12-12 17:15:22,736:INFO:Importing libraries
2024-12-12 17:15:22,736:INFO:Copying training dataset
2024-12-12 17:15:22,739:INFO:Defining folds
2024-12-12 17:15:22,739:INFO:Declaring metric variables
2024-12-12 17:15:22,739:INFO:Importing untrained model
2024-12-12 17:15:22,740:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:22,740:INFO:Starting cross validation
2024-12-12 17:15:22,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:22,983:INFO:Calculating mean and std
2024-12-12 17:15:22,983:INFO:Creating metrics dataframe
2024-12-12 17:15:22,983:INFO:Uploading results into container
2024-12-12 17:15:22,983:INFO:Uploading model into container now
2024-12-12 17:15:22,983:INFO:_master_model_container: 71
2024-12-12 17:15:22,983:INFO:_display_container: 23
2024-12-12 17:15:22,983:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:22,983:INFO:create_model() successfully completed......................................
2024-12-12 17:15:23,066:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:23,066:INFO:Creating metrics dataframe
2024-12-12 17:15:23,069:INFO:Initializing AdaBoost Regressor
2024-12-12 17:15:23,069:INFO:Total runtime is 0.04265491167704265 minutes
2024-12-12 17:15:23,069:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:23,069:INFO:Initializing create_model()
2024-12-12 17:15:23,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:23,069:INFO:Checking exceptions
2024-12-12 17:15:23,069:INFO:Importing libraries
2024-12-12 17:15:23,069:INFO:Copying training dataset
2024-12-12 17:15:23,072:INFO:Defining folds
2024-12-12 17:15:23,072:INFO:Declaring metric variables
2024-12-12 17:15:23,072:INFO:Importing untrained model
2024-12-12 17:15:23,072:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:15:23,072:INFO:Starting cross validation
2024-12-12 17:15:23,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:23,232:INFO:Calculating mean and std
2024-12-12 17:15:23,232:INFO:Creating metrics dataframe
2024-12-12 17:15:23,232:INFO:Uploading results into container
2024-12-12 17:15:23,232:INFO:Uploading model into container now
2024-12-12 17:15:23,232:INFO:_master_model_container: 72
2024-12-12 17:15:23,232:INFO:_display_container: 23
2024-12-12 17:15:23,232:INFO:AdaBoostRegressor(random_state=8196)
2024-12-12 17:15:23,232:INFO:create_model() successfully completed......................................
2024-12-12 17:15:23,315:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:23,315:INFO:Creating metrics dataframe
2024-12-12 17:15:23,317:INFO:Initializing Gradient Boosting Regressor
2024-12-12 17:15:23,317:INFO:Total runtime is 0.04678440888722738 minutes
2024-12-12 17:15:23,318:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:23,318:INFO:Initializing create_model()
2024-12-12 17:15:23,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:23,318:INFO:Checking exceptions
2024-12-12 17:15:23,318:INFO:Importing libraries
2024-12-12 17:15:23,318:INFO:Copying training dataset
2024-12-12 17:15:23,321:INFO:Defining folds
2024-12-12 17:15:23,321:INFO:Declaring metric variables
2024-12-12 17:15:23,321:INFO:Importing untrained model
2024-12-12 17:15:23,321:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:23,321:INFO:Starting cross validation
2024-12-12 17:15:23,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:23,458:INFO:Calculating mean and std
2024-12-12 17:15:23,458:INFO:Creating metrics dataframe
2024-12-12 17:15:23,460:INFO:Uploading results into container
2024-12-12 17:15:23,460:INFO:Uploading model into container now
2024-12-12 17:15:23,460:INFO:_master_model_container: 73
2024-12-12 17:15:23,460:INFO:_display_container: 23
2024-12-12 17:15:23,460:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:23,460:INFO:create_model() successfully completed......................................
2024-12-12 17:15:23,543:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:23,543:INFO:Creating metrics dataframe
2024-12-12 17:15:23,545:INFO:Initializing Extreme Gradient Boosting
2024-12-12 17:15:23,545:INFO:Total runtime is 0.050573790073394784 minutes
2024-12-12 17:15:23,546:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:23,546:INFO:Initializing create_model()
2024-12-12 17:15:23,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:23,546:INFO:Checking exceptions
2024-12-12 17:15:23,546:INFO:Importing libraries
2024-12-12 17:15:23,546:INFO:Copying training dataset
2024-12-12 17:15:23,548:INFO:Defining folds
2024-12-12 17:15:23,548:INFO:Declaring metric variables
2024-12-12 17:15:23,548:INFO:Importing untrained model
2024-12-12 17:15:23,549:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:15:23,549:INFO:Starting cross validation
2024-12-12 17:15:23,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:23,645:INFO:Calculating mean and std
2024-12-12 17:15:23,645:INFO:Creating metrics dataframe
2024-12-12 17:15:23,645:INFO:Uploading results into container
2024-12-12 17:15:23,645:INFO:Uploading model into container now
2024-12-12 17:15:23,645:INFO:_master_model_container: 74
2024-12-12 17:15:23,645:INFO:_display_container: 23
2024-12-12 17:15:23,649:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...)
2024-12-12 17:15:23,649:INFO:create_model() successfully completed......................................
2024-12-12 17:15:23,730:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:23,730:INFO:Creating metrics dataframe
2024-12-12 17:15:23,731:INFO:Initializing Light Gradient Boosting Machine
2024-12-12 17:15:23,731:INFO:Total runtime is 0.053684926033020025 minutes
2024-12-12 17:15:23,731:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:23,733:INFO:Initializing create_model()
2024-12-12 17:15:23,733:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:23,733:INFO:Checking exceptions
2024-12-12 17:15:23,733:INFO:Importing libraries
2024-12-12 17:15:23,733:INFO:Copying training dataset
2024-12-12 17:15:23,735:INFO:Defining folds
2024-12-12 17:15:23,735:INFO:Declaring metric variables
2024-12-12 17:15:23,736:INFO:Importing untrained model
2024-12-12 17:15:23,736:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:23,736:INFO:Starting cross validation
2024-12-12 17:15:23,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:24,111:INFO:Calculating mean and std
2024-12-12 17:15:24,111:INFO:Creating metrics dataframe
2024-12-12 17:15:24,111:INFO:Uploading results into container
2024-12-12 17:15:24,111:INFO:Uploading model into container now
2024-12-12 17:15:24,111:INFO:_master_model_container: 75
2024-12-12 17:15:24,111:INFO:_display_container: 23
2024-12-12 17:15:24,111:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:24,111:INFO:create_model() successfully completed......................................
2024-12-12 17:15:24,219:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:24,219:INFO:Creating metrics dataframe
2024-12-12 17:15:24,221:INFO:Initializing Dummy Regressor
2024-12-12 17:15:24,221:INFO:Total runtime is 0.061846311887105314 minutes
2024-12-12 17:15:24,221:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:24,222:INFO:Initializing create_model()
2024-12-12 17:15:24,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B338F6250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:24,222:INFO:Checking exceptions
2024-12-12 17:15:24,222:INFO:Importing libraries
2024-12-12 17:15:24,222:INFO:Copying training dataset
2024-12-12 17:15:24,224:INFO:Defining folds
2024-12-12 17:15:24,225:INFO:Declaring metric variables
2024-12-12 17:15:24,225:INFO:Importing untrained model
2024-12-12 17:15:24,225:INFO:Dummy Regressor Imported successfully
2024-12-12 17:15:24,225:INFO:Starting cross validation
2024-12-12 17:15:24,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:24,278:INFO:Calculating mean and std
2024-12-12 17:15:24,278:INFO:Creating metrics dataframe
2024-12-12 17:15:24,278:INFO:Uploading results into container
2024-12-12 17:15:24,278:INFO:Uploading model into container now
2024-12-12 17:15:24,278:INFO:_master_model_container: 76
2024-12-12 17:15:24,278:INFO:_display_container: 23
2024-12-12 17:15:24,278:INFO:DummyRegressor()
2024-12-12 17:15:24,278:INFO:create_model() successfully completed......................................
2024-12-12 17:15:24,357:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:24,357:INFO:Creating metrics dataframe
2024-12-12 17:15:24,362:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-12 17:15:24,364:INFO:Initializing create_model()
2024-12-12 17:15:24,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:24,364:INFO:Checking exceptions
2024-12-12 17:15:24,365:INFO:Importing libraries
2024-12-12 17:15:24,365:INFO:Copying training dataset
2024-12-12 17:15:24,368:INFO:Defining folds
2024-12-12 17:15:24,368:INFO:Declaring metric variables
2024-12-12 17:15:24,368:INFO:Importing untrained model
2024-12-12 17:15:24,368:INFO:Declaring custom model
2024-12-12 17:15:24,368:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:15:24,368:INFO:Cross validation set to False
2024-12-12 17:15:24,368:INFO:Fitting Model
2024-12-12 17:15:24,464:INFO:RandomForestRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:24,464:INFO:create_model() successfully completed......................................
2024-12-12 17:15:24,530:INFO:Initializing create_model()
2024-12-12 17:15:24,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LGBMRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:24,530:INFO:Checking exceptions
2024-12-12 17:15:24,546:INFO:Importing libraries
2024-12-12 17:15:24,546:INFO:Copying training dataset
2024-12-12 17:15:24,546:INFO:Defining folds
2024-12-12 17:15:24,546:INFO:Declaring metric variables
2024-12-12 17:15:24,546:INFO:Importing untrained model
2024-12-12 17:15:24,546:INFO:Declaring custom model
2024-12-12 17:15:24,546:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:15:24,546:INFO:Cross validation set to False
2024-12-12 17:15:24,546:INFO:Fitting Model
2024-12-12 17:15:24,546:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000043 seconds.
2024-12-12 17:15:24,546:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-12 17:15:24,546:INFO:[LightGBM] [Info] Total Bins 48
2024-12-12 17:15:24,546:INFO:[LightGBM] [Info] Number of data points in the train set: 62, number of used features: 7
2024-12-12 17:15:24,546:INFO:[LightGBM] [Info] Start training from score 43.722936
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:15:24,561:INFO:LGBMRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:24,561:INFO:create_model() successfully completed......................................
2024-12-12 17:15:24,671:INFO:Initializing create_model()
2024-12-12 17:15:24,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:24,671:INFO:Checking exceptions
2024-12-12 17:15:24,672:INFO:Importing libraries
2024-12-12 17:15:24,672:INFO:Copying training dataset
2024-12-12 17:15:24,674:INFO:Defining folds
2024-12-12 17:15:24,674:INFO:Declaring metric variables
2024-12-12 17:15:24,674:INFO:Importing untrained model
2024-12-12 17:15:24,674:INFO:Declaring custom model
2024-12-12 17:15:24,675:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:15:24,675:INFO:Cross validation set to False
2024-12-12 17:15:24,676:INFO:Fitting Model
2024-12-12 17:15:24,753:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8196)
2024-12-12 17:15:24,753:INFO:create_model() successfully completed......................................
2024-12-12 17:15:24,829:INFO:Initializing create_model()
2024-12-12 17:15:24,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:24,829:INFO:Checking exceptions
2024-12-12 17:15:24,829:INFO:Importing libraries
2024-12-12 17:15:24,829:INFO:Copying training dataset
2024-12-12 17:15:24,835:INFO:Defining folds
2024-12-12 17:15:24,835:INFO:Declaring metric variables
2024-12-12 17:15:24,835:INFO:Importing untrained model
2024-12-12 17:15:24,836:INFO:Declaring custom model
2024-12-12 17:15:24,836:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:15:24,836:INFO:Cross validation set to False
2024-12-12 17:15:24,837:INFO:Fitting Model
2024-12-12 17:15:24,837:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:15:24,837:INFO:create_model() successfully completed......................................
2024-12-12 17:15:24,921:INFO:Initializing create_model()
2024-12-12 17:15:24,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=GradientBoostingRegressor(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:24,921:INFO:Checking exceptions
2024-12-12 17:15:24,921:INFO:Importing libraries
2024-12-12 17:15:24,921:INFO:Copying training dataset
2024-12-12 17:15:24,921:INFO:Defining folds
2024-12-12 17:15:24,921:INFO:Declaring metric variables
2024-12-12 17:15:24,921:INFO:Importing untrained model
2024-12-12 17:15:24,921:INFO:Declaring custom model
2024-12-12 17:15:24,921:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:15:24,925:INFO:Cross validation set to False
2024-12-12 17:15:24,925:INFO:Fitting Model
2024-12-12 17:15:24,954:INFO:GradientBoostingRegressor(random_state=8196)
2024-12-12 17:15:24,954:INFO:create_model() successfully completed......................................
2024-12-12 17:15:25,043:INFO:Initializing create_model()
2024-12-12 17:15:25,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=AdaBoostRegressor(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:25,043:INFO:Checking exceptions
2024-12-12 17:15:25,043:INFO:Importing libraries
2024-12-12 17:15:25,043:INFO:Copying training dataset
2024-12-12 17:15:25,049:INFO:Defining folds
2024-12-12 17:15:25,049:INFO:Declaring metric variables
2024-12-12 17:15:25,049:INFO:Importing untrained model
2024-12-12 17:15:25,049:INFO:Declaring custom model
2024-12-12 17:15:25,049:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:15:25,049:INFO:Cross validation set to False
2024-12-12 17:15:25,049:INFO:Fitting Model
2024-12-12 17:15:25,083:INFO:AdaBoostRegressor(random_state=8196)
2024-12-12 17:15:25,083:INFO:create_model() successfully completed......................................
2024-12-12 17:15:25,163:INFO:Initializing create_model()
2024-12-12 17:15:25,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:25,163:INFO:Checking exceptions
2024-12-12 17:15:25,164:INFO:Importing libraries
2024-12-12 17:15:25,164:INFO:Copying training dataset
2024-12-12 17:15:25,166:INFO:Defining folds
2024-12-12 17:15:25,166:INFO:Declaring metric variables
2024-12-12 17:15:25,167:INFO:Importing untrained model
2024-12-12 17:15:25,167:INFO:Declaring custom model
2024-12-12 17:15:25,167:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:15:25,167:INFO:Cross validation set to False
2024-12-12 17:15:25,167:INFO:Fitting Model
2024-12-12 17:15:25,172:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:15:25,172:INFO:create_model() successfully completed......................................
2024-12-12 17:15:25,253:INFO:Initializing create_model()
2024-12-12 17:15:25,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:25,253:INFO:Checking exceptions
2024-12-12 17:15:25,254:INFO:Importing libraries
2024-12-12 17:15:25,254:INFO:Copying training dataset
2024-12-12 17:15:25,257:INFO:Defining folds
2024-12-12 17:15:25,257:INFO:Declaring metric variables
2024-12-12 17:15:25,257:INFO:Importing untrained model
2024-12-12 17:15:25,257:INFO:Declaring custom model
2024-12-12 17:15:25,258:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:15:25,258:INFO:Cross validation set to False
2024-12-12 17:15:25,258:INFO:Fitting Model
2024-12-12 17:15:25,263:INFO:BayesianRidge()
2024-12-12 17:15:25,263:INFO:create_model() successfully completed......................................
2024-12-12 17:15:25,338:INFO:Initializing create_model()
2024-12-12 17:15:25,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lasso(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:25,338:INFO:Checking exceptions
2024-12-12 17:15:25,338:INFO:Importing libraries
2024-12-12 17:15:25,338:INFO:Copying training dataset
2024-12-12 17:15:25,345:INFO:Defining folds
2024-12-12 17:15:25,345:INFO:Declaring metric variables
2024-12-12 17:15:25,345:INFO:Importing untrained model
2024-12-12 17:15:25,345:INFO:Declaring custom model
2024-12-12 17:15:25,346:INFO:Lasso Regression Imported successfully
2024-12-12 17:15:25,346:INFO:Cross validation set to False
2024-12-12 17:15:25,347:INFO:Fitting Model
2024-12-12 17:15:25,348:INFO:Lasso(random_state=8196)
2024-12-12 17:15:25,348:INFO:create_model() successfully completed......................................
2024-12-12 17:15:25,433:INFO:Initializing create_model()
2024-12-12 17:15:25,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LassoLars(random_state=8196), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:25,433:INFO:Checking exceptions
2024-12-12 17:15:25,434:INFO:Importing libraries
2024-12-12 17:15:25,434:INFO:Copying training dataset
2024-12-12 17:15:25,436:INFO:Defining folds
2024-12-12 17:15:25,436:INFO:Declaring metric variables
2024-12-12 17:15:25,436:INFO:Importing untrained model
2024-12-12 17:15:25,436:INFO:Declaring custom model
2024-12-12 17:15:25,437:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:15:25,437:INFO:Cross validation set to False
2024-12-12 17:15:25,437:INFO:Fitting Model
2024-12-12 17:15:25,443:INFO:LassoLars(random_state=8196)
2024-12-12 17:15:25,443:INFO:create_model() successfully completed......................................
2024-12-12 17:15:25,527:INFO:_master_model_container: 76
2024-12-12 17:15:25,527:INFO:_display_container: 23
2024-12-12 17:15:25,527:INFO:[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196), AdaBoostRegressor(random_state=8196), OrthogonalMatchingPursuit(), BayesianRidge(), Lasso(random_state=8196), LassoLars(random_state=8196)]
2024-12-12 17:15:25,527:INFO:compare_models() successfully completed......................................
2024-12-12 17:15:25,527:INFO:Initializing stack_models()
2024-12-12 17:15:25,527:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196)], meta_model=LinearRegression(), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-12 17:15:25,527:INFO:Checking exceptions
2024-12-12 17:15:25,527:INFO:Defining meta model
2024-12-12 17:15:25,539:INFO:Getting model names
2024-12-12 17:15:25,539:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=8196)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=8196)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=8196))]
2024-12-12 17:15:25,539:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:25,543:INFO:Initializing create_model()
2024-12-12 17:15:25,543:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33DA1A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:25,543:INFO:Checking exceptions
2024-12-12 17:15:25,543:INFO:Importing libraries
2024-12-12 17:15:25,543:INFO:Copying training dataset
2024-12-12 17:15:25,548:INFO:Defining folds
2024-12-12 17:15:25,548:INFO:Declaring metric variables
2024-12-12 17:15:25,548:INFO:Importing untrained model
2024-12-12 17:15:25,548:INFO:Declaring custom model
2024-12-12 17:15:25,550:INFO:Stacking Regressor Imported successfully
2024-12-12 17:15:25,552:INFO:Starting cross validation
2024-12-12 17:15:25,552:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:30,251:INFO:Calculating mean and std
2024-12-12 17:15:30,252:INFO:Creating metrics dataframe
2024-12-12 17:15:30,254:INFO:Finalizing model
2024-12-12 17:15:31,161:INFO:Uploading results into container
2024-12-12 17:15:31,161:INFO:Uploading model into container now
2024-12-12 17:15:31,161:INFO:_master_model_container: 77
2024-12-12 17:15:31,161:INFO:_display_container: 24
2024-12-12 17:15:31,167:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:31,167:INFO:create_model() successfully completed......................................
2024-12-12 17:15:31,246:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:31,252:INFO:_master_model_container: 77
2024-12-12 17:15:31,252:INFO:_display_container: 24
2024-12-12 17:15:31,257:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:31,257:INFO:stack_models() successfully completed......................................
2024-12-12 17:15:31,340:INFO:Initializing predict_model()
2024-12-12 17:15:31,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B336979C0>)
2024-12-12 17:15:31,340:INFO:Checking exceptions
2024-12-12 17:15:31,340:INFO:Preloading libraries
2024-12-12 17:15:31,340:INFO:Set up data.
2024-12-12 17:15:31,349:INFO:Set up index.
2024-12-12 17:15:31,405:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:31,530:INFO:Initializing stack_models()
2024-12-12 17:15:31,530:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196)], meta_model=LinearRegression(), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-12 17:15:31,530:INFO:Checking exceptions
2024-12-12 17:15:31,531:INFO:Defining meta model
2024-12-12 17:15:31,532:INFO:Getting model names
2024-12-12 17:15:31,532:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=8196)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=8196)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=8196)), ('K Neighbors Regressor', KNeighborsRegressor(n_jobs=-1)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=8196))]
2024-12-12 17:15:31,532:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:31,536:INFO:Initializing create_model()
2024-12-12 17:15:31,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B337A2750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:31,536:INFO:Checking exceptions
2024-12-12 17:15:31,536:INFO:Importing libraries
2024-12-12 17:15:31,536:INFO:Copying training dataset
2024-12-12 17:15:31,536:INFO:Defining folds
2024-12-12 17:15:31,536:INFO:Declaring metric variables
2024-12-12 17:15:31,536:INFO:Importing untrained model
2024-12-12 17:15:31,536:INFO:Declaring custom model
2024-12-12 17:15:31,536:INFO:Stacking Regressor Imported successfully
2024-12-12 17:15:31,536:INFO:Starting cross validation
2024-12-12 17:15:31,536:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:36,997:INFO:Calculating mean and std
2024-12-12 17:15:36,998:INFO:Creating metrics dataframe
2024-12-12 17:15:36,998:INFO:Finalizing model
2024-12-12 17:15:37,893:INFO:Uploading results into container
2024-12-12 17:15:37,893:INFO:Uploading model into container now
2024-12-12 17:15:37,893:INFO:_master_model_container: 78
2024-12-12 17:15:37,893:INFO:_display_container: 26
2024-12-12 17:15:37,896:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:37,896:INFO:create_model() successfully completed......................................
2024-12-12 17:15:37,980:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:37,983:INFO:_master_model_container: 78
2024-12-12 17:15:37,983:INFO:_display_container: 26
2024-12-12 17:15:37,991:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:37,991:INFO:stack_models() successfully completed......................................
2024-12-12 17:15:38,078:INFO:Initializing predict_model()
2024-12-12 17:15:38,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B33D2A2A0>)
2024-12-12 17:15:38,079:INFO:Checking exceptions
2024-12-12 17:15:38,079:INFO:Preloading libraries
2024-12-12 17:15:38,079:INFO:Set up data.
2024-12-12 17:15:38,088:INFO:Set up index.
2024-12-12 17:15:38,165:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:38,279:INFO:Initializing stack_models()
2024-12-12 17:15:38,279:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196), AdaBoostRegressor(random_state=8196), OrthogonalMatchingPursuit(), BayesianRidge(), Lasso(random_state=8196), LassoLars(random_state=8196)], meta_model=LinearRegression(), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-12 17:15:38,279:INFO:Checking exceptions
2024-12-12 17:15:38,280:INFO:Defining meta model
2024-12-12 17:15:38,282:INFO:Getting model names
2024-12-12 17:15:38,282:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=8196)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=8196)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=8196)), ('K Neighbors Regressor', KNeighborsRegressor(n_jobs=-1)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=8196)), ('AdaBoost Regressor', AdaBoostRegressor(random_state=8196)), ('Orthogonal Matching Pursuit', OrthogonalMatchingPursuit()), ('Bayesian Ridge', BayesianRidge()), ('Lasso Regression', Lasso(random_state=8196)), ('Lasso Least Angle Regression', LassoLars(random_state=8196))]
2024-12-12 17:15:38,284:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:38,291:INFO:Initializing create_model()
2024-12-12 17:15:38,291:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B34449410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:38,291:INFO:Checking exceptions
2024-12-12 17:15:38,291:INFO:Importing libraries
2024-12-12 17:15:38,291:INFO:Copying training dataset
2024-12-12 17:15:38,293:INFO:Defining folds
2024-12-12 17:15:38,293:INFO:Declaring metric variables
2024-12-12 17:15:38,293:INFO:Importing untrained model
2024-12-12 17:15:38,293:INFO:Declaring custom model
2024-12-12 17:15:38,297:INFO:Stacking Regressor Imported successfully
2024-12-12 17:15:38,297:INFO:Starting cross validation
2024-12-12 17:15:38,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:44,536:INFO:Calculating mean and std
2024-12-12 17:15:44,536:INFO:Creating metrics dataframe
2024-12-12 17:15:44,536:INFO:Finalizing model
2024-12-12 17:15:45,451:INFO:Uploading results into container
2024-12-12 17:15:45,451:INFO:Uploading model into container now
2024-12-12 17:15:45,451:INFO:_master_model_container: 79
2024-12-12 17:15:45,451:INFO:_display_container: 28
2024-12-12 17:15:45,451:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:45,451:INFO:create_model() successfully completed......................................
2024-12-12 17:15:45,541:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:45,546:INFO:_master_model_container: 79
2024-12-12 17:15:45,546:INFO:_display_container: 28
2024-12-12 17:15:45,546:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:45,546:INFO:stack_models() successfully completed......................................
2024-12-12 17:15:45,647:INFO:Initializing predict_model()
2024-12-12 17:15:45,647:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:45,647:INFO:Checking exceptions
2024-12-12 17:15:45,647:INFO:Preloading libraries
2024-12-12 17:15:45,647:INFO:Set up data.
2024-12-12 17:15:45,654:INFO:Set up index.
2024-12-12 17:15:45,741:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:45,848:INFO:Initializing predict_model()
2024-12-12 17:15:45,848:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:45,848:INFO:Checking exceptions
2024-12-12 17:15:45,848:INFO:Preloading libraries
2024-12-12 17:15:45,848:INFO:Set up data.
2024-12-12 17:15:45,855:INFO:Set up index.
2024-12-12 17:15:45,881:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:45,963:INFO:Initializing predict_model()
2024-12-12 17:15:45,963:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LGBMRegressor(n_jobs=-1, random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:45,963:INFO:Checking exceptions
2024-12-12 17:15:45,963:INFO:Preloading libraries
2024-12-12 17:15:45,963:INFO:Set up data.
2024-12-12 17:15:45,979:INFO:Set up index.
2024-12-12 17:15:45,991:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,103:INFO:Initializing predict_model()
2024-12-12 17:15:46,103:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,103:INFO:Checking exceptions
2024-12-12 17:15:46,103:INFO:Preloading libraries
2024-12-12 17:15:46,104:INFO:Set up data.
2024-12-12 17:15:46,110:INFO:Set up index.
2024-12-12 17:15:46,139:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,229:INFO:Initializing predict_model()
2024-12-12 17:15:46,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,230:INFO:Checking exceptions
2024-12-12 17:15:46,230:INFO:Preloading libraries
2024-12-12 17:15:46,230:INFO:Set up data.
2024-12-12 17:15:46,237:INFO:Set up index.
2024-12-12 17:15:46,264:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,346:INFO:Initializing predict_model()
2024-12-12 17:15:46,346:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=GradientBoostingRegressor(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,346:INFO:Checking exceptions
2024-12-12 17:15:46,346:INFO:Preloading libraries
2024-12-12 17:15:46,346:INFO:Set up data.
2024-12-12 17:15:46,359:INFO:Set up index.
2024-12-12 17:15:46,370:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,462:INFO:Initializing predict_model()
2024-12-12 17:15:46,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=AdaBoostRegressor(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,462:INFO:Checking exceptions
2024-12-12 17:15:46,462:INFO:Preloading libraries
2024-12-12 17:15:46,462:INFO:Set up data.
2024-12-12 17:15:46,469:INFO:Set up index.
2024-12-12 17:15:46,483:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,574:INFO:Initializing predict_model()
2024-12-12 17:15:46,574:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,574:INFO:Checking exceptions
2024-12-12 17:15:46,574:INFO:Preloading libraries
2024-12-12 17:15:46,574:INFO:Set up data.
2024-12-12 17:15:46,581:INFO:Set up index.
2024-12-12 17:15:46,593:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,684:INFO:Initializing predict_model()
2024-12-12 17:15:46,684:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,684:INFO:Checking exceptions
2024-12-12 17:15:46,684:INFO:Preloading libraries
2024-12-12 17:15:46,684:INFO:Set up data.
2024-12-12 17:15:46,691:INFO:Set up index.
2024-12-12 17:15:46,704:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,794:INFO:Initializing predict_model()
2024-12-12 17:15:46,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lasso(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,794:INFO:Checking exceptions
2024-12-12 17:15:46,794:INFO:Preloading libraries
2024-12-12 17:15:46,794:INFO:Set up data.
2024-12-12 17:15:46,802:INFO:Set up index.
2024-12-12 17:15:46,814:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:46,906:INFO:Initializing predict_model()
2024-12-12 17:15:46,906:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LassoLars(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:46,907:INFO:Checking exceptions
2024-12-12 17:15:46,907:INFO:Preloading libraries
2024-12-12 17:15:46,907:INFO:Set up data.
2024-12-12 17:15:46,914:INFO:Set up index.
2024-12-12 17:15:46,927:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,017:INFO:Initializing predict_model()
2024-12-12 17:15:47,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=ElasticNet(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,017:INFO:Checking exceptions
2024-12-12 17:15:47,017:INFO:Preloading libraries
2024-12-12 17:15:47,017:INFO:Set up data.
2024-12-12 17:15:47,028:INFO:Set up index.
2024-12-12 17:15:47,040:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,131:INFO:Initializing predict_model()
2024-12-12 17:15:47,131:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8196, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,131:INFO:Checking exceptions
2024-12-12 17:15:47,131:INFO:Preloading libraries
2024-12-12 17:15:47,131:INFO:Set up data.
2024-12-12 17:15:47,139:INFO:Set up index.
2024-12-12 17:15:47,153:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,279:INFO:Initializing predict_model()
2024-12-12 17:15:47,279:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Ridge(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,279:INFO:Checking exceptions
2024-12-12 17:15:47,279:INFO:Preloading libraries
2024-12-12 17:15:47,279:INFO:Set up data.
2024-12-12 17:15:47,292:INFO:Set up index.
2024-12-12 17:15:47,304:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,392:INFO:Initializing predict_model()
2024-12-12 17:15:47,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,392:INFO:Checking exceptions
2024-12-12 17:15:47,392:INFO:Preloading libraries
2024-12-12 17:15:47,392:INFO:Set up data.
2024-12-12 17:15:47,402:INFO:Set up index.
2024-12-12 17:15:47,415:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,505:INFO:Initializing predict_model()
2024-12-12 17:15:47,506:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=Lars(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,506:INFO:Checking exceptions
2024-12-12 17:15:47,506:INFO:Preloading libraries
2024-12-12 17:15:47,506:INFO:Set up data.
2024-12-12 17:15:47,512:INFO:Set up index.
2024-12-12 17:15:47,523:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,613:INFO:Initializing predict_model()
2024-12-12 17:15:47,613:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=DecisionTreeRegressor(random_state=8196), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,613:INFO:Checking exceptions
2024-12-12 17:15:47,614:INFO:Preloading libraries
2024-12-12 17:15:47,614:INFO:Set up data.
2024-12-12 17:15:47,621:INFO:Set up index.
2024-12-12 17:15:47,633:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,723:INFO:Initializing predict_model()
2024-12-12 17:15:47,723:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,723:INFO:Checking exceptions
2024-12-12 17:15:47,723:INFO:Preloading libraries
2024-12-12 17:15:47,723:INFO:Set up data.
2024-12-12 17:15:47,730:INFO:Set up index.
2024-12-12 17:15:47,742:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,830:INFO:Initializing predict_model()
2024-12-12 17:15:47,830:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:15:47,830:INFO:Checking exceptions
2024-12-12 17:15:47,830:INFO:Preloading libraries
2024-12-12 17:15:47,830:INFO:Set up data.
2024-12-12 17:15:47,839:INFO:Set up index.
2024-12-12 17:15:47,851:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:47,941:INFO:Initializing stack_models()
2024-12-12 17:15:47,941:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196)], meta_model=LinearRegression(), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-12 17:15:47,941:INFO:Checking exceptions
2024-12-12 17:15:47,942:INFO:Defining meta model
2024-12-12 17:15:47,944:INFO:Getting model names
2024-12-12 17:15:47,944:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=8196)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=8196)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=8196))]
2024-12-12 17:15:47,945:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:47,948:INFO:Initializing create_model()
2024-12-12 17:15:47,948:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33CBD910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:47,948:INFO:Checking exceptions
2024-12-12 17:15:47,948:INFO:Importing libraries
2024-12-12 17:15:47,948:INFO:Copying training dataset
2024-12-12 17:15:47,950:INFO:Defining folds
2024-12-12 17:15:47,950:INFO:Declaring metric variables
2024-12-12 17:15:47,950:INFO:Importing untrained model
2024-12-12 17:15:47,951:INFO:Declaring custom model
2024-12-12 17:15:47,953:INFO:Stacking Regressor Imported successfully
2024-12-12 17:15:47,953:INFO:Starting cross validation
2024-12-12 17:15:47,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:52,729:INFO:Calculating mean and std
2024-12-12 17:15:52,729:INFO:Creating metrics dataframe
2024-12-12 17:15:52,729:INFO:Finalizing model
2024-12-12 17:15:53,566:INFO:Uploading results into container
2024-12-12 17:15:53,567:INFO:Uploading model into container now
2024-12-12 17:15:53,567:INFO:_master_model_container: 80
2024-12-12 17:15:53,567:INFO:_display_container: 48
2024-12-12 17:15:53,570:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:53,571:INFO:create_model() successfully completed......................................
2024-12-12 17:15:53,651:INFO:SubProcess create_model() end ==================================
2024-12-12 17:15:53,657:INFO:_master_model_container: 80
2024-12-12 17:15:53,657:INFO:_display_container: 48
2024-12-12 17:15:53,662:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:53,662:INFO:stack_models() successfully completed......................................
2024-12-12 17:15:53,746:INFO:Initializing predict_model()
2024-12-12 17:15:53,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B33D2A2A0>)
2024-12-12 17:15:53,746:INFO:Checking exceptions
2024-12-12 17:15:53,746:INFO:Preloading libraries
2024-12-12 17:15:53,746:INFO:Set up data.
2024-12-12 17:15:53,754:INFO:Set up index.
2024-12-12 17:15:53,807:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:15:53,920:INFO:Initializing stack_models()
2024-12-12 17:15:53,920:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196)], meta_model=LinearRegression(), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-12 17:15:53,920:INFO:Checking exceptions
2024-12-12 17:15:53,922:INFO:Defining meta model
2024-12-12 17:15:53,923:INFO:Getting model names
2024-12-12 17:15:53,923:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=8196)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=8196)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=8196)), ('K Neighbors Regressor', KNeighborsRegressor(n_jobs=-1)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=8196))]
2024-12-12 17:15:53,924:INFO:SubProcess create_model() called ==================================
2024-12-12 17:15:53,928:INFO:Initializing create_model()
2024-12-12 17:15:53,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B343D8450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:15:53,928:INFO:Checking exceptions
2024-12-12 17:15:53,928:INFO:Importing libraries
2024-12-12 17:15:53,929:INFO:Copying training dataset
2024-12-12 17:15:53,931:INFO:Defining folds
2024-12-12 17:15:53,931:INFO:Declaring metric variables
2024-12-12 17:15:53,931:INFO:Importing untrained model
2024-12-12 17:15:53,931:INFO:Declaring custom model
2024-12-12 17:15:53,933:INFO:Stacking Regressor Imported successfully
2024-12-12 17:15:53,933:INFO:Starting cross validation
2024-12-12 17:15:53,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:15:59,116:INFO:Calculating mean and std
2024-12-12 17:15:59,116:INFO:Creating metrics dataframe
2024-12-12 17:15:59,119:INFO:Finalizing model
2024-12-12 17:15:59,979:INFO:Uploading results into container
2024-12-12 17:15:59,979:INFO:Uploading model into container now
2024-12-12 17:15:59,979:INFO:_master_model_container: 81
2024-12-12 17:15:59,979:INFO:_display_container: 50
2024-12-12 17:15:59,985:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:15:59,985:INFO:create_model() successfully completed......................................
2024-12-12 17:16:00,071:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:00,074:INFO:_master_model_container: 81
2024-12-12 17:16:00,074:INFO:_display_container: 50
2024-12-12 17:16:00,081:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:16:00,081:INFO:stack_models() successfully completed......................................
2024-12-12 17:16:00,170:INFO:Initializing predict_model()
2024-12-12 17:16:00,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7FC94720>)
2024-12-12 17:16:00,170:INFO:Checking exceptions
2024-12-12 17:16:00,170:INFO:Preloading libraries
2024-12-12 17:16:00,170:INFO:Set up data.
2024-12-12 17:16:00,178:INFO:Set up index.
2024-12-12 17:16:00,251:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:00,357:INFO:Initializing stack_models()
2024-12-12 17:16:00,358:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=8196), LGBMRegressor(n_jobs=-1, random_state=8196), ExtraTreesRegressor(n_jobs=-1, random_state=8196), KNeighborsRegressor(n_jobs=-1), GradientBoostingRegressor(random_state=8196), AdaBoostRegressor(random_state=8196), OrthogonalMatchingPursuit(), BayesianRidge(), Lasso(random_state=8196), LassoLars(random_state=8196)], meta_model=LinearRegression(), meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-12-12 17:16:00,358:INFO:Checking exceptions
2024-12-12 17:16:00,359:INFO:Defining meta model
2024-12-12 17:16:00,359:INFO:Getting model names
2024-12-12 17:16:00,361:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=8196)), ('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=8196)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=8196)), ('K Neighbors Regressor', KNeighborsRegressor(n_jobs=-1)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=8196)), ('AdaBoost Regressor', AdaBoostRegressor(random_state=8196)), ('Orthogonal Matching Pursuit', OrthogonalMatchingPursuit()), ('Bayesian Ridge', BayesianRidge()), ('Lasso Regression', Lasso(random_state=8196)), ('Lasso Least Angle Regression', LassoLars(random_state=8196))]
2024-12-12 17:16:00,362:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:00,369:INFO:Initializing create_model()
2024-12-12 17:16:00,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33DD2650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:00,369:INFO:Checking exceptions
2024-12-12 17:16:00,369:INFO:Importing libraries
2024-12-12 17:16:00,369:INFO:Copying training dataset
2024-12-12 17:16:00,372:INFO:Defining folds
2024-12-12 17:16:00,372:INFO:Declaring metric variables
2024-12-12 17:16:00,372:INFO:Importing untrained model
2024-12-12 17:16:00,372:INFO:Declaring custom model
2024-12-12 17:16:00,375:INFO:Stacking Regressor Imported successfully
2024-12-12 17:16:00,375:INFO:Starting cross validation
2024-12-12 17:16:00,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:06,755:INFO:Calculating mean and std
2024-12-12 17:16:06,755:INFO:Creating metrics dataframe
2024-12-12 17:16:06,755:INFO:Finalizing model
2024-12-12 17:16:07,708:INFO:Uploading results into container
2024-12-12 17:16:07,709:INFO:Uploading model into container now
2024-12-12 17:16:07,709:INFO:_master_model_container: 82
2024-12-12 17:16:07,709:INFO:_display_container: 52
2024-12-12 17:16:07,716:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:16:07,716:INFO:create_model() successfully completed......................................
2024-12-12 17:16:07,799:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:07,805:INFO:_master_model_container: 82
2024-12-12 17:16:07,805:INFO:_display_container: 52
2024-12-12 17:16:07,812:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1)
2024-12-12 17:16:07,812:INFO:stack_models() successfully completed......................................
2024-12-12 17:16:07,902:INFO:Initializing predict_model()
2024-12-12 17:16:07,903:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B335FFF10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=8196)),
                              ('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=8196)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1,
                                                   random_state=8196)),
                              ('K Neighbors Regressor',
                               KNeighborsRegressor(n_jobs=-1)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=8196)),
                              ('AdaBoost Regressor',
                               AdaBoostRegressor(random_state=8196)),
                              ('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Lasso Regression', Lasso(random_state=8196)),
                              ('Lasso Least Angle Regression',
                               LassoLars(random_state=8196))],
                  final_estimator=LinearRegression(), n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B34319DA0>)
2024-12-12 17:16:07,903:INFO:Checking exceptions
2024-12-12 17:16:07,903:INFO:Preloading libraries
2024-12-12 17:16:07,903:INFO:Set up data.
2024-12-12 17:16:07,910:INFO:Set up index.
2024-12-12 17:16:07,996:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:08,107:INFO:PyCaret RegressionExperiment
2024-12-12 17:16:08,107:INFO:Logging name: reg-default-name
2024-12-12 17:16:08,107:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-12 17:16:08,107:INFO:version 3.3.2
2024-12-12 17:16:08,107:INFO:Initializing setup()
2024-12-12 17:16:08,108:INFO:self.USI: beb8
2024-12-12 17:16:08,108:INFO:self._variable_keys: {'logging_param', 'idx', 'pipeline', 'data', 'fold_shuffle_param', 'target_param', 'memory', '_ml_usecase', 'log_plots_param', 'y', 'y_test', 'y_train', 'gpu_param', 'USI', 'X_train', 'transform_target_param', 'exp_name_log', '_available_plots', 'X_test', 'fold_groups_param', 'n_jobs_param', 'gpu_n_jobs_param', 'html_param', 'X', 'fold_generator', 'seed', 'exp_id'}
2024-12-12 17:16:08,108:INFO:Checking environment
2024-12-12 17:16:08,108:INFO:python_version: 3.11.3
2024-12-12 17:16:08,108:INFO:python_build: ('tags/v3.11.3:f3909b8', 'Apr  4 2023 23:49:59')
2024-12-12 17:16:08,108:INFO:machine: AMD64
2024-12-12 17:16:08,108:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-12 17:16:08,115:INFO:Memory: svmem(total=16475824128, available=1017872384, percent=93.8, used=15457951744, free=1017872384)
2024-12-12 17:16:08,115:INFO:Physical Core: 6
2024-12-12 17:16:08,115:INFO:Logical Core: 12
2024-12-12 17:16:08,115:INFO:Checking libraries
2024-12-12 17:16:08,115:INFO:System:
2024-12-12 17:16:08,115:INFO:    python: 3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)]
2024-12-12 17:16:08,116:INFO:executable: C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\python.exe
2024-12-12 17:16:08,116:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-12 17:16:08,116:INFO:PyCaret required dependencies:
2024-12-12 17:16:08,116:INFO:                 pip: 24.2
2024-12-12 17:16:08,116:INFO:          setuptools: 67.8.0
2024-12-12 17:16:08,116:INFO:             pycaret: 3.3.2
2024-12-12 17:16:08,116:INFO:             IPython: 8.13.2
2024-12-12 17:16:08,116:INFO:          ipywidgets: 8.1.5
2024-12-12 17:16:08,116:INFO:                tqdm: 4.66.5
2024-12-12 17:16:08,116:INFO:               numpy: 1.23.5
2024-12-12 17:16:08,116:INFO:              pandas: 2.1.4
2024-12-12 17:16:08,116:INFO:              jinja2: 3.1.2
2024-12-12 17:16:08,116:INFO:               scipy: 1.11.4
2024-12-12 17:16:08,116:INFO:              joblib: 1.3.2
2024-12-12 17:16:08,116:INFO:             sklearn: 1.4.2
2024-12-12 17:16:08,116:INFO:                pyod: 2.0.2
2024-12-12 17:16:08,116:INFO:            imblearn: 0.12.3
2024-12-12 17:16:08,116:INFO:   category_encoders: 2.6.3
2024-12-12 17:16:08,116:INFO:            lightgbm: 4.4.0
2024-12-12 17:16:08,116:INFO:               numba: 0.60.0
2024-12-12 17:16:08,116:INFO:            requests: 2.32.3
2024-12-12 17:16:08,116:INFO:          matplotlib: 3.7.5
2024-12-12 17:16:08,116:INFO:          scikitplot: 0.3.7
2024-12-12 17:16:08,116:INFO:         yellowbrick: 1.5
2024-12-12 17:16:08,116:INFO:              plotly: 5.24.0
2024-12-12 17:16:08,116:INFO:    plotly-resampler: Not installed
2024-12-12 17:16:08,116:INFO:             kaleido: 0.2.1
2024-12-12 17:16:08,116:INFO:           schemdraw: 0.15
2024-12-12 17:16:08,116:INFO:         statsmodels: 0.14.2
2024-12-12 17:16:08,116:INFO:              sktime: 0.26.0
2024-12-12 17:16:08,116:INFO:               tbats: 1.1.3
2024-12-12 17:16:08,116:INFO:            pmdarima: 2.0.4
2024-12-12 17:16:08,116:INFO:              psutil: 5.9.5
2024-12-12 17:16:08,116:INFO:          markupsafe: 2.1.2
2024-12-12 17:16:08,116:INFO:             pickle5: Not installed
2024-12-12 17:16:08,116:INFO:         cloudpickle: 3.0.0
2024-12-12 17:16:08,117:INFO:         deprecation: 2.1.0
2024-12-12 17:16:08,117:INFO:              xxhash: 3.5.0
2024-12-12 17:16:08,117:INFO:           wurlitzer: Not installed
2024-12-12 17:16:08,117:INFO:PyCaret optional dependencies:
2024-12-12 17:16:08,117:INFO:                shap: Not installed
2024-12-12 17:16:08,117:INFO:           interpret: Not installed
2024-12-12 17:16:08,117:INFO:                umap: Not installed
2024-12-12 17:16:08,117:INFO:     ydata_profiling: Not installed
2024-12-12 17:16:08,117:INFO:  explainerdashboard: Not installed
2024-12-12 17:16:08,117:INFO:             autoviz: Not installed
2024-12-12 17:16:08,117:INFO:           fairlearn: Not installed
2024-12-12 17:16:08,117:INFO:          deepchecks: Not installed
2024-12-12 17:16:08,117:INFO:             xgboost: 2.1.1
2024-12-12 17:16:08,117:INFO:            catboost: Not installed
2024-12-12 17:16:08,117:INFO:              kmodes: Not installed
2024-12-12 17:16:08,117:INFO:             mlxtend: Not installed
2024-12-12 17:16:08,117:INFO:       statsforecast: Not installed
2024-12-12 17:16:08,117:INFO:        tune_sklearn: Not installed
2024-12-12 17:16:08,117:INFO:                 ray: Not installed
2024-12-12 17:16:08,117:INFO:            hyperopt: Not installed
2024-12-12 17:16:08,117:INFO:              optuna: 3.6.1
2024-12-12 17:16:08,117:INFO:               skopt: Not installed
2024-12-12 17:16:08,117:INFO:              mlflow: Not installed
2024-12-12 17:16:08,117:INFO:              gradio: Not installed
2024-12-12 17:16:08,117:INFO:             fastapi: Not installed
2024-12-12 17:16:08,117:INFO:             uvicorn: Not installed
2024-12-12 17:16:08,117:INFO:              m2cgen: Not installed
2024-12-12 17:16:08,117:INFO:           evidently: Not installed
2024-12-12 17:16:08,117:INFO:               fugue: Not installed
2024-12-12 17:16:08,117:INFO:           streamlit: 1.26.0
2024-12-12 17:16:08,117:INFO:             prophet: Not installed
2024-12-12 17:16:08,118:INFO:None
2024-12-12 17:16:08,118:INFO:Set up data.
2024-12-12 17:16:08,121:INFO:Set up folding strategy.
2024-12-12 17:16:08,121:INFO:Set up train/test split.
2024-12-12 17:16:08,124:INFO:Set up index.
2024-12-12 17:16:08,124:INFO:Assigning column types.
2024-12-12 17:16:08,126:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-12 17:16:08,126:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,126:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,187:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,218:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,232:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,237:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,242:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,359:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,379:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-12 17:16:08,387:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,392:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,482:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,482:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,492:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,542:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,573:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,573:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-12 17:16:08,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,697:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,705:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,755:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,794:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,794:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-12 17:16:08,867:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:08,905:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:08,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:08,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:09,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:09,007:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,007:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-12 17:16:09,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:09,102:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:09,214:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,216:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-12 17:16:09,319:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,419:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,419:INFO:Preparing preprocessing pipeline...
2024-12-12 17:16:09,419:INFO:Set up simple imputation.
2024-12-12 17:16:09,435:INFO:Finished creating preprocessing pipeline.
2024-12-12 17:16:09,447:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\KANAJI~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['layers_1', 'layers_2',
                                             'batch_size_1', 'batch_size_2',
                                             'model1_Param', 'model2_Param',
                                             'model1_FLP', 'model2_FLP'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-12-12 17:16:09,447:INFO:Creating final display dataframe.
2024-12-12 17:16:09,492:INFO:Setup _display_container:                     Description             Value
0                    Session id              6040
1                        Target             Power
2                   Target type        Regression
3           Original data shape           (90, 9)
4        Transformed data shape           (90, 9)
5   Transformed train set shape           (62, 9)
6    Transformed test set shape           (28, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              beb8
2024-12-12 17:16:09,598:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,704:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:09,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:09,707:INFO:setup() successfully completed in 1.6s...............
2024-12-12 17:16:09,710:INFO:Initializing compare_models()
2024-12-12 17:16:09,710:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=18, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 18, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:16:09,710:INFO:Checking exceptions
2024-12-12 17:16:09,711:INFO:Preparing display monitor
2024-12-12 17:16:09,712:INFO:Initializing Linear Regression
2024-12-12 17:16:09,712:INFO:Total runtime is 0.0 minutes
2024-12-12 17:16:09,712:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:09,712:INFO:Initializing create_model()
2024-12-12 17:16:09,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:09,712:INFO:Checking exceptions
2024-12-12 17:16:09,712:INFO:Importing libraries
2024-12-12 17:16:09,712:INFO:Copying training dataset
2024-12-12 17:16:09,716:INFO:Defining folds
2024-12-12 17:16:09,716:INFO:Declaring metric variables
2024-12-12 17:16:09,716:INFO:Importing untrained model
2024-12-12 17:16:09,716:INFO:Linear Regression Imported successfully
2024-12-12 17:16:09,716:INFO:Starting cross validation
2024-12-12 17:16:09,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:09,783:INFO:Calculating mean and std
2024-12-12 17:16:09,783:INFO:Creating metrics dataframe
2024-12-12 17:16:09,785:INFO:Uploading results into container
2024-12-12 17:16:09,785:INFO:Uploading model into container now
2024-12-12 17:16:09,785:INFO:_master_model_container: 1
2024-12-12 17:16:09,785:INFO:_display_container: 2
2024-12-12 17:16:09,785:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:16:09,786:INFO:create_model() successfully completed......................................
2024-12-12 17:16:09,859:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:09,859:INFO:Creating metrics dataframe
2024-12-12 17:16:09,859:INFO:Initializing Lasso Regression
2024-12-12 17:16:09,859:INFO:Total runtime is 0.002451960245768229 minutes
2024-12-12 17:16:09,859:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:09,859:INFO:Initializing create_model()
2024-12-12 17:16:09,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:09,859:INFO:Checking exceptions
2024-12-12 17:16:09,859:INFO:Importing libraries
2024-12-12 17:16:09,859:INFO:Copying training dataset
2024-12-12 17:16:09,859:INFO:Defining folds
2024-12-12 17:16:09,859:INFO:Declaring metric variables
2024-12-12 17:16:09,859:INFO:Importing untrained model
2024-12-12 17:16:09,859:INFO:Lasso Regression Imported successfully
2024-12-12 17:16:09,859:INFO:Starting cross validation
2024-12-12 17:16:09,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:09,932:INFO:Calculating mean and std
2024-12-12 17:16:09,932:INFO:Creating metrics dataframe
2024-12-12 17:16:09,933:INFO:Uploading results into container
2024-12-12 17:16:09,933:INFO:Uploading model into container now
2024-12-12 17:16:09,935:INFO:_master_model_container: 2
2024-12-12 17:16:09,935:INFO:_display_container: 2
2024-12-12 17:16:09,935:INFO:Lasso(random_state=6040)
2024-12-12 17:16:09,935:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,013:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,013:INFO:Creating metrics dataframe
2024-12-12 17:16:10,013:INFO:Initializing Ridge Regression
2024-12-12 17:16:10,013:INFO:Total runtime is 0.005012094974517822 minutes
2024-12-12 17:16:10,013:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,013:INFO:Initializing create_model()
2024-12-12 17:16:10,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,013:INFO:Checking exceptions
2024-12-12 17:16:10,013:INFO:Importing libraries
2024-12-12 17:16:10,013:INFO:Copying training dataset
2024-12-12 17:16:10,013:INFO:Defining folds
2024-12-12 17:16:10,013:INFO:Declaring metric variables
2024-12-12 17:16:10,013:INFO:Importing untrained model
2024-12-12 17:16:10,013:INFO:Ridge Regression Imported successfully
2024-12-12 17:16:10,013:INFO:Starting cross validation
2024-12-12 17:16:10,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,080:INFO:Calculating mean and std
2024-12-12 17:16:10,080:INFO:Creating metrics dataframe
2024-12-12 17:16:10,082:INFO:Uploading results into container
2024-12-12 17:16:10,082:INFO:Uploading model into container now
2024-12-12 17:16:10,083:INFO:_master_model_container: 3
2024-12-12 17:16:10,083:INFO:_display_container: 2
2024-12-12 17:16:10,083:INFO:Ridge(random_state=6040)
2024-12-12 17:16:10,083:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,163:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,163:INFO:Creating metrics dataframe
2024-12-12 17:16:10,165:INFO:Initializing Elastic Net
2024-12-12 17:16:10,166:INFO:Total runtime is 0.007573358217875163 minutes
2024-12-12 17:16:10,166:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,166:INFO:Initializing create_model()
2024-12-12 17:16:10,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,166:INFO:Checking exceptions
2024-12-12 17:16:10,166:INFO:Importing libraries
2024-12-12 17:16:10,166:INFO:Copying training dataset
2024-12-12 17:16:10,169:INFO:Defining folds
2024-12-12 17:16:10,169:INFO:Declaring metric variables
2024-12-12 17:16:10,170:INFO:Importing untrained model
2024-12-12 17:16:10,170:INFO:Elastic Net Imported successfully
2024-12-12 17:16:10,170:INFO:Starting cross validation
2024-12-12 17:16:10,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,233:INFO:Calculating mean and std
2024-12-12 17:16:10,233:INFO:Creating metrics dataframe
2024-12-12 17:16:10,233:INFO:Uploading results into container
2024-12-12 17:16:10,233:INFO:Uploading model into container now
2024-12-12 17:16:10,233:INFO:_master_model_container: 4
2024-12-12 17:16:10,233:INFO:_display_container: 2
2024-12-12 17:16:10,233:INFO:ElasticNet(random_state=6040)
2024-12-12 17:16:10,233:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,312:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,312:INFO:Creating metrics dataframe
2024-12-12 17:16:10,312:INFO:Initializing Least Angle Regression
2024-12-12 17:16:10,312:INFO:Total runtime is 0.009993342558542888 minutes
2024-12-12 17:16:10,312:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,312:INFO:Initializing create_model()
2024-12-12 17:16:10,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,312:INFO:Checking exceptions
2024-12-12 17:16:10,312:INFO:Importing libraries
2024-12-12 17:16:10,312:INFO:Copying training dataset
2024-12-12 17:16:10,320:INFO:Defining folds
2024-12-12 17:16:10,320:INFO:Declaring metric variables
2024-12-12 17:16:10,320:INFO:Importing untrained model
2024-12-12 17:16:10,320:INFO:Least Angle Regression Imported successfully
2024-12-12 17:16:10,320:INFO:Starting cross validation
2024-12-12 17:16:10,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,382:INFO:Calculating mean and std
2024-12-12 17:16:10,382:INFO:Creating metrics dataframe
2024-12-12 17:16:10,384:INFO:Uploading results into container
2024-12-12 17:16:10,384:INFO:Uploading model into container now
2024-12-12 17:16:10,384:INFO:_master_model_container: 5
2024-12-12 17:16:10,384:INFO:_display_container: 2
2024-12-12 17:16:10,385:INFO:Lars(random_state=6040)
2024-12-12 17:16:10,385:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,459:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,459:INFO:Creating metrics dataframe
2024-12-12 17:16:10,466:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:16:10,466:INFO:Total runtime is 0.012566725413004558 minutes
2024-12-12 17:16:10,466:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,466:INFO:Initializing create_model()
2024-12-12 17:16:10,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,466:INFO:Checking exceptions
2024-12-12 17:16:10,466:INFO:Importing libraries
2024-12-12 17:16:10,466:INFO:Copying training dataset
2024-12-12 17:16:10,468:INFO:Defining folds
2024-12-12 17:16:10,468:INFO:Declaring metric variables
2024-12-12 17:16:10,470:INFO:Importing untrained model
2024-12-12 17:16:10,470:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:16:10,470:INFO:Starting cross validation
2024-12-12 17:16:10,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,522:INFO:Calculating mean and std
2024-12-12 17:16:10,522:INFO:Creating metrics dataframe
2024-12-12 17:16:10,522:INFO:Uploading results into container
2024-12-12 17:16:10,522:INFO:Uploading model into container now
2024-12-12 17:16:10,522:INFO:_master_model_container: 6
2024-12-12 17:16:10,522:INFO:_display_container: 2
2024-12-12 17:16:10,522:INFO:LassoLars(random_state=6040)
2024-12-12 17:16:10,522:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,592:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,592:INFO:Creating metrics dataframe
2024-12-12 17:16:10,592:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:16:10,592:INFO:Total runtime is 0.014666823546091716 minutes
2024-12-12 17:16:10,592:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,592:INFO:Initializing create_model()
2024-12-12 17:16:10,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,592:INFO:Checking exceptions
2024-12-12 17:16:10,592:INFO:Importing libraries
2024-12-12 17:16:10,592:INFO:Copying training dataset
2024-12-12 17:16:10,608:INFO:Defining folds
2024-12-12 17:16:10,608:INFO:Declaring metric variables
2024-12-12 17:16:10,608:INFO:Importing untrained model
2024-12-12 17:16:10,608:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:16:10,608:INFO:Starting cross validation
2024-12-12 17:16:10,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,661:INFO:Calculating mean and std
2024-12-12 17:16:10,662:INFO:Creating metrics dataframe
2024-12-12 17:16:10,663:INFO:Uploading results into container
2024-12-12 17:16:10,663:INFO:Uploading model into container now
2024-12-12 17:16:10,663:INFO:_master_model_container: 7
2024-12-12 17:16:10,663:INFO:_display_container: 2
2024-12-12 17:16:10,663:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:16:10,663:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,743:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,743:INFO:Creating metrics dataframe
2024-12-12 17:16:10,745:INFO:Initializing Bayesian Ridge
2024-12-12 17:16:10,745:INFO:Total runtime is 0.01721765995025635 minutes
2024-12-12 17:16:10,745:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,745:INFO:Initializing create_model()
2024-12-12 17:16:10,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,745:INFO:Checking exceptions
2024-12-12 17:16:10,745:INFO:Importing libraries
2024-12-12 17:16:10,745:INFO:Copying training dataset
2024-12-12 17:16:10,747:INFO:Defining folds
2024-12-12 17:16:10,747:INFO:Declaring metric variables
2024-12-12 17:16:10,747:INFO:Importing untrained model
2024-12-12 17:16:10,747:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:16:10,747:INFO:Starting cross validation
2024-12-12 17:16:10,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,810:INFO:Calculating mean and std
2024-12-12 17:16:10,810:INFO:Creating metrics dataframe
2024-12-12 17:16:10,813:INFO:Uploading results into container
2024-12-12 17:16:10,813:INFO:Uploading model into container now
2024-12-12 17:16:10,813:INFO:_master_model_container: 8
2024-12-12 17:16:10,813:INFO:_display_container: 2
2024-12-12 17:16:10,813:INFO:BayesianRidge()
2024-12-12 17:16:10,814:INFO:create_model() successfully completed......................................
2024-12-12 17:16:10,890:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:10,890:INFO:Creating metrics dataframe
2024-12-12 17:16:10,890:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:16:10,890:INFO:Total runtime is 0.019633225599924725 minutes
2024-12-12 17:16:10,890:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:10,890:INFO:Initializing create_model()
2024-12-12 17:16:10,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:10,890:INFO:Checking exceptions
2024-12-12 17:16:10,890:INFO:Importing libraries
2024-12-12 17:16:10,890:INFO:Copying training dataset
2024-12-12 17:16:10,890:INFO:Defining folds
2024-12-12 17:16:10,890:INFO:Declaring metric variables
2024-12-12 17:16:10,899:INFO:Importing untrained model
2024-12-12 17:16:10,899:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:16:10,899:INFO:Starting cross validation
2024-12-12 17:16:10,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:10,960:INFO:Calculating mean and std
2024-12-12 17:16:10,960:INFO:Creating metrics dataframe
2024-12-12 17:16:10,962:INFO:Uploading results into container
2024-12-12 17:16:10,962:INFO:Uploading model into container now
2024-12-12 17:16:10,962:INFO:_master_model_container: 9
2024-12-12 17:16:10,962:INFO:_display_container: 2
2024-12-12 17:16:10,963:INFO:PassiveAggressiveRegressor(random_state=6040)
2024-12-12 17:16:10,963:INFO:create_model() successfully completed......................................
2024-12-12 17:16:11,042:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:11,042:INFO:Creating metrics dataframe
2024-12-12 17:16:11,044:INFO:Initializing Huber Regressor
2024-12-12 17:16:11,044:INFO:Total runtime is 0.02220824162165324 minutes
2024-12-12 17:16:11,044:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:11,045:INFO:Initializing create_model()
2024-12-12 17:16:11,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:11,045:INFO:Checking exceptions
2024-12-12 17:16:11,045:INFO:Importing libraries
2024-12-12 17:16:11,045:INFO:Copying training dataset
2024-12-12 17:16:11,047:INFO:Defining folds
2024-12-12 17:16:11,047:INFO:Declaring metric variables
2024-12-12 17:16:11,047:INFO:Importing untrained model
2024-12-12 17:16:11,048:INFO:Huber Regressor Imported successfully
2024-12-12 17:16:11,048:INFO:Starting cross validation
2024-12-12 17:16:11,048:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:11,096:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,102:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,110:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,112:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,113:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,115:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,117:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,121:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,126:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,131:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:11,140:INFO:Calculating mean and std
2024-12-12 17:16:11,140:INFO:Creating metrics dataframe
2024-12-12 17:16:11,141:INFO:Uploading results into container
2024-12-12 17:16:11,141:INFO:Uploading model into container now
2024-12-12 17:16:11,141:INFO:_master_model_container: 10
2024-12-12 17:16:11,141:INFO:_display_container: 2
2024-12-12 17:16:11,141:INFO:HuberRegressor()
2024-12-12 17:16:11,141:INFO:create_model() successfully completed......................................
2024-12-12 17:16:11,224:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:11,224:INFO:Creating metrics dataframe
2024-12-12 17:16:11,227:INFO:Initializing K Neighbors Regressor
2024-12-12 17:16:11,227:INFO:Total runtime is 0.02525074084599813 minutes
2024-12-12 17:16:11,227:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:11,227:INFO:Initializing create_model()
2024-12-12 17:16:11,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:11,227:INFO:Checking exceptions
2024-12-12 17:16:11,227:INFO:Importing libraries
2024-12-12 17:16:11,227:INFO:Copying training dataset
2024-12-12 17:16:11,227:INFO:Defining folds
2024-12-12 17:16:11,227:INFO:Declaring metric variables
2024-12-12 17:16:11,227:INFO:Importing untrained model
2024-12-12 17:16:11,227:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:16:11,227:INFO:Starting cross validation
2024-12-12 17:16:11,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:11,316:INFO:Calculating mean and std
2024-12-12 17:16:11,316:INFO:Creating metrics dataframe
2024-12-12 17:16:11,318:INFO:Uploading results into container
2024-12-12 17:16:11,318:INFO:Uploading model into container now
2024-12-12 17:16:11,318:INFO:_master_model_container: 11
2024-12-12 17:16:11,319:INFO:_display_container: 2
2024-12-12 17:16:11,319:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:16:11,319:INFO:create_model() successfully completed......................................
2024-12-12 17:16:11,388:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:11,388:INFO:Creating metrics dataframe
2024-12-12 17:16:11,388:INFO:Initializing Decision Tree Regressor
2024-12-12 17:16:11,388:INFO:Total runtime is 0.027929286162058514 minutes
2024-12-12 17:16:11,388:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:11,388:INFO:Initializing create_model()
2024-12-12 17:16:11,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:11,388:INFO:Checking exceptions
2024-12-12 17:16:11,388:INFO:Importing libraries
2024-12-12 17:16:11,388:INFO:Copying training dataset
2024-12-12 17:16:11,403:INFO:Defining folds
2024-12-12 17:16:11,403:INFO:Declaring metric variables
2024-12-12 17:16:11,403:INFO:Importing untrained model
2024-12-12 17:16:11,405:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:16:11,405:INFO:Starting cross validation
2024-12-12 17:16:11,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:11,468:INFO:Calculating mean and std
2024-12-12 17:16:11,468:INFO:Creating metrics dataframe
2024-12-12 17:16:11,468:INFO:Uploading results into container
2024-12-12 17:16:11,468:INFO:Uploading model into container now
2024-12-12 17:16:11,468:INFO:_master_model_container: 12
2024-12-12 17:16:11,468:INFO:_display_container: 2
2024-12-12 17:16:11,468:INFO:DecisionTreeRegressor(random_state=6040)
2024-12-12 17:16:11,468:INFO:create_model() successfully completed......................................
2024-12-12 17:16:11,538:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:11,538:INFO:Creating metrics dataframe
2024-12-12 17:16:11,538:INFO:Initializing Random Forest Regressor
2024-12-12 17:16:11,538:INFO:Total runtime is 0.030430118242899578 minutes
2024-12-12 17:16:11,538:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:11,538:INFO:Initializing create_model()
2024-12-12 17:16:11,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:11,553:INFO:Checking exceptions
2024-12-12 17:16:11,553:INFO:Importing libraries
2024-12-12 17:16:11,553:INFO:Copying training dataset
2024-12-12 17:16:11,556:INFO:Defining folds
2024-12-12 17:16:11,556:INFO:Declaring metric variables
2024-12-12 17:16:11,556:INFO:Importing untrained model
2024-12-12 17:16:11,556:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:16:11,556:INFO:Starting cross validation
2024-12-12 17:16:11,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:11,841:INFO:Calculating mean and std
2024-12-12 17:16:11,841:INFO:Creating metrics dataframe
2024-12-12 17:16:11,843:INFO:Uploading results into container
2024-12-12 17:16:11,843:INFO:Uploading model into container now
2024-12-12 17:16:11,843:INFO:_master_model_container: 13
2024-12-12 17:16:11,843:INFO:_display_container: 2
2024-12-12 17:16:11,844:INFO:RandomForestRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:11,844:INFO:create_model() successfully completed......................................
2024-12-12 17:16:11,922:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:11,923:INFO:Creating metrics dataframe
2024-12-12 17:16:11,925:INFO:Initializing Extra Trees Regressor
2024-12-12 17:16:11,925:INFO:Total runtime is 0.03688876231511434 minutes
2024-12-12 17:16:11,925:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:11,925:INFO:Initializing create_model()
2024-12-12 17:16:11,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:11,925:INFO:Checking exceptions
2024-12-12 17:16:11,925:INFO:Importing libraries
2024-12-12 17:16:11,925:INFO:Copying training dataset
2024-12-12 17:16:11,927:INFO:Defining folds
2024-12-12 17:16:11,927:INFO:Declaring metric variables
2024-12-12 17:16:11,928:INFO:Importing untrained model
2024-12-12 17:16:11,928:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:16:11,928:INFO:Starting cross validation
2024-12-12 17:16:11,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:12,171:INFO:Calculating mean and std
2024-12-12 17:16:12,171:INFO:Creating metrics dataframe
2024-12-12 17:16:12,173:INFO:Uploading results into container
2024-12-12 17:16:12,173:INFO:Uploading model into container now
2024-12-12 17:16:12,174:INFO:_master_model_container: 14
2024-12-12 17:16:12,174:INFO:_display_container: 2
2024-12-12 17:16:12,174:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:12,174:INFO:create_model() successfully completed......................................
2024-12-12 17:16:12,257:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:12,257:INFO:Creating metrics dataframe
2024-12-12 17:16:12,259:INFO:Initializing AdaBoost Regressor
2024-12-12 17:16:12,259:INFO:Total runtime is 0.04244428078333537 minutes
2024-12-12 17:16:12,259:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:12,260:INFO:Initializing create_model()
2024-12-12 17:16:12,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:12,260:INFO:Checking exceptions
2024-12-12 17:16:12,260:INFO:Importing libraries
2024-12-12 17:16:12,260:INFO:Copying training dataset
2024-12-12 17:16:12,262:INFO:Defining folds
2024-12-12 17:16:12,262:INFO:Declaring metric variables
2024-12-12 17:16:12,262:INFO:Importing untrained model
2024-12-12 17:16:12,263:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:16:12,263:INFO:Starting cross validation
2024-12-12 17:16:12,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:12,392:INFO:Calculating mean and std
2024-12-12 17:16:12,392:INFO:Creating metrics dataframe
2024-12-12 17:16:12,392:INFO:Uploading results into container
2024-12-12 17:16:12,392:INFO:Uploading model into container now
2024-12-12 17:16:12,392:INFO:_master_model_container: 15
2024-12-12 17:16:12,392:INFO:_display_container: 2
2024-12-12 17:16:12,395:INFO:AdaBoostRegressor(random_state=6040)
2024-12-12 17:16:12,395:INFO:create_model() successfully completed......................................
2024-12-12 17:16:12,474:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:12,474:INFO:Creating metrics dataframe
2024-12-12 17:16:12,476:INFO:Initializing Gradient Boosting Regressor
2024-12-12 17:16:12,476:INFO:Total runtime is 0.0460633913675944 minutes
2024-12-12 17:16:12,476:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:12,476:INFO:Initializing create_model()
2024-12-12 17:16:12,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:12,476:INFO:Checking exceptions
2024-12-12 17:16:12,476:INFO:Importing libraries
2024-12-12 17:16:12,476:INFO:Copying training dataset
2024-12-12 17:16:12,478:INFO:Defining folds
2024-12-12 17:16:12,478:INFO:Declaring metric variables
2024-12-12 17:16:12,478:INFO:Importing untrained model
2024-12-12 17:16:12,479:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:16:12,479:INFO:Starting cross validation
2024-12-12 17:16:12,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:12,613:INFO:Calculating mean and std
2024-12-12 17:16:12,613:INFO:Creating metrics dataframe
2024-12-12 17:16:12,615:INFO:Uploading results into container
2024-12-12 17:16:12,615:INFO:Uploading model into container now
2024-12-12 17:16:12,615:INFO:_master_model_container: 16
2024-12-12 17:16:12,615:INFO:_display_container: 2
2024-12-12 17:16:12,615:INFO:GradientBoostingRegressor(random_state=6040)
2024-12-12 17:16:12,615:INFO:create_model() successfully completed......................................
2024-12-12 17:16:12,696:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:12,696:INFO:Creating metrics dataframe
2024-12-12 17:16:12,698:INFO:Initializing Extreme Gradient Boosting
2024-12-12 17:16:12,698:INFO:Total runtime is 0.049770979086558025 minutes
2024-12-12 17:16:12,698:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:12,698:INFO:Initializing create_model()
2024-12-12 17:16:12,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:12,698:INFO:Checking exceptions
2024-12-12 17:16:12,698:INFO:Importing libraries
2024-12-12 17:16:12,698:INFO:Copying training dataset
2024-12-12 17:16:12,701:INFO:Defining folds
2024-12-12 17:16:12,701:INFO:Declaring metric variables
2024-12-12 17:16:12,701:INFO:Importing untrained model
2024-12-12 17:16:12,701:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:16:12,702:INFO:Starting cross validation
2024-12-12 17:16:12,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:12,816:INFO:Calculating mean and std
2024-12-12 17:16:12,816:INFO:Creating metrics dataframe
2024-12-12 17:16:12,816:INFO:Uploading results into container
2024-12-12 17:16:12,816:INFO:Uploading model into container now
2024-12-12 17:16:12,816:INFO:_master_model_container: 17
2024-12-12 17:16:12,816:INFO:_display_container: 2
2024-12-12 17:16:12,816:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=6040, ...)
2024-12-12 17:16:12,816:INFO:create_model() successfully completed......................................
2024-12-12 17:16:12,903:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:12,903:INFO:Creating metrics dataframe
2024-12-12 17:16:12,904:INFO:Initializing Light Gradient Boosting Machine
2024-12-12 17:16:12,904:INFO:Total runtime is 0.05319960912068685 minutes
2024-12-12 17:16:12,904:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:12,904:INFO:Initializing create_model()
2024-12-12 17:16:12,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:12,904:INFO:Checking exceptions
2024-12-12 17:16:12,904:INFO:Importing libraries
2024-12-12 17:16:12,904:INFO:Copying training dataset
2024-12-12 17:16:12,904:INFO:Defining folds
2024-12-12 17:16:12,904:INFO:Declaring metric variables
2024-12-12 17:16:12,904:INFO:Importing untrained model
2024-12-12 17:16:12,904:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:16:12,904:INFO:Starting cross validation
2024-12-12 17:16:12,904:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:13,314:INFO:Calculating mean and std
2024-12-12 17:16:13,314:INFO:Creating metrics dataframe
2024-12-12 17:16:13,318:INFO:Uploading results into container
2024-12-12 17:16:13,327:INFO:Uploading model into container now
2024-12-12 17:16:13,327:INFO:_master_model_container: 18
2024-12-12 17:16:13,327:INFO:_display_container: 2
2024-12-12 17:16:13,327:INFO:LGBMRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:13,327:INFO:create_model() successfully completed......................................
2024-12-12 17:16:13,429:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:13,429:INFO:Creating metrics dataframe
2024-12-12 17:16:13,431:INFO:Initializing Dummy Regressor
2024-12-12 17:16:13,431:INFO:Total runtime is 0.06198210716247559 minutes
2024-12-12 17:16:13,431:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:13,432:INFO:Initializing create_model()
2024-12-12 17:16:13,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B32075190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:13,432:INFO:Checking exceptions
2024-12-12 17:16:13,432:INFO:Importing libraries
2024-12-12 17:16:13,432:INFO:Copying training dataset
2024-12-12 17:16:13,434:INFO:Defining folds
2024-12-12 17:16:13,434:INFO:Declaring metric variables
2024-12-12 17:16:13,435:INFO:Importing untrained model
2024-12-12 17:16:13,435:INFO:Dummy Regressor Imported successfully
2024-12-12 17:16:13,435:INFO:Starting cross validation
2024-12-12 17:16:13,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:13,486:INFO:Calculating mean and std
2024-12-12 17:16:13,486:INFO:Creating metrics dataframe
2024-12-12 17:16:13,486:INFO:Uploading results into container
2024-12-12 17:16:13,486:INFO:Uploading model into container now
2024-12-12 17:16:13,486:INFO:_master_model_container: 19
2024-12-12 17:16:13,486:INFO:_display_container: 2
2024-12-12 17:16:13,486:INFO:DummyRegressor()
2024-12-12 17:16:13,486:INFO:create_model() successfully completed......................................
2024-12-12 17:16:13,567:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:13,567:INFO:Creating metrics dataframe
2024-12-12 17:16:13,569:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-12 17:16:13,571:INFO:Initializing create_model()
2024-12-12 17:16:13,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:13,571:INFO:Checking exceptions
2024-12-12 17:16:13,571:INFO:Importing libraries
2024-12-12 17:16:13,571:INFO:Copying training dataset
2024-12-12 17:16:13,575:INFO:Defining folds
2024-12-12 17:16:13,575:INFO:Declaring metric variables
2024-12-12 17:16:13,575:INFO:Importing untrained model
2024-12-12 17:16:13,575:INFO:Declaring custom model
2024-12-12 17:16:13,575:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:16:13,575:INFO:Cross validation set to False
2024-12-12 17:16:13,575:INFO:Fitting Model
2024-12-12 17:16:13,577:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:16:13,577:INFO:create_model() successfully completed......................................
2024-12-12 17:16:13,656:INFO:Initializing create_model()
2024-12-12 17:16:13,656:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=LGBMRegressor(n_jobs=-1, random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:13,656:INFO:Checking exceptions
2024-12-12 17:16:13,656:INFO:Importing libraries
2024-12-12 17:16:13,656:INFO:Copying training dataset
2024-12-12 17:16:13,656:INFO:Defining folds
2024-12-12 17:16:13,656:INFO:Declaring metric variables
2024-12-12 17:16:13,656:INFO:Importing untrained model
2024-12-12 17:16:13,656:INFO:Declaring custom model
2024-12-12 17:16:13,656:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:16:13,666:INFO:Cross validation set to False
2024-12-12 17:16:13,666:INFO:Fitting Model
2024-12-12 17:16:13,671:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000047 seconds.
2024-12-12 17:16:13,671:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-12 17:16:13,672:INFO:[LightGBM] [Info] Total Bins 49
2024-12-12 17:16:13,672:INFO:[LightGBM] [Info] Number of data points in the train set: 62, number of used features: 7
2024-12-12 17:16:13,672:INFO:[LightGBM] [Info] Start training from score 43.888532
2024-12-12 17:16:13,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:16:13,691:INFO:LGBMRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:13,691:INFO:create_model() successfully completed......................................
2024-12-12 17:16:13,777:INFO:Initializing create_model()
2024-12-12 17:16:13,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:13,777:INFO:Checking exceptions
2024-12-12 17:16:13,777:INFO:Importing libraries
2024-12-12 17:16:13,777:INFO:Copying training dataset
2024-12-12 17:16:13,793:INFO:Defining folds
2024-12-12 17:16:13,793:INFO:Declaring metric variables
2024-12-12 17:16:13,793:INFO:Importing untrained model
2024-12-12 17:16:13,793:INFO:Declaring custom model
2024-12-12 17:16:13,793:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:16:13,793:INFO:Cross validation set to False
2024-12-12 17:16:13,793:INFO:Fitting Model
2024-12-12 17:16:13,899:INFO:RandomForestRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:13,899:INFO:create_model() successfully completed......................................
2024-12-12 17:16:13,978:INFO:Initializing create_model()
2024-12-12 17:16:13,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:13,978:INFO:Checking exceptions
2024-12-12 17:16:13,978:INFO:Importing libraries
2024-12-12 17:16:13,978:INFO:Copying training dataset
2024-12-12 17:16:13,978:INFO:Defining folds
2024-12-12 17:16:13,978:INFO:Declaring metric variables
2024-12-12 17:16:13,978:INFO:Importing untrained model
2024-12-12 17:16:13,978:INFO:Declaring custom model
2024-12-12 17:16:13,978:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:16:13,986:INFO:Cross validation set to False
2024-12-12 17:16:13,986:INFO:Fitting Model
2024-12-12 17:16:14,062:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:14,062:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,143:INFO:Initializing create_model()
2024-12-12 17:16:14,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=Lasso(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,143:INFO:Checking exceptions
2024-12-12 17:16:14,143:INFO:Importing libraries
2024-12-12 17:16:14,143:INFO:Copying training dataset
2024-12-12 17:16:14,143:INFO:Defining folds
2024-12-12 17:16:14,143:INFO:Declaring metric variables
2024-12-12 17:16:14,143:INFO:Importing untrained model
2024-12-12 17:16:14,143:INFO:Declaring custom model
2024-12-12 17:16:14,143:INFO:Lasso Regression Imported successfully
2024-12-12 17:16:14,143:INFO:Cross validation set to False
2024-12-12 17:16:14,143:INFO:Fitting Model
2024-12-12 17:16:14,143:INFO:Lasso(random_state=6040)
2024-12-12 17:16:14,143:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,231:INFO:Initializing create_model()
2024-12-12 17:16:14,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=LassoLars(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,231:INFO:Checking exceptions
2024-12-12 17:16:14,231:INFO:Importing libraries
2024-12-12 17:16:14,231:INFO:Copying training dataset
2024-12-12 17:16:14,238:INFO:Defining folds
2024-12-12 17:16:14,238:INFO:Declaring metric variables
2024-12-12 17:16:14,238:INFO:Importing untrained model
2024-12-12 17:16:14,238:INFO:Declaring custom model
2024-12-12 17:16:14,238:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:16:14,238:INFO:Cross validation set to False
2024-12-12 17:16:14,238:INFO:Fitting Model
2024-12-12 17:16:14,243:INFO:LassoLars(random_state=6040)
2024-12-12 17:16:14,243:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,322:INFO:Initializing create_model()
2024-12-12 17:16:14,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ElasticNet(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,322:INFO:Checking exceptions
2024-12-12 17:16:14,325:INFO:Importing libraries
2024-12-12 17:16:14,325:INFO:Copying training dataset
2024-12-12 17:16:14,326:INFO:Defining folds
2024-12-12 17:16:14,326:INFO:Declaring metric variables
2024-12-12 17:16:14,326:INFO:Importing untrained model
2024-12-12 17:16:14,326:INFO:Declaring custom model
2024-12-12 17:16:14,326:INFO:Elastic Net Imported successfully
2024-12-12 17:16:14,326:INFO:Cross validation set to False
2024-12-12 17:16:14,326:INFO:Fitting Model
2024-12-12 17:16:14,326:INFO:ElasticNet(random_state=6040)
2024-12-12 17:16:14,326:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,415:INFO:Initializing create_model()
2024-12-12 17:16:14,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=Lars(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,415:INFO:Checking exceptions
2024-12-12 17:16:14,415:INFO:Importing libraries
2024-12-12 17:16:14,415:INFO:Copying training dataset
2024-12-12 17:16:14,415:INFO:Defining folds
2024-12-12 17:16:14,415:INFO:Declaring metric variables
2024-12-12 17:16:14,415:INFO:Importing untrained model
2024-12-12 17:16:14,415:INFO:Declaring custom model
2024-12-12 17:16:14,415:INFO:Least Angle Regression Imported successfully
2024-12-12 17:16:14,415:INFO:Cross validation set to False
2024-12-12 17:16:14,415:INFO:Fitting Model
2024-12-12 17:16:14,425:INFO:Lars(random_state=6040)
2024-12-12 17:16:14,425:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,503:INFO:Initializing create_model()
2024-12-12 17:16:14,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=Ridge(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,503:INFO:Checking exceptions
2024-12-12 17:16:14,503:INFO:Importing libraries
2024-12-12 17:16:14,503:INFO:Copying training dataset
2024-12-12 17:16:14,503:INFO:Defining folds
2024-12-12 17:16:14,503:INFO:Declaring metric variables
2024-12-12 17:16:14,503:INFO:Importing untrained model
2024-12-12 17:16:14,503:INFO:Declaring custom model
2024-12-12 17:16:14,503:INFO:Ridge Regression Imported successfully
2024-12-12 17:16:14,503:INFO:Cross validation set to False
2024-12-12 17:16:14,503:INFO:Fitting Model
2024-12-12 17:16:14,511:INFO:Ridge(random_state=6040)
2024-12-12 17:16:14,511:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,598:INFO:Initializing create_model()
2024-12-12 17:16:14,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,598:INFO:Checking exceptions
2024-12-12 17:16:14,599:INFO:Importing libraries
2024-12-12 17:16:14,599:INFO:Copying training dataset
2024-12-12 17:16:14,602:INFO:Defining folds
2024-12-12 17:16:14,602:INFO:Declaring metric variables
2024-12-12 17:16:14,602:INFO:Importing untrained model
2024-12-12 17:16:14,602:INFO:Declaring custom model
2024-12-12 17:16:14,602:INFO:Linear Regression Imported successfully
2024-12-12 17:16:14,602:INFO:Cross validation set to False
2024-12-12 17:16:14,602:INFO:Fitting Model
2024-12-12 17:16:14,606:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:16:14,606:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,692:INFO:Initializing create_model()
2024-12-12 17:16:14,692:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,692:INFO:Checking exceptions
2024-12-12 17:16:14,693:INFO:Importing libraries
2024-12-12 17:16:14,693:INFO:Copying training dataset
2024-12-12 17:16:14,695:INFO:Defining folds
2024-12-12 17:16:14,695:INFO:Declaring metric variables
2024-12-12 17:16:14,695:INFO:Importing untrained model
2024-12-12 17:16:14,695:INFO:Declaring custom model
2024-12-12 17:16:14,696:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:16:14,696:INFO:Cross validation set to False
2024-12-12 17:16:14,696:INFO:Fitting Model
2024-12-12 17:16:14,702:INFO:BayesianRidge()
2024-12-12 17:16:14,702:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,783:INFO:Initializing create_model()
2024-12-12 17:16:14,783:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,783:INFO:Checking exceptions
2024-12-12 17:16:14,784:INFO:Importing libraries
2024-12-12 17:16:14,784:INFO:Copying training dataset
2024-12-12 17:16:14,788:INFO:Defining folds
2024-12-12 17:16:14,788:INFO:Declaring metric variables
2024-12-12 17:16:14,789:INFO:Importing untrained model
2024-12-12 17:16:14,789:INFO:Declaring custom model
2024-12-12 17:16:14,789:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:16:14,790:INFO:Cross validation set to False
2024-12-12 17:16:14,790:INFO:Fitting Model
2024-12-12 17:16:14,795:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:16:14,795:INFO:create_model() successfully completed......................................
2024-12-12 17:16:14,880:INFO:Initializing create_model()
2024-12-12 17:16:14,880:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=AdaBoostRegressor(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:14,880:INFO:Checking exceptions
2024-12-12 17:16:14,880:INFO:Importing libraries
2024-12-12 17:16:14,880:INFO:Copying training dataset
2024-12-12 17:16:14,880:INFO:Defining folds
2024-12-12 17:16:14,880:INFO:Declaring metric variables
2024-12-12 17:16:14,880:INFO:Importing untrained model
2024-12-12 17:16:14,880:INFO:Declaring custom model
2024-12-12 17:16:14,880:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:16:14,880:INFO:Cross validation set to False
2024-12-12 17:16:14,880:INFO:Fitting Model
2024-12-12 17:16:14,936:INFO:AdaBoostRegressor(random_state=6040)
2024-12-12 17:16:14,936:INFO:create_model() successfully completed......................................
2024-12-12 17:16:15,016:INFO:Initializing create_model()
2024-12-12 17:16:15,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=GradientBoostingRegressor(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:15,016:INFO:Checking exceptions
2024-12-12 17:16:15,016:INFO:Importing libraries
2024-12-12 17:16:15,016:INFO:Copying training dataset
2024-12-12 17:16:15,020:INFO:Defining folds
2024-12-12 17:16:15,020:INFO:Declaring metric variables
2024-12-12 17:16:15,020:INFO:Importing untrained model
2024-12-12 17:16:15,020:INFO:Declaring custom model
2024-12-12 17:16:15,021:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:16:15,021:INFO:Cross validation set to False
2024-12-12 17:16:15,022:INFO:Fitting Model
2024-12-12 17:16:15,067:INFO:GradientBoostingRegressor(random_state=6040)
2024-12-12 17:16:15,067:INFO:create_model() successfully completed......................................
2024-12-12 17:16:15,148:INFO:Initializing create_model()
2024-12-12 17:16:15,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=DecisionTreeRegressor(random_state=6040), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:15,148:INFO:Checking exceptions
2024-12-12 17:16:15,148:INFO:Importing libraries
2024-12-12 17:16:15,148:INFO:Copying training dataset
2024-12-12 17:16:15,157:INFO:Defining folds
2024-12-12 17:16:15,157:INFO:Declaring metric variables
2024-12-12 17:16:15,157:INFO:Importing untrained model
2024-12-12 17:16:15,157:INFO:Declaring custom model
2024-12-12 17:16:15,158:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:16:15,158:INFO:Cross validation set to False
2024-12-12 17:16:15,158:INFO:Fitting Model
2024-12-12 17:16:15,164:INFO:DecisionTreeRegressor(random_state=6040)
2024-12-12 17:16:15,164:INFO:create_model() successfully completed......................................
2024-12-12 17:16:15,250:INFO:Initializing create_model()
2024-12-12 17:16:15,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=6040, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:15,250:INFO:Checking exceptions
2024-12-12 17:16:15,250:INFO:Importing libraries
2024-12-12 17:16:15,250:INFO:Copying training dataset
2024-12-12 17:16:15,253:INFO:Defining folds
2024-12-12 17:16:15,253:INFO:Declaring metric variables
2024-12-12 17:16:15,253:INFO:Importing untrained model
2024-12-12 17:16:15,253:INFO:Declaring custom model
2024-12-12 17:16:15,254:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:16:15,255:INFO:Cross validation set to False
2024-12-12 17:16:15,255:INFO:Fitting Model
2024-12-12 17:16:15,312:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=6040, ...)
2024-12-12 17:16:15,312:INFO:create_model() successfully completed......................................
2024-12-12 17:16:15,405:INFO:Initializing create_model()
2024-12-12 17:16:15,405:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:15,405:INFO:Checking exceptions
2024-12-12 17:16:15,405:INFO:Importing libraries
2024-12-12 17:16:15,405:INFO:Copying training dataset
2024-12-12 17:16:15,405:INFO:Defining folds
2024-12-12 17:16:15,405:INFO:Declaring metric variables
2024-12-12 17:16:15,405:INFO:Importing untrained model
2024-12-12 17:16:15,405:INFO:Declaring custom model
2024-12-12 17:16:15,405:INFO:Huber Regressor Imported successfully
2024-12-12 17:16:15,405:INFO:Cross validation set to False
2024-12-12 17:16:15,405:INFO:Fitting Model
2024-12-12 17:16:15,447:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:15,447:INFO:HuberRegressor()
2024-12-12 17:16:15,447:INFO:create_model() successfully completed......................................
2024-12-12 17:16:15,530:INFO:Initializing create_model()
2024-12-12 17:16:15,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:15,530:INFO:Checking exceptions
2024-12-12 17:16:15,531:INFO:Importing libraries
2024-12-12 17:16:15,531:INFO:Copying training dataset
2024-12-12 17:16:15,533:INFO:Defining folds
2024-12-12 17:16:15,533:INFO:Declaring metric variables
2024-12-12 17:16:15,533:INFO:Importing untrained model
2024-12-12 17:16:15,533:INFO:Declaring custom model
2024-12-12 17:16:15,533:INFO:Dummy Regressor Imported successfully
2024-12-12 17:16:15,533:INFO:Cross validation set to False
2024-12-12 17:16:15,533:INFO:Fitting Model
2024-12-12 17:16:15,539:INFO:DummyRegressor()
2024-12-12 17:16:15,539:INFO:create_model() successfully completed......................................
2024-12-12 17:16:15,629:INFO:_master_model_container: 19
2024-12-12 17:16:15,629:INFO:_display_container: 2
2024-12-12 17:16:15,630:INFO:[KNeighborsRegressor(n_jobs=-1), LGBMRegressor(n_jobs=-1, random_state=6040), RandomForestRegressor(n_jobs=-1, random_state=6040), ExtraTreesRegressor(n_jobs=-1, random_state=6040), Lasso(random_state=6040), LassoLars(random_state=6040), ElasticNet(random_state=6040), Lars(random_state=6040), Ridge(random_state=6040), LinearRegression(n_jobs=-1), BayesianRidge(), OrthogonalMatchingPursuit(), AdaBoostRegressor(random_state=6040), GradientBoostingRegressor(random_state=6040), DecisionTreeRegressor(random_state=6040), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=6040, ...), HuberRegressor(), DummyRegressor()]
2024-12-12 17:16:15,630:INFO:compare_models() successfully completed......................................
2024-12-12 17:16:15,630:INFO:Initializing predict_model()
2024-12-12 17:16:15,630:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:15,630:INFO:Checking exceptions
2024-12-12 17:16:15,630:INFO:Preloading libraries
2024-12-12 17:16:15,630:INFO:Set up data.
2024-12-12 17:16:15,630:INFO:Set up index.
2024-12-12 17:16:15,671:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:15,762:INFO:Initializing predict_model()
2024-12-12 17:16:15,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=LGBMRegressor(n_jobs=-1, random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:15,762:INFO:Checking exceptions
2024-12-12 17:16:15,762:INFO:Preloading libraries
2024-12-12 17:16:15,762:INFO:Set up data.
2024-12-12 17:16:15,770:INFO:Set up index.
2024-12-12 17:16:15,782:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:15,894:INFO:Initializing predict_model()
2024-12-12 17:16:15,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:15,894:INFO:Checking exceptions
2024-12-12 17:16:15,894:INFO:Preloading libraries
2024-12-12 17:16:15,894:INFO:Set up data.
2024-12-12 17:16:15,902:INFO:Set up index.
2024-12-12 17:16:15,928:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,020:INFO:Initializing predict_model()
2024-12-12 17:16:16,020:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,020:INFO:Checking exceptions
2024-12-12 17:16:16,020:INFO:Preloading libraries
2024-12-12 17:16:16,020:INFO:Set up data.
2024-12-12 17:16:16,027:INFO:Set up index.
2024-12-12 17:16:16,056:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,155:INFO:Initializing predict_model()
2024-12-12 17:16:16,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=Lasso(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,155:INFO:Checking exceptions
2024-12-12 17:16:16,155:INFO:Preloading libraries
2024-12-12 17:16:16,155:INFO:Set up data.
2024-12-12 17:16:16,164:INFO:Set up index.
2024-12-12 17:16:16,175:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,262:INFO:Initializing predict_model()
2024-12-12 17:16:16,263:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=LassoLars(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,263:INFO:Checking exceptions
2024-12-12 17:16:16,263:INFO:Preloading libraries
2024-12-12 17:16:16,263:INFO:Set up data.
2024-12-12 17:16:16,271:INFO:Set up index.
2024-12-12 17:16:16,283:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,366:INFO:Initializing predict_model()
2024-12-12 17:16:16,366:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ElasticNet(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,366:INFO:Checking exceptions
2024-12-12 17:16:16,366:INFO:Preloading libraries
2024-12-12 17:16:16,374:INFO:Set up data.
2024-12-12 17:16:16,381:INFO:Set up index.
2024-12-12 17:16:16,392:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,481:INFO:Initializing predict_model()
2024-12-12 17:16:16,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=Lars(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,481:INFO:Checking exceptions
2024-12-12 17:16:16,481:INFO:Preloading libraries
2024-12-12 17:16:16,481:INFO:Set up data.
2024-12-12 17:16:16,489:INFO:Set up index.
2024-12-12 17:16:16,502:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,590:INFO:Initializing predict_model()
2024-12-12 17:16:16,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=Ridge(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,590:INFO:Checking exceptions
2024-12-12 17:16:16,590:INFO:Preloading libraries
2024-12-12 17:16:16,590:INFO:Set up data.
2024-12-12 17:16:16,600:INFO:Set up index.
2024-12-12 17:16:16,611:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,701:INFO:Initializing predict_model()
2024-12-12 17:16:16,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,701:INFO:Checking exceptions
2024-12-12 17:16:16,701:INFO:Preloading libraries
2024-12-12 17:16:16,701:INFO:Set up data.
2024-12-12 17:16:16,710:INFO:Set up index.
2024-12-12 17:16:16,722:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,810:INFO:Initializing predict_model()
2024-12-12 17:16:16,810:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,810:INFO:Checking exceptions
2024-12-12 17:16:16,810:INFO:Preloading libraries
2024-12-12 17:16:16,810:INFO:Set up data.
2024-12-12 17:16:16,818:INFO:Set up index.
2024-12-12 17:16:16,830:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:16,917:INFO:Initializing predict_model()
2024-12-12 17:16:16,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:16,917:INFO:Checking exceptions
2024-12-12 17:16:16,917:INFO:Preloading libraries
2024-12-12 17:16:16,917:INFO:Set up data.
2024-12-12 17:16:16,931:INFO:Set up index.
2024-12-12 17:16:16,943:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,032:INFO:Initializing predict_model()
2024-12-12 17:16:17,032:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=AdaBoostRegressor(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:17,032:INFO:Checking exceptions
2024-12-12 17:16:17,032:INFO:Preloading libraries
2024-12-12 17:16:17,035:INFO:Set up data.
2024-12-12 17:16:17,042:INFO:Set up index.
2024-12-12 17:16:17,057:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,149:INFO:Initializing predict_model()
2024-12-12 17:16:17,149:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=GradientBoostingRegressor(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:17,149:INFO:Checking exceptions
2024-12-12 17:16:17,149:INFO:Preloading libraries
2024-12-12 17:16:17,149:INFO:Set up data.
2024-12-12 17:16:17,158:INFO:Set up index.
2024-12-12 17:16:17,162:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,267:INFO:Initializing predict_model()
2024-12-12 17:16:17,267:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=DecisionTreeRegressor(random_state=6040), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:17,267:INFO:Checking exceptions
2024-12-12 17:16:17,267:INFO:Preloading libraries
2024-12-12 17:16:17,267:INFO:Set up data.
2024-12-12 17:16:17,275:INFO:Set up index.
2024-12-12 17:16:17,286:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,379:INFO:Initializing predict_model()
2024-12-12 17:16:17,379:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=6040, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:17,379:INFO:Checking exceptions
2024-12-12 17:16:17,379:INFO:Preloading libraries
2024-12-12 17:16:17,379:INFO:Set up data.
2024-12-12 17:16:17,388:INFO:Set up index.
2024-12-12 17:16:17,401:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,513:INFO:Initializing predict_model()
2024-12-12 17:16:17,514:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:17,514:INFO:Checking exceptions
2024-12-12 17:16:17,514:INFO:Preloading libraries
2024-12-12 17:16:17,514:INFO:Set up data.
2024-12-12 17:16:17,521:INFO:Set up index.
2024-12-12 17:16:17,532:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,625:INFO:Initializing predict_model()
2024-12-12 17:16:17,625:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B7AAADB20>)
2024-12-12 17:16:17,625:INFO:Checking exceptions
2024-12-12 17:16:17,625:INFO:Preloading libraries
2024-12-12 17:16:17,625:INFO:Set up data.
2024-12-12 17:16:17,632:INFO:Set up index.
2024-12-12 17:16:17,643:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:16:17,727:INFO:Initializing compare_models()
2024-12-12 17:16:17,727:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:16:17,727:INFO:Checking exceptions
2024-12-12 17:16:17,727:INFO:Preparing display monitor
2024-12-12 17:16:17,727:INFO:Initializing Linear Regression
2024-12-12 17:16:17,727:INFO:Total runtime is 0.0 minutes
2024-12-12 17:16:17,727:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:17,727:INFO:Initializing create_model()
2024-12-12 17:16:17,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:17,727:INFO:Checking exceptions
2024-12-12 17:16:17,727:INFO:Importing libraries
2024-12-12 17:16:17,727:INFO:Copying training dataset
2024-12-12 17:16:17,727:INFO:Defining folds
2024-12-12 17:16:17,727:INFO:Declaring metric variables
2024-12-12 17:16:17,727:INFO:Importing untrained model
2024-12-12 17:16:17,727:INFO:Linear Regression Imported successfully
2024-12-12 17:16:17,727:INFO:Starting cross validation
2024-12-12 17:16:17,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:17,799:INFO:Calculating mean and std
2024-12-12 17:16:17,799:INFO:Creating metrics dataframe
2024-12-12 17:16:17,799:INFO:Uploading results into container
2024-12-12 17:16:17,799:INFO:Uploading model into container now
2024-12-12 17:16:17,799:INFO:_master_model_container: 20
2024-12-12 17:16:17,799:INFO:_display_container: 21
2024-12-12 17:16:17,799:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:16:17,799:INFO:create_model() successfully completed......................................
2024-12-12 17:16:17,871:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:17,871:INFO:Creating metrics dataframe
2024-12-12 17:16:17,871:INFO:Initializing Lasso Regression
2024-12-12 17:16:17,871:INFO:Total runtime is 0.0024069507916768393 minutes
2024-12-12 17:16:17,871:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:17,871:INFO:Initializing create_model()
2024-12-12 17:16:17,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:17,871:INFO:Checking exceptions
2024-12-12 17:16:17,871:INFO:Importing libraries
2024-12-12 17:16:17,871:INFO:Copying training dataset
2024-12-12 17:16:17,871:INFO:Defining folds
2024-12-12 17:16:17,871:INFO:Declaring metric variables
2024-12-12 17:16:17,871:INFO:Importing untrained model
2024-12-12 17:16:17,871:INFO:Lasso Regression Imported successfully
2024-12-12 17:16:17,871:INFO:Starting cross validation
2024-12-12 17:16:17,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:17,947:INFO:Calculating mean and std
2024-12-12 17:16:17,947:INFO:Creating metrics dataframe
2024-12-12 17:16:17,947:INFO:Uploading results into container
2024-12-12 17:16:17,947:INFO:Uploading model into container now
2024-12-12 17:16:17,947:INFO:_master_model_container: 21
2024-12-12 17:16:17,947:INFO:_display_container: 21
2024-12-12 17:16:17,947:INFO:Lasso(random_state=6040)
2024-12-12 17:16:17,947:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,027:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,027:INFO:Creating metrics dataframe
2024-12-12 17:16:18,033:INFO:Initializing Ridge Regression
2024-12-12 17:16:18,033:INFO:Total runtime is 0.0051089962323506675 minutes
2024-12-12 17:16:18,033:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,033:INFO:Initializing create_model()
2024-12-12 17:16:18,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,033:INFO:Checking exceptions
2024-12-12 17:16:18,033:INFO:Importing libraries
2024-12-12 17:16:18,033:INFO:Copying training dataset
2024-12-12 17:16:18,037:INFO:Defining folds
2024-12-12 17:16:18,037:INFO:Declaring metric variables
2024-12-12 17:16:18,037:INFO:Importing untrained model
2024-12-12 17:16:18,037:INFO:Ridge Regression Imported successfully
2024-12-12 17:16:18,037:INFO:Starting cross validation
2024-12-12 17:16:18,039:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:18,102:INFO:Calculating mean and std
2024-12-12 17:16:18,102:INFO:Creating metrics dataframe
2024-12-12 17:16:18,104:INFO:Uploading results into container
2024-12-12 17:16:18,104:INFO:Uploading model into container now
2024-12-12 17:16:18,104:INFO:_master_model_container: 22
2024-12-12 17:16:18,104:INFO:_display_container: 21
2024-12-12 17:16:18,104:INFO:Ridge(random_state=6040)
2024-12-12 17:16:18,104:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,185:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,187:INFO:Creating metrics dataframe
2024-12-12 17:16:18,189:INFO:Initializing Elastic Net
2024-12-12 17:16:18,189:INFO:Total runtime is 0.007698782285054525 minutes
2024-12-12 17:16:18,189:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,190:INFO:Initializing create_model()
2024-12-12 17:16:18,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,190:INFO:Checking exceptions
2024-12-12 17:16:18,190:INFO:Importing libraries
2024-12-12 17:16:18,190:INFO:Copying training dataset
2024-12-12 17:16:18,192:INFO:Defining folds
2024-12-12 17:16:18,192:INFO:Declaring metric variables
2024-12-12 17:16:18,193:INFO:Importing untrained model
2024-12-12 17:16:18,193:INFO:Elastic Net Imported successfully
2024-12-12 17:16:18,193:INFO:Starting cross validation
2024-12-12 17:16:18,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:18,254:INFO:Calculating mean and std
2024-12-12 17:16:18,254:INFO:Creating metrics dataframe
2024-12-12 17:16:18,256:INFO:Uploading results into container
2024-12-12 17:16:18,256:INFO:Uploading model into container now
2024-12-12 17:16:18,256:INFO:_master_model_container: 23
2024-12-12 17:16:18,256:INFO:_display_container: 21
2024-12-12 17:16:18,257:INFO:ElasticNet(random_state=6040)
2024-12-12 17:16:18,257:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,338:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,338:INFO:Creating metrics dataframe
2024-12-12 17:16:18,338:INFO:Initializing Least Angle Regression
2024-12-12 17:16:18,338:INFO:Total runtime is 0.010194730758666993 minutes
2024-12-12 17:16:18,338:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,338:INFO:Initializing create_model()
2024-12-12 17:16:18,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,338:INFO:Checking exceptions
2024-12-12 17:16:18,338:INFO:Importing libraries
2024-12-12 17:16:18,338:INFO:Copying training dataset
2024-12-12 17:16:18,338:INFO:Defining folds
2024-12-12 17:16:18,338:INFO:Declaring metric variables
2024-12-12 17:16:18,338:INFO:Importing untrained model
2024-12-12 17:16:18,338:INFO:Least Angle Regression Imported successfully
2024-12-12 17:16:18,338:INFO:Starting cross validation
2024-12-12 17:16:18,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:18,407:INFO:Calculating mean and std
2024-12-12 17:16:18,407:INFO:Creating metrics dataframe
2024-12-12 17:16:18,409:INFO:Uploading results into container
2024-12-12 17:16:18,409:INFO:Uploading model into container now
2024-12-12 17:16:18,409:INFO:_master_model_container: 24
2024-12-12 17:16:18,409:INFO:_display_container: 21
2024-12-12 17:16:18,410:INFO:Lars(random_state=6040)
2024-12-12 17:16:18,410:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,488:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,488:INFO:Creating metrics dataframe
2024-12-12 17:16:18,491:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:16:18,491:INFO:Total runtime is 0.012734540303548179 minutes
2024-12-12 17:16:18,491:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,491:INFO:Initializing create_model()
2024-12-12 17:16:18,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,491:INFO:Checking exceptions
2024-12-12 17:16:18,491:INFO:Importing libraries
2024-12-12 17:16:18,491:INFO:Copying training dataset
2024-12-12 17:16:18,491:INFO:Defining folds
2024-12-12 17:16:18,491:INFO:Declaring metric variables
2024-12-12 17:16:18,491:INFO:Importing untrained model
2024-12-12 17:16:18,491:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:16:18,491:INFO:Starting cross validation
2024-12-12 17:16:18,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:18,556:INFO:Calculating mean and std
2024-12-12 17:16:18,557:INFO:Creating metrics dataframe
2024-12-12 17:16:18,558:INFO:Uploading results into container
2024-12-12 17:16:18,559:INFO:Uploading model into container now
2024-12-12 17:16:18,559:INFO:_master_model_container: 25
2024-12-12 17:16:18,559:INFO:_display_container: 21
2024-12-12 17:16:18,559:INFO:LassoLars(random_state=6040)
2024-12-12 17:16:18,559:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,636:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,636:INFO:Creating metrics dataframe
2024-12-12 17:16:18,636:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:16:18,636:INFO:Total runtime is 0.015154755115509035 minutes
2024-12-12 17:16:18,636:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,636:INFO:Initializing create_model()
2024-12-12 17:16:18,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,636:INFO:Checking exceptions
2024-12-12 17:16:18,636:INFO:Importing libraries
2024-12-12 17:16:18,636:INFO:Copying training dataset
2024-12-12 17:16:18,636:INFO:Defining folds
2024-12-12 17:16:18,636:INFO:Declaring metric variables
2024-12-12 17:16:18,646:INFO:Importing untrained model
2024-12-12 17:16:18,646:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:16:18,646:INFO:Starting cross validation
2024-12-12 17:16:18,646:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:18,709:INFO:Calculating mean and std
2024-12-12 17:16:18,710:INFO:Creating metrics dataframe
2024-12-12 17:16:18,711:INFO:Uploading results into container
2024-12-12 17:16:18,711:INFO:Uploading model into container now
2024-12-12 17:16:18,711:INFO:_master_model_container: 26
2024-12-12 17:16:18,711:INFO:_display_container: 21
2024-12-12 17:16:18,711:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:16:18,711:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,785:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,785:INFO:Creating metrics dataframe
2024-12-12 17:16:18,798:INFO:Initializing Bayesian Ridge
2024-12-12 17:16:18,798:INFO:Total runtime is 0.017862439155578617 minutes
2024-12-12 17:16:18,800:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,800:INFO:Initializing create_model()
2024-12-12 17:16:18,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,800:INFO:Checking exceptions
2024-12-12 17:16:18,800:INFO:Importing libraries
2024-12-12 17:16:18,800:INFO:Copying training dataset
2024-12-12 17:16:18,803:INFO:Defining folds
2024-12-12 17:16:18,803:INFO:Declaring metric variables
2024-12-12 17:16:18,803:INFO:Importing untrained model
2024-12-12 17:16:18,803:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:16:18,803:INFO:Starting cross validation
2024-12-12 17:16:18,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:18,864:INFO:Calculating mean and std
2024-12-12 17:16:18,864:INFO:Creating metrics dataframe
2024-12-12 17:16:18,864:INFO:Uploading results into container
2024-12-12 17:16:18,864:INFO:Uploading model into container now
2024-12-12 17:16:18,864:INFO:_master_model_container: 27
2024-12-12 17:16:18,864:INFO:_display_container: 21
2024-12-12 17:16:18,864:INFO:BayesianRidge()
2024-12-12 17:16:18,864:INFO:create_model() successfully completed......................................
2024-12-12 17:16:18,936:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:18,936:INFO:Creating metrics dataframe
2024-12-12 17:16:18,936:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:16:18,936:INFO:Total runtime is 0.020162073771158858 minutes
2024-12-12 17:16:18,936:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:18,936:INFO:Initializing create_model()
2024-12-12 17:16:18,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:18,936:INFO:Checking exceptions
2024-12-12 17:16:18,936:INFO:Importing libraries
2024-12-12 17:16:18,936:INFO:Copying training dataset
2024-12-12 17:16:18,936:INFO:Defining folds
2024-12-12 17:16:18,936:INFO:Declaring metric variables
2024-12-12 17:16:18,951:INFO:Importing untrained model
2024-12-12 17:16:18,951:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:16:18,951:INFO:Starting cross validation
2024-12-12 17:16:18,951:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:19,011:INFO:Calculating mean and std
2024-12-12 17:16:19,011:INFO:Creating metrics dataframe
2024-12-12 17:16:19,012:INFO:Uploading results into container
2024-12-12 17:16:19,012:INFO:Uploading model into container now
2024-12-12 17:16:19,012:INFO:_master_model_container: 28
2024-12-12 17:16:19,012:INFO:_display_container: 21
2024-12-12 17:16:19,012:INFO:PassiveAggressiveRegressor(random_state=6040)
2024-12-12 17:16:19,012:INFO:create_model() successfully completed......................................
2024-12-12 17:16:19,094:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:19,094:INFO:Creating metrics dataframe
2024-12-12 17:16:19,094:INFO:Initializing Huber Regressor
2024-12-12 17:16:19,094:INFO:Total runtime is 0.022781705856323248 minutes
2024-12-12 17:16:19,094:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:19,094:INFO:Initializing create_model()
2024-12-12 17:16:19,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:19,094:INFO:Checking exceptions
2024-12-12 17:16:19,094:INFO:Importing libraries
2024-12-12 17:16:19,094:INFO:Copying training dataset
2024-12-12 17:16:19,094:INFO:Defining folds
2024-12-12 17:16:19,094:INFO:Declaring metric variables
2024-12-12 17:16:19,094:INFO:Importing untrained model
2024-12-12 17:16:19,094:INFO:Huber Regressor Imported successfully
2024-12-12 17:16:19,094:INFO:Starting cross validation
2024-12-12 17:16:19,094:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:19,153:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,153:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,154:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,163:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,163:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,164:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,164:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,172:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,172:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,172:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:16:19,191:INFO:Calculating mean and std
2024-12-12 17:16:19,191:INFO:Creating metrics dataframe
2024-12-12 17:16:19,192:INFO:Uploading results into container
2024-12-12 17:16:19,192:INFO:Uploading model into container now
2024-12-12 17:16:19,192:INFO:_master_model_container: 29
2024-12-12 17:16:19,192:INFO:_display_container: 21
2024-12-12 17:16:19,192:INFO:HuberRegressor()
2024-12-12 17:16:19,192:INFO:create_model() successfully completed......................................
2024-12-12 17:16:19,271:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:19,271:INFO:Creating metrics dataframe
2024-12-12 17:16:19,271:INFO:Initializing K Neighbors Regressor
2024-12-12 17:16:19,271:INFO:Total runtime is 0.025731968879699713 minutes
2024-12-12 17:16:19,271:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:19,271:INFO:Initializing create_model()
2024-12-12 17:16:19,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:19,271:INFO:Checking exceptions
2024-12-12 17:16:19,271:INFO:Importing libraries
2024-12-12 17:16:19,271:INFO:Copying training dataset
2024-12-12 17:16:19,271:INFO:Defining folds
2024-12-12 17:16:19,271:INFO:Declaring metric variables
2024-12-12 17:16:19,271:INFO:Importing untrained model
2024-12-12 17:16:19,271:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:16:19,271:INFO:Starting cross validation
2024-12-12 17:16:19,280:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:19,360:INFO:Calculating mean and std
2024-12-12 17:16:19,360:INFO:Creating metrics dataframe
2024-12-12 17:16:19,364:INFO:Uploading results into container
2024-12-12 17:16:19,364:INFO:Uploading model into container now
2024-12-12 17:16:19,364:INFO:_master_model_container: 30
2024-12-12 17:16:19,364:INFO:_display_container: 21
2024-12-12 17:16:19,364:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:16:19,364:INFO:create_model() successfully completed......................................
2024-12-12 17:16:19,463:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:19,463:INFO:Creating metrics dataframe
2024-12-12 17:16:19,466:INFO:Initializing Decision Tree Regressor
2024-12-12 17:16:19,466:INFO:Total runtime is 0.02898621559143067 minutes
2024-12-12 17:16:19,466:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:19,466:INFO:Initializing create_model()
2024-12-12 17:16:19,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:19,466:INFO:Checking exceptions
2024-12-12 17:16:19,466:INFO:Importing libraries
2024-12-12 17:16:19,467:INFO:Copying training dataset
2024-12-12 17:16:19,470:INFO:Defining folds
2024-12-12 17:16:19,470:INFO:Declaring metric variables
2024-12-12 17:16:19,470:INFO:Importing untrained model
2024-12-12 17:16:19,471:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:16:19,471:INFO:Starting cross validation
2024-12-12 17:16:19,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:19,546:INFO:Calculating mean and std
2024-12-12 17:16:19,546:INFO:Creating metrics dataframe
2024-12-12 17:16:19,546:INFO:Uploading results into container
2024-12-12 17:16:19,546:INFO:Uploading model into container now
2024-12-12 17:16:19,546:INFO:_master_model_container: 31
2024-12-12 17:16:19,546:INFO:_display_container: 21
2024-12-12 17:16:19,546:INFO:DecisionTreeRegressor(random_state=6040)
2024-12-12 17:16:19,546:INFO:create_model() successfully completed......................................
2024-12-12 17:16:19,629:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:19,629:INFO:Creating metrics dataframe
2024-12-12 17:16:19,629:INFO:Initializing Random Forest Regressor
2024-12-12 17:16:19,629:INFO:Total runtime is 0.03169689973195394 minutes
2024-12-12 17:16:19,629:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:19,629:INFO:Initializing create_model()
2024-12-12 17:16:19,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B337D9D10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B33996690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:19,629:INFO:Checking exceptions
2024-12-12 17:16:19,629:INFO:Importing libraries
2024-12-12 17:16:19,629:INFO:Copying training dataset
2024-12-12 17:16:19,634:INFO:Defining folds
2024-12-12 17:16:19,634:INFO:Declaring metric variables
2024-12-12 17:16:19,635:INFO:Importing untrained model
2024-12-12 17:16:19,635:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:16:19,635:INFO:Starting cross validation
2024-12-12 17:16:19,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:19,969:INFO:Calculating mean and std
2024-12-12 17:16:19,969:INFO:Creating metrics dataframe
2024-12-12 17:16:19,971:INFO:Uploading results into container
2024-12-12 17:16:19,971:INFO:Uploading model into container now
2024-12-12 17:16:19,971:INFO:_master_model_container: 32
2024-12-12 17:16:19,971:INFO:_display_container: 21
2024-12-12 17:16:19,973:INFO:RandomForestRegressor(n_jobs=-1, random_state=6040)
2024-12-12 17:16:19,973:INFO:create_model() successfully completed......................................
2024-12-12 17:16:50,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:16:50,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:16:50,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:16:50,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-12 17:16:50,792:INFO:PyCaret RegressionExperiment
2024-12-12 17:16:50,792:INFO:Logging name: reg-default-name
2024-12-12 17:16:50,792:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-12 17:16:50,792:INFO:version 3.3.2
2024-12-12 17:16:50,792:INFO:Initializing setup()
2024-12-12 17:16:50,792:INFO:self.USI: 9e52
2024-12-12 17:16:50,792:INFO:self._variable_keys: {'fold_shuffle_param', 'transform_target_param', 'fold_groups_param', 'USI', 'html_param', 'log_plots_param', '_ml_usecase', 'memory', 'logging_param', 'idx', '_available_plots', 'X_train', 'n_jobs_param', 'gpu_param', 'exp_id', 'y', 'exp_name_log', 'seed', 'pipeline', 'X_test', 'fold_generator', 'y_test', 'y_train', 'target_param', 'X', 'data', 'gpu_n_jobs_param'}
2024-12-12 17:16:50,792:INFO:Checking environment
2024-12-12 17:16:50,792:INFO:python_version: 3.11.3
2024-12-12 17:16:50,793:INFO:python_build: ('tags/v3.11.3:f3909b8', 'Apr  4 2023 23:49:59')
2024-12-12 17:16:50,793:INFO:machine: AMD64
2024-12-12 17:16:50,801:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-12 17:16:50,816:INFO:Memory: svmem(total=16475824128, available=2644357120, percent=84.0, used=13831467008, free=2644357120)
2024-12-12 17:16:50,816:INFO:Physical Core: 6
2024-12-12 17:16:50,816:INFO:Logical Core: 12
2024-12-12 17:16:50,816:INFO:Checking libraries
2024-12-12 17:16:50,816:INFO:System:
2024-12-12 17:16:50,816:INFO:    python: 3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)]
2024-12-12 17:16:50,816:INFO:executable: C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\python.exe
2024-12-12 17:16:50,816:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-12 17:16:50,816:INFO:PyCaret required dependencies:
2024-12-12 17:16:50,870:INFO:                 pip: 24.2
2024-12-12 17:16:50,870:INFO:          setuptools: 67.8.0
2024-12-12 17:16:50,871:INFO:             pycaret: 3.3.2
2024-12-12 17:16:50,871:INFO:             IPython: 8.13.2
2024-12-12 17:16:50,871:INFO:          ipywidgets: 8.1.5
2024-12-12 17:16:50,871:INFO:                tqdm: 4.66.5
2024-12-12 17:16:50,871:INFO:               numpy: 1.23.5
2024-12-12 17:16:50,871:INFO:              pandas: 2.1.4
2024-12-12 17:16:50,871:INFO:              jinja2: 3.1.2
2024-12-12 17:16:50,871:INFO:               scipy: 1.11.4
2024-12-12 17:16:50,871:INFO:              joblib: 1.3.2
2024-12-12 17:16:50,871:INFO:             sklearn: 1.4.2
2024-12-12 17:16:50,871:INFO:                pyod: 2.0.2
2024-12-12 17:16:50,871:INFO:            imblearn: 0.12.3
2024-12-12 17:16:50,871:INFO:   category_encoders: 2.6.3
2024-12-12 17:16:50,871:INFO:            lightgbm: 4.4.0
2024-12-12 17:16:50,871:INFO:               numba: 0.60.0
2024-12-12 17:16:50,871:INFO:            requests: 2.32.3
2024-12-12 17:16:50,871:INFO:          matplotlib: 3.7.5
2024-12-12 17:16:50,871:INFO:          scikitplot: 0.3.7
2024-12-12 17:16:50,871:INFO:         yellowbrick: 1.5
2024-12-12 17:16:50,871:INFO:              plotly: 5.24.0
2024-12-12 17:16:50,871:INFO:    plotly-resampler: Not installed
2024-12-12 17:16:50,871:INFO:             kaleido: 0.2.1
2024-12-12 17:16:50,871:INFO:           schemdraw: 0.15
2024-12-12 17:16:50,871:INFO:         statsmodels: 0.14.2
2024-12-12 17:16:50,871:INFO:              sktime: 0.26.0
2024-12-12 17:16:50,871:INFO:               tbats: 1.1.3
2024-12-12 17:16:50,871:INFO:            pmdarima: 2.0.4
2024-12-12 17:16:50,871:INFO:              psutil: 5.9.5
2024-12-12 17:16:50,871:INFO:          markupsafe: 2.1.2
2024-12-12 17:16:50,871:INFO:             pickle5: Not installed
2024-12-12 17:16:50,871:INFO:         cloudpickle: 3.0.0
2024-12-12 17:16:50,871:INFO:         deprecation: 2.1.0
2024-12-12 17:16:50,872:INFO:              xxhash: 3.5.0
2024-12-12 17:16:50,872:INFO:           wurlitzer: Not installed
2024-12-12 17:16:50,872:INFO:PyCaret optional dependencies:
2024-12-12 17:16:50,907:INFO:                shap: Not installed
2024-12-12 17:16:50,907:INFO:           interpret: Not installed
2024-12-12 17:16:50,907:INFO:                umap: Not installed
2024-12-12 17:16:50,908:INFO:     ydata_profiling: Not installed
2024-12-12 17:16:50,908:INFO:  explainerdashboard: Not installed
2024-12-12 17:16:50,908:INFO:             autoviz: Not installed
2024-12-12 17:16:50,908:INFO:           fairlearn: Not installed
2024-12-12 17:16:50,908:INFO:          deepchecks: Not installed
2024-12-12 17:16:50,908:INFO:             xgboost: 2.1.1
2024-12-12 17:16:50,908:INFO:            catboost: Not installed
2024-12-12 17:16:50,908:INFO:              kmodes: Not installed
2024-12-12 17:16:50,908:INFO:             mlxtend: Not installed
2024-12-12 17:16:50,908:INFO:       statsforecast: Not installed
2024-12-12 17:16:50,908:INFO:        tune_sklearn: Not installed
2024-12-12 17:16:50,908:INFO:                 ray: Not installed
2024-12-12 17:16:50,908:INFO:            hyperopt: Not installed
2024-12-12 17:16:50,908:INFO:              optuna: 3.6.1
2024-12-12 17:16:50,908:INFO:               skopt: Not installed
2024-12-12 17:16:50,908:INFO:              mlflow: Not installed
2024-12-12 17:16:50,908:INFO:              gradio: Not installed
2024-12-12 17:16:50,908:INFO:             fastapi: Not installed
2024-12-12 17:16:50,908:INFO:             uvicorn: Not installed
2024-12-12 17:16:50,908:INFO:              m2cgen: Not installed
2024-12-12 17:16:50,908:INFO:           evidently: Not installed
2024-12-12 17:16:50,908:INFO:               fugue: Not installed
2024-12-12 17:16:50,908:INFO:           streamlit: 1.26.0
2024-12-12 17:16:50,908:INFO:             prophet: Not installed
2024-12-12 17:16:50,908:INFO:None
2024-12-12 17:16:50,908:INFO:Set up data.
2024-12-12 17:16:50,913:INFO:Set up folding strategy.
2024-12-12 17:16:50,913:INFO:Set up train/test split.
2024-12-12 17:16:50,916:INFO:Set up index.
2024-12-12 17:16:50,916:INFO:Assigning column types.
2024-12-12 17:16:50,920:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-12 17:16:50,920:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-12 17:16:50,924:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:50,928:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:50,982:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,015:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,015:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,015:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,083:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,119:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,127:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-12 17:16:51,131:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,134:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,189:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,228:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,235:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,241:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,295:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,332:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,332:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,332:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-12 17:16:51,347:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,399:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,441:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,450:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,555:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,557:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-12 17:16:51,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,671:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,814:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:51,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:51,814:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-12 17:16:51,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:51,997:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:52,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:52,090:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-12 17:16:52,151:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:52,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:52,152:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-12 17:16:52,285:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:52,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:52,406:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:52,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:52,422:INFO:Preparing preprocessing pipeline...
2024-12-12 17:16:52,422:INFO:Set up simple imputation.
2024-12-12 17:16:52,437:INFO:Finished creating preprocessing pipeline.
2024-12-12 17:16:52,451:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\KANAJI~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['layers_1', 'layers_2',
                                             'batch_size_1', 'batch_size_2',
                                             'model1_Param', 'model2_Param',
                                             'model1_FLP', 'model2_FLP'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-12-12 17:16:52,451:INFO:Creating final display dataframe.
2024-12-12 17:16:52,513:INFO:Setup _display_container:                     Description             Value
0                    Session id               495
1                        Target            norm_P
2                   Target type        Regression
3           Original data shape           (90, 9)
4        Transformed data shape           (90, 9)
5   Transformed train set shape           (62, 9)
6    Transformed test set shape           (28, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              9e52
2024-12-12 17:16:52,645:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:52,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:52,776:INFO:Soft dependency imported: xgboost: 2.1.1
2024-12-12 17:16:52,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-12 17:16:52,783:INFO:setup() successfully completed in 1.99s...............
2024-12-12 17:16:52,783:INFO:Initializing compare_models()
2024-12-12 17:16:52,783:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=18, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 18, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:16:52,783:INFO:Checking exceptions
2024-12-12 17:16:52,785:INFO:Preparing display monitor
2024-12-12 17:16:52,786:INFO:Initializing Linear Regression
2024-12-12 17:16:52,786:INFO:Total runtime is 0.0 minutes
2024-12-12 17:16:52,786:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:52,786:INFO:Initializing create_model()
2024-12-12 17:16:52,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:52,786:INFO:Checking exceptions
2024-12-12 17:16:52,786:INFO:Importing libraries
2024-12-12 17:16:52,786:INFO:Copying training dataset
2024-12-12 17:16:52,786:INFO:Defining folds
2024-12-12 17:16:52,786:INFO:Declaring metric variables
2024-12-12 17:16:52,786:INFO:Importing untrained model
2024-12-12 17:16:52,786:INFO:Linear Regression Imported successfully
2024-12-12 17:16:52,786:INFO:Starting cross validation
2024-12-12 17:16:52,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:16:58,036:INFO:Calculating mean and std
2024-12-12 17:16:58,036:INFO:Creating metrics dataframe
2024-12-12 17:16:58,036:INFO:Uploading results into container
2024-12-12 17:16:58,036:INFO:Uploading model into container now
2024-12-12 17:16:58,036:INFO:_master_model_container: 1
2024-12-12 17:16:58,036:INFO:_display_container: 2
2024-12-12 17:16:58,036:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:16:58,036:INFO:create_model() successfully completed......................................
2024-12-12 17:16:58,144:INFO:SubProcess create_model() end ==================================
2024-12-12 17:16:58,144:INFO:Creating metrics dataframe
2024-12-12 17:16:58,145:INFO:Initializing Lasso Regression
2024-12-12 17:16:58,145:INFO:Total runtime is 0.08930498758951823 minutes
2024-12-12 17:16:58,145:INFO:SubProcess create_model() called ==================================
2024-12-12 17:16:58,145:INFO:Initializing create_model()
2024-12-12 17:16:58,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:16:58,145:INFO:Checking exceptions
2024-12-12 17:16:58,145:INFO:Importing libraries
2024-12-12 17:16:58,145:INFO:Copying training dataset
2024-12-12 17:16:58,148:INFO:Defining folds
2024-12-12 17:16:58,148:INFO:Declaring metric variables
2024-12-12 17:16:58,148:INFO:Importing untrained model
2024-12-12 17:16:58,148:INFO:Lasso Regression Imported successfully
2024-12-12 17:16:58,148:INFO:Starting cross validation
2024-12-12 17:16:58,148:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:00,347:INFO:Calculating mean and std
2024-12-12 17:17:00,347:INFO:Creating metrics dataframe
2024-12-12 17:17:00,350:INFO:Uploading results into container
2024-12-12 17:17:00,351:INFO:Uploading model into container now
2024-12-12 17:17:00,351:INFO:_master_model_container: 2
2024-12-12 17:17:00,351:INFO:_display_container: 2
2024-12-12 17:17:00,351:INFO:Lasso(random_state=495)
2024-12-12 17:17:00,351:INFO:create_model() successfully completed......................................
2024-12-12 17:17:00,435:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:00,435:INFO:Creating metrics dataframe
2024-12-12 17:17:00,438:INFO:Initializing Ridge Regression
2024-12-12 17:17:00,438:INFO:Total runtime is 0.12751996914545694 minutes
2024-12-12 17:17:00,438:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:00,438:INFO:Initializing create_model()
2024-12-12 17:17:00,438:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:00,438:INFO:Checking exceptions
2024-12-12 17:17:00,438:INFO:Importing libraries
2024-12-12 17:17:00,438:INFO:Copying training dataset
2024-12-12 17:17:00,441:INFO:Defining folds
2024-12-12 17:17:00,441:INFO:Declaring metric variables
2024-12-12 17:17:00,441:INFO:Importing untrained model
2024-12-12 17:17:00,441:INFO:Ridge Regression Imported successfully
2024-12-12 17:17:00,442:INFO:Starting cross validation
2024-12-12 17:17:00,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:00,493:INFO:Calculating mean and std
2024-12-12 17:17:00,493:INFO:Creating metrics dataframe
2024-12-12 17:17:00,493:INFO:Uploading results into container
2024-12-12 17:17:00,493:INFO:Uploading model into container now
2024-12-12 17:17:00,493:INFO:_master_model_container: 3
2024-12-12 17:17:00,493:INFO:_display_container: 2
2024-12-12 17:17:00,493:INFO:Ridge(random_state=495)
2024-12-12 17:17:00,493:INFO:create_model() successfully completed......................................
2024-12-12 17:17:00,573:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:00,574:INFO:Creating metrics dataframe
2024-12-12 17:17:00,576:INFO:Initializing Elastic Net
2024-12-12 17:17:00,576:INFO:Total runtime is 0.12982111771901447 minutes
2024-12-12 17:17:00,576:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:00,576:INFO:Initializing create_model()
2024-12-12 17:17:00,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:00,576:INFO:Checking exceptions
2024-12-12 17:17:00,576:INFO:Importing libraries
2024-12-12 17:17:00,576:INFO:Copying training dataset
2024-12-12 17:17:00,578:INFO:Defining folds
2024-12-12 17:17:00,578:INFO:Declaring metric variables
2024-12-12 17:17:00,578:INFO:Importing untrained model
2024-12-12 17:17:00,579:INFO:Elastic Net Imported successfully
2024-12-12 17:17:00,579:INFO:Starting cross validation
2024-12-12 17:17:00,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:00,632:INFO:Calculating mean and std
2024-12-12 17:17:00,632:INFO:Creating metrics dataframe
2024-12-12 17:17:00,632:INFO:Uploading results into container
2024-12-12 17:17:00,632:INFO:Uploading model into container now
2024-12-12 17:17:00,632:INFO:_master_model_container: 4
2024-12-12 17:17:00,632:INFO:_display_container: 2
2024-12-12 17:17:00,632:INFO:ElasticNet(random_state=495)
2024-12-12 17:17:00,636:INFO:create_model() successfully completed......................................
2024-12-12 17:17:00,714:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:00,714:INFO:Creating metrics dataframe
2024-12-12 17:17:00,716:INFO:Initializing Least Angle Regression
2024-12-12 17:17:00,716:INFO:Total runtime is 0.13215590318044027 minutes
2024-12-12 17:17:00,716:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:00,716:INFO:Initializing create_model()
2024-12-12 17:17:00,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:00,716:INFO:Checking exceptions
2024-12-12 17:17:00,716:INFO:Importing libraries
2024-12-12 17:17:00,716:INFO:Copying training dataset
2024-12-12 17:17:00,719:INFO:Defining folds
2024-12-12 17:17:00,719:INFO:Declaring metric variables
2024-12-12 17:17:00,719:INFO:Importing untrained model
2024-12-12 17:17:00,719:INFO:Least Angle Regression Imported successfully
2024-12-12 17:17:00,719:INFO:Starting cross validation
2024-12-12 17:17:00,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:00,780:INFO:Calculating mean and std
2024-12-12 17:17:00,780:INFO:Creating metrics dataframe
2024-12-12 17:17:00,781:INFO:Uploading results into container
2024-12-12 17:17:00,781:INFO:Uploading model into container now
2024-12-12 17:17:00,781:INFO:_master_model_container: 5
2024-12-12 17:17:00,783:INFO:_display_container: 2
2024-12-12 17:17:00,783:INFO:Lars(random_state=495)
2024-12-12 17:17:00,783:INFO:create_model() successfully completed......................................
2024-12-12 17:17:00,860:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:00,860:INFO:Creating metrics dataframe
2024-12-12 17:17:00,862:INFO:Initializing Lasso Least Angle Regression
2024-12-12 17:17:00,863:INFO:Total runtime is 0.13461811145146688 minutes
2024-12-12 17:17:00,863:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:00,863:INFO:Initializing create_model()
2024-12-12 17:17:00,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:00,863:INFO:Checking exceptions
2024-12-12 17:17:00,863:INFO:Importing libraries
2024-12-12 17:17:00,863:INFO:Copying training dataset
2024-12-12 17:17:00,866:INFO:Defining folds
2024-12-12 17:17:00,866:INFO:Declaring metric variables
2024-12-12 17:17:00,866:INFO:Importing untrained model
2024-12-12 17:17:00,866:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:17:00,867:INFO:Starting cross validation
2024-12-12 17:17:00,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:00,931:INFO:Calculating mean and std
2024-12-12 17:17:00,931:INFO:Creating metrics dataframe
2024-12-12 17:17:00,931:INFO:Uploading results into container
2024-12-12 17:17:00,931:INFO:Uploading model into container now
2024-12-12 17:17:00,931:INFO:_master_model_container: 6
2024-12-12 17:17:00,931:INFO:_display_container: 2
2024-12-12 17:17:00,931:INFO:LassoLars(random_state=495)
2024-12-12 17:17:00,931:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,016:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,017:INFO:Creating metrics dataframe
2024-12-12 17:17:01,019:INFO:Initializing Orthogonal Matching Pursuit
2024-12-12 17:17:01,019:INFO:Total runtime is 0.13720733722050985 minutes
2024-12-12 17:17:01,019:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,019:INFO:Initializing create_model()
2024-12-12 17:17:01,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,019:INFO:Checking exceptions
2024-12-12 17:17:01,019:INFO:Importing libraries
2024-12-12 17:17:01,019:INFO:Copying training dataset
2024-12-12 17:17:01,022:INFO:Defining folds
2024-12-12 17:17:01,022:INFO:Declaring metric variables
2024-12-12 17:17:01,022:INFO:Importing untrained model
2024-12-12 17:17:01,022:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:17:01,022:INFO:Starting cross validation
2024-12-12 17:17:01,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:01,080:INFO:Calculating mean and std
2024-12-12 17:17:01,080:INFO:Creating metrics dataframe
2024-12-12 17:17:01,082:INFO:Uploading results into container
2024-12-12 17:17:01,082:INFO:Uploading model into container now
2024-12-12 17:17:01,083:INFO:_master_model_container: 7
2024-12-12 17:17:01,083:INFO:_display_container: 2
2024-12-12 17:17:01,083:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:17:01,083:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,164:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,164:INFO:Creating metrics dataframe
2024-12-12 17:17:01,167:INFO:Initializing Bayesian Ridge
2024-12-12 17:17:01,167:INFO:Total runtime is 0.13967387676239013 minutes
2024-12-12 17:17:01,167:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,167:INFO:Initializing create_model()
2024-12-12 17:17:01,167:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,168:INFO:Checking exceptions
2024-12-12 17:17:01,168:INFO:Importing libraries
2024-12-12 17:17:01,168:INFO:Copying training dataset
2024-12-12 17:17:01,171:INFO:Defining folds
2024-12-12 17:17:01,171:INFO:Declaring metric variables
2024-12-12 17:17:01,171:INFO:Importing untrained model
2024-12-12 17:17:01,171:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:17:01,171:INFO:Starting cross validation
2024-12-12 17:17:01,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:01,233:INFO:Calculating mean and std
2024-12-12 17:17:01,233:INFO:Creating metrics dataframe
2024-12-12 17:17:01,235:INFO:Uploading results into container
2024-12-12 17:17:01,235:INFO:Uploading model into container now
2024-12-12 17:17:01,235:INFO:_master_model_container: 8
2024-12-12 17:17:01,235:INFO:_display_container: 2
2024-12-12 17:17:01,235:INFO:BayesianRidge()
2024-12-12 17:17:01,235:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,315:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,315:INFO:Creating metrics dataframe
2024-12-12 17:17:01,317:INFO:Initializing Passive Aggressive Regressor
2024-12-12 17:17:01,317:INFO:Total runtime is 0.14218302965164184 minutes
2024-12-12 17:17:01,317:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,317:INFO:Initializing create_model()
2024-12-12 17:17:01,317:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,317:INFO:Checking exceptions
2024-12-12 17:17:01,317:INFO:Importing libraries
2024-12-12 17:17:01,317:INFO:Copying training dataset
2024-12-12 17:17:01,321:INFO:Defining folds
2024-12-12 17:17:01,321:INFO:Declaring metric variables
2024-12-12 17:17:01,321:INFO:Importing untrained model
2024-12-12 17:17:01,322:INFO:Passive Aggressive Regressor Imported successfully
2024-12-12 17:17:01,322:INFO:Starting cross validation
2024-12-12 17:17:01,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:01,377:INFO:Calculating mean and std
2024-12-12 17:17:01,377:INFO:Creating metrics dataframe
2024-12-12 17:17:01,377:INFO:Uploading results into container
2024-12-12 17:17:01,377:INFO:Uploading model into container now
2024-12-12 17:17:01,377:INFO:_master_model_container: 9
2024-12-12 17:17:01,377:INFO:_display_container: 2
2024-12-12 17:17:01,377:INFO:PassiveAggressiveRegressor(random_state=495)
2024-12-12 17:17:01,377:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,461:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,461:INFO:Creating metrics dataframe
2024-12-12 17:17:01,463:INFO:Initializing Huber Regressor
2024-12-12 17:17:01,463:INFO:Total runtime is 0.14461315075556436 minutes
2024-12-12 17:17:01,463:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,463:INFO:Initializing create_model()
2024-12-12 17:17:01,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,463:INFO:Checking exceptions
2024-12-12 17:17:01,463:INFO:Importing libraries
2024-12-12 17:17:01,463:INFO:Copying training dataset
2024-12-12 17:17:01,466:INFO:Defining folds
2024-12-12 17:17:01,466:INFO:Declaring metric variables
2024-12-12 17:17:01,466:INFO:Importing untrained model
2024-12-12 17:17:01,466:INFO:Huber Regressor Imported successfully
2024-12-12 17:17:01,466:INFO:Starting cross validation
2024-12-12 17:17:01,467:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:01,509:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,509:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,509:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,520:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,520:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,520:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,537:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,537:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,537:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-12 17:17:01,557:INFO:Calculating mean and std
2024-12-12 17:17:01,558:INFO:Creating metrics dataframe
2024-12-12 17:17:01,560:INFO:Uploading results into container
2024-12-12 17:17:01,560:INFO:Uploading model into container now
2024-12-12 17:17:01,560:INFO:_master_model_container: 10
2024-12-12 17:17:01,560:INFO:_display_container: 2
2024-12-12 17:17:01,560:INFO:HuberRegressor()
2024-12-12 17:17:01,560:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,643:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,643:INFO:Creating metrics dataframe
2024-12-12 17:17:01,646:INFO:Initializing K Neighbors Regressor
2024-12-12 17:17:01,646:INFO:Total runtime is 0.14766130050023396 minutes
2024-12-12 17:17:01,646:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,646:INFO:Initializing create_model()
2024-12-12 17:17:01,646:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,646:INFO:Checking exceptions
2024-12-12 17:17:01,646:INFO:Importing libraries
2024-12-12 17:17:01,646:INFO:Copying training dataset
2024-12-12 17:17:01,649:INFO:Defining folds
2024-12-12 17:17:01,649:INFO:Declaring metric variables
2024-12-12 17:17:01,649:INFO:Importing untrained model
2024-12-12 17:17:01,649:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:17:01,649:INFO:Starting cross validation
2024-12-12 17:17:01,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:01,728:INFO:Calculating mean and std
2024-12-12 17:17:01,728:INFO:Creating metrics dataframe
2024-12-12 17:17:01,730:INFO:Uploading results into container
2024-12-12 17:17:01,730:INFO:Uploading model into container now
2024-12-12 17:17:01,730:INFO:_master_model_container: 11
2024-12-12 17:17:01,730:INFO:_display_container: 2
2024-12-12 17:17:01,730:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:17:01,730:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,813:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,813:INFO:Creating metrics dataframe
2024-12-12 17:17:01,815:INFO:Initializing Decision Tree Regressor
2024-12-12 17:17:01,815:INFO:Total runtime is 0.15047645568847656 minutes
2024-12-12 17:17:01,815:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,815:INFO:Initializing create_model()
2024-12-12 17:17:01,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,815:INFO:Checking exceptions
2024-12-12 17:17:01,815:INFO:Importing libraries
2024-12-12 17:17:01,815:INFO:Copying training dataset
2024-12-12 17:17:01,818:INFO:Defining folds
2024-12-12 17:17:01,818:INFO:Declaring metric variables
2024-12-12 17:17:01,819:INFO:Importing untrained model
2024-12-12 17:17:01,819:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:17:01,819:INFO:Starting cross validation
2024-12-12 17:17:01,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:01,881:INFO:Calculating mean and std
2024-12-12 17:17:01,882:INFO:Creating metrics dataframe
2024-12-12 17:17:01,883:INFO:Uploading results into container
2024-12-12 17:17:01,883:INFO:Uploading model into container now
2024-12-12 17:17:01,883:INFO:_master_model_container: 12
2024-12-12 17:17:01,883:INFO:_display_container: 2
2024-12-12 17:17:01,883:INFO:DecisionTreeRegressor(random_state=495)
2024-12-12 17:17:01,883:INFO:create_model() successfully completed......................................
2024-12-12 17:17:01,963:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:01,963:INFO:Creating metrics dataframe
2024-12-12 17:17:01,966:INFO:Initializing Random Forest Regressor
2024-12-12 17:17:01,966:INFO:Total runtime is 0.15299651622772217 minutes
2024-12-12 17:17:01,966:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:01,966:INFO:Initializing create_model()
2024-12-12 17:17:01,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:01,966:INFO:Checking exceptions
2024-12-12 17:17:01,966:INFO:Importing libraries
2024-12-12 17:17:01,966:INFO:Copying training dataset
2024-12-12 17:17:01,969:INFO:Defining folds
2024-12-12 17:17:01,969:INFO:Declaring metric variables
2024-12-12 17:17:01,969:INFO:Importing untrained model
2024-12-12 17:17:01,970:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:17:01,970:INFO:Starting cross validation
2024-12-12 17:17:01,970:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:02,280:INFO:Calculating mean and std
2024-12-12 17:17:02,280:INFO:Creating metrics dataframe
2024-12-12 17:17:02,282:INFO:Uploading results into container
2024-12-12 17:17:02,282:INFO:Uploading model into container now
2024-12-12 17:17:02,282:INFO:_master_model_container: 13
2024-12-12 17:17:02,282:INFO:_display_container: 2
2024-12-12 17:17:02,282:INFO:RandomForestRegressor(n_jobs=-1, random_state=495)
2024-12-12 17:17:02,282:INFO:create_model() successfully completed......................................
2024-12-12 17:17:02,363:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:02,363:INFO:Creating metrics dataframe
2024-12-12 17:17:02,365:INFO:Initializing Extra Trees Regressor
2024-12-12 17:17:02,365:INFO:Total runtime is 0.15964876810709636 minutes
2024-12-12 17:17:02,365:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:02,365:INFO:Initializing create_model()
2024-12-12 17:17:02,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:02,365:INFO:Checking exceptions
2024-12-12 17:17:02,365:INFO:Importing libraries
2024-12-12 17:17:02,365:INFO:Copying training dataset
2024-12-12 17:17:02,368:INFO:Defining folds
2024-12-12 17:17:02,368:INFO:Declaring metric variables
2024-12-12 17:17:02,368:INFO:Importing untrained model
2024-12-12 17:17:02,368:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:17:02,368:INFO:Starting cross validation
2024-12-12 17:17:02,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:02,617:INFO:Calculating mean and std
2024-12-12 17:17:02,617:INFO:Creating metrics dataframe
2024-12-12 17:17:02,617:INFO:Uploading results into container
2024-12-12 17:17:02,617:INFO:Uploading model into container now
2024-12-12 17:17:02,617:INFO:_master_model_container: 14
2024-12-12 17:17:02,617:INFO:_display_container: 2
2024-12-12 17:17:02,617:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=495)
2024-12-12 17:17:02,617:INFO:create_model() successfully completed......................................
2024-12-12 17:17:02,695:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:02,696:INFO:Creating metrics dataframe
2024-12-12 17:17:02,698:INFO:Initializing AdaBoost Regressor
2024-12-12 17:17:02,698:INFO:Total runtime is 0.16518892447153727 minutes
2024-12-12 17:17:02,698:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:02,698:INFO:Initializing create_model()
2024-12-12 17:17:02,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:02,698:INFO:Checking exceptions
2024-12-12 17:17:02,698:INFO:Importing libraries
2024-12-12 17:17:02,698:INFO:Copying training dataset
2024-12-12 17:17:02,701:INFO:Defining folds
2024-12-12 17:17:02,701:INFO:Declaring metric variables
2024-12-12 17:17:02,701:INFO:Importing untrained model
2024-12-12 17:17:02,701:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:17:02,701:INFO:Starting cross validation
2024-12-12 17:17:02,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:02,858:INFO:Calculating mean and std
2024-12-12 17:17:02,859:INFO:Creating metrics dataframe
2024-12-12 17:17:02,860:INFO:Uploading results into container
2024-12-12 17:17:02,860:INFO:Uploading model into container now
2024-12-12 17:17:02,861:INFO:_master_model_container: 15
2024-12-12 17:17:02,861:INFO:_display_container: 2
2024-12-12 17:17:02,861:INFO:AdaBoostRegressor(random_state=495)
2024-12-12 17:17:02,861:INFO:create_model() successfully completed......................................
2024-12-12 17:17:02,939:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:02,939:INFO:Creating metrics dataframe
2024-12-12 17:17:02,941:INFO:Initializing Gradient Boosting Regressor
2024-12-12 17:17:02,941:INFO:Total runtime is 0.16924774249394733 minutes
2024-12-12 17:17:02,942:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:02,942:INFO:Initializing create_model()
2024-12-12 17:17:02,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:02,942:INFO:Checking exceptions
2024-12-12 17:17:02,942:INFO:Importing libraries
2024-12-12 17:17:02,942:INFO:Copying training dataset
2024-12-12 17:17:02,944:INFO:Defining folds
2024-12-12 17:17:02,944:INFO:Declaring metric variables
2024-12-12 17:17:02,944:INFO:Importing untrained model
2024-12-12 17:17:02,945:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:17:02,945:INFO:Starting cross validation
2024-12-12 17:17:02,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:03,073:INFO:Calculating mean and std
2024-12-12 17:17:03,073:INFO:Creating metrics dataframe
2024-12-12 17:17:03,074:INFO:Uploading results into container
2024-12-12 17:17:03,074:INFO:Uploading model into container now
2024-12-12 17:17:03,076:INFO:_master_model_container: 16
2024-12-12 17:17:03,076:INFO:_display_container: 2
2024-12-12 17:17:03,077:INFO:GradientBoostingRegressor(random_state=495)
2024-12-12 17:17:03,077:INFO:create_model() successfully completed......................................
2024-12-12 17:17:03,157:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:03,157:INFO:Creating metrics dataframe
2024-12-12 17:17:03,159:INFO:Initializing Extreme Gradient Boosting
2024-12-12 17:17:03,159:INFO:Total runtime is 0.17287582953770955 minutes
2024-12-12 17:17:03,159:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:03,160:INFO:Initializing create_model()
2024-12-12 17:17:03,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:03,160:INFO:Checking exceptions
2024-12-12 17:17:03,160:INFO:Importing libraries
2024-12-12 17:17:03,160:INFO:Copying training dataset
2024-12-12 17:17:03,162:INFO:Defining folds
2024-12-12 17:17:03,162:INFO:Declaring metric variables
2024-12-12 17:17:03,162:INFO:Importing untrained model
2024-12-12 17:17:03,162:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:17:03,163:INFO:Starting cross validation
2024-12-12 17:17:03,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:03,313:INFO:Calculating mean and std
2024-12-12 17:17:03,313:INFO:Creating metrics dataframe
2024-12-12 17:17:03,314:INFO:Uploading results into container
2024-12-12 17:17:03,314:INFO:Uploading model into container now
2024-12-12 17:17:03,314:INFO:_master_model_container: 17
2024-12-12 17:17:03,314:INFO:_display_container: 2
2024-12-12 17:17:03,317:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=495, ...)
2024-12-12 17:17:03,317:INFO:create_model() successfully completed......................................
2024-12-12 17:17:03,401:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:03,401:INFO:Creating metrics dataframe
2024-12-12 17:17:03,404:INFO:Initializing Light Gradient Boosting Machine
2024-12-12 17:17:03,404:INFO:Total runtime is 0.17696303526560464 minutes
2024-12-12 17:17:03,404:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:03,404:INFO:Initializing create_model()
2024-12-12 17:17:03,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:03,404:INFO:Checking exceptions
2024-12-12 17:17:03,404:INFO:Importing libraries
2024-12-12 17:17:03,404:INFO:Copying training dataset
2024-12-12 17:17:03,404:INFO:Defining folds
2024-12-12 17:17:03,404:INFO:Declaring metric variables
2024-12-12 17:17:03,404:INFO:Importing untrained model
2024-12-12 17:17:03,404:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:17:03,404:INFO:Starting cross validation
2024-12-12 17:17:03,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:03,840:INFO:Calculating mean and std
2024-12-12 17:17:03,842:INFO:Creating metrics dataframe
2024-12-12 17:17:03,844:INFO:Uploading results into container
2024-12-12 17:17:03,845:INFO:Uploading model into container now
2024-12-12 17:17:03,845:INFO:_master_model_container: 18
2024-12-12 17:17:03,845:INFO:_display_container: 2
2024-12-12 17:17:03,846:INFO:LGBMRegressor(n_jobs=-1, random_state=495)
2024-12-12 17:17:03,846:INFO:create_model() successfully completed......................................
2024-12-12 17:17:03,948:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:03,948:INFO:Creating metrics dataframe
2024-12-12 17:17:03,952:INFO:Initializing Dummy Regressor
2024-12-12 17:17:03,952:INFO:Total runtime is 0.1861000577608744 minutes
2024-12-12 17:17:03,952:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:03,952:INFO:Initializing create_model()
2024-12-12 17:17:03,952:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA9850CD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:03,952:INFO:Checking exceptions
2024-12-12 17:17:03,952:INFO:Importing libraries
2024-12-12 17:17:03,952:INFO:Copying training dataset
2024-12-12 17:17:03,956:INFO:Defining folds
2024-12-12 17:17:03,956:INFO:Declaring metric variables
2024-12-12 17:17:03,956:INFO:Importing untrained model
2024-12-12 17:17:03,956:INFO:Dummy Regressor Imported successfully
2024-12-12 17:17:03,956:INFO:Starting cross validation
2024-12-12 17:17:03,957:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:04,010:INFO:Calculating mean and std
2024-12-12 17:17:04,010:INFO:Creating metrics dataframe
2024-12-12 17:17:04,010:INFO:Uploading results into container
2024-12-12 17:17:04,010:INFO:Uploading model into container now
2024-12-12 17:17:04,010:INFO:_master_model_container: 19
2024-12-12 17:17:04,010:INFO:_display_container: 2
2024-12-12 17:17:04,010:INFO:DummyRegressor()
2024-12-12 17:17:04,010:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,082:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:04,082:INFO:Creating metrics dataframe
2024-12-12 17:17:04,082:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-12 17:17:04,096:INFO:Initializing create_model()
2024-12-12 17:17:04,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,096:INFO:Checking exceptions
2024-12-12 17:17:04,096:INFO:Importing libraries
2024-12-12 17:17:04,096:INFO:Copying training dataset
2024-12-12 17:17:04,100:INFO:Defining folds
2024-12-12 17:17:04,100:INFO:Declaring metric variables
2024-12-12 17:17:04,100:INFO:Importing untrained model
2024-12-12 17:17:04,100:INFO:Declaring custom model
2024-12-12 17:17:04,101:INFO:Random Forest Regressor Imported successfully
2024-12-12 17:17:04,102:INFO:Cross validation set to False
2024-12-12 17:17:04,102:INFO:Fitting Model
2024-12-12 17:17:04,221:INFO:RandomForestRegressor(n_jobs=-1, random_state=495)
2024-12-12 17:17:04,221:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,310:INFO:Initializing create_model()
2024-12-12 17:17:04,310:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=LGBMRegressor(n_jobs=-1, random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,310:INFO:Checking exceptions
2024-12-12 17:17:04,310:INFO:Importing libraries
2024-12-12 17:17:04,311:INFO:Copying training dataset
2024-12-12 17:17:04,313:INFO:Defining folds
2024-12-12 17:17:04,313:INFO:Declaring metric variables
2024-12-12 17:17:04,313:INFO:Importing untrained model
2024-12-12 17:17:04,313:INFO:Declaring custom model
2024-12-12 17:17:04,314:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-12 17:17:04,315:INFO:Cross validation set to False
2024-12-12 17:17:04,315:INFO:Fitting Model
2024-12-12 17:17:04,324:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000073 seconds.
2024-12-12 17:17:04,325:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-12-12 17:17:04,325:INFO:[LightGBM] [Info] Total Bins 46
2024-12-12 17:17:04,325:INFO:[LightGBM] [Info] Number of data points in the train set: 62, number of used features: 7
2024-12-12 17:17:04,325:INFO:[LightGBM] [Info] Start training from score 0.410288
2024-12-12 17:17:04,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-12 17:17:04,349:INFO:LGBMRegressor(n_jobs=-1, random_state=495)
2024-12-12 17:17:04,349:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,448:INFO:Initializing create_model()
2024-12-12 17:17:04,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,448:INFO:Checking exceptions
2024-12-12 17:17:04,449:INFO:Importing libraries
2024-12-12 17:17:04,449:INFO:Copying training dataset
2024-12-12 17:17:04,452:INFO:Defining folds
2024-12-12 17:17:04,452:INFO:Declaring metric variables
2024-12-12 17:17:04,452:INFO:Importing untrained model
2024-12-12 17:17:04,452:INFO:Declaring custom model
2024-12-12 17:17:04,453:INFO:K Neighbors Regressor Imported successfully
2024-12-12 17:17:04,453:INFO:Cross validation set to False
2024-12-12 17:17:04,453:INFO:Fitting Model
2024-12-12 17:17:04,460:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-12 17:17:04,460:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,547:INFO:Initializing create_model()
2024-12-12 17:17:04,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=495, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,547:INFO:Checking exceptions
2024-12-12 17:17:04,548:INFO:Importing libraries
2024-12-12 17:17:04,548:INFO:Copying training dataset
2024-12-12 17:17:04,552:INFO:Defining folds
2024-12-12 17:17:04,552:INFO:Declaring metric variables
2024-12-12 17:17:04,552:INFO:Importing untrained model
2024-12-12 17:17:04,552:INFO:Declaring custom model
2024-12-12 17:17:04,553:INFO:Extreme Gradient Boosting Imported successfully
2024-12-12 17:17:04,553:INFO:Cross validation set to False
2024-12-12 17:17:04,553:INFO:Fitting Model
2024-12-12 17:17:04,600:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=495, ...)
2024-12-12 17:17:04,600:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,703:INFO:Initializing create_model()
2024-12-12 17:17:04,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,704:INFO:Checking exceptions
2024-12-12 17:17:04,705:INFO:Importing libraries
2024-12-12 17:17:04,705:INFO:Copying training dataset
2024-12-12 17:17:04,708:INFO:Defining folds
2024-12-12 17:17:04,709:INFO:Declaring metric variables
2024-12-12 17:17:04,709:INFO:Importing untrained model
2024-12-12 17:17:04,709:INFO:Declaring custom model
2024-12-12 17:17:04,709:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-12 17:17:04,710:INFO:Cross validation set to False
2024-12-12 17:17:04,710:INFO:Fitting Model
2024-12-12 17:17:04,717:INFO:OrthogonalMatchingPursuit()
2024-12-12 17:17:04,717:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,799:INFO:Initializing create_model()
2024-12-12 17:17:04,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,799:INFO:Checking exceptions
2024-12-12 17:17:04,799:INFO:Importing libraries
2024-12-12 17:17:04,799:INFO:Copying training dataset
2024-12-12 17:17:04,799:INFO:Defining folds
2024-12-12 17:17:04,799:INFO:Declaring metric variables
2024-12-12 17:17:04,799:INFO:Importing untrained model
2024-12-12 17:17:04,799:INFO:Declaring custom model
2024-12-12 17:17:04,799:INFO:Extra Trees Regressor Imported successfully
2024-12-12 17:17:04,799:INFO:Cross validation set to False
2024-12-12 17:17:04,799:INFO:Fitting Model
2024-12-12 17:17:04,884:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=495)
2024-12-12 17:17:04,884:INFO:create_model() successfully completed......................................
2024-12-12 17:17:04,965:INFO:Initializing create_model()
2024-12-12 17:17:04,965:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:04,965:INFO:Checking exceptions
2024-12-12 17:17:04,965:INFO:Importing libraries
2024-12-12 17:17:04,965:INFO:Copying training dataset
2024-12-12 17:17:04,965:INFO:Defining folds
2024-12-12 17:17:04,965:INFO:Declaring metric variables
2024-12-12 17:17:04,970:INFO:Importing untrained model
2024-12-12 17:17:04,970:INFO:Declaring custom model
2024-12-12 17:17:04,970:INFO:Bayesian Ridge Imported successfully
2024-12-12 17:17:04,970:INFO:Cross validation set to False
2024-12-12 17:17:04,970:INFO:Fitting Model
2024-12-12 17:17:04,977:INFO:BayesianRidge()
2024-12-12 17:17:04,977:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,054:INFO:Initializing create_model()
2024-12-12 17:17:05,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=Lasso(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,055:INFO:Checking exceptions
2024-12-12 17:17:05,055:INFO:Importing libraries
2024-12-12 17:17:05,055:INFO:Copying training dataset
2024-12-12 17:17:05,058:INFO:Defining folds
2024-12-12 17:17:05,058:INFO:Declaring metric variables
2024-12-12 17:17:05,058:INFO:Importing untrained model
2024-12-12 17:17:05,058:INFO:Declaring custom model
2024-12-12 17:17:05,058:INFO:Lasso Regression Imported successfully
2024-12-12 17:17:05,058:INFO:Cross validation set to False
2024-12-12 17:17:05,058:INFO:Fitting Model
2024-12-12 17:17:05,063:INFO:Lasso(random_state=495)
2024-12-12 17:17:05,063:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,140:INFO:Initializing create_model()
2024-12-12 17:17:05,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=LassoLars(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,140:INFO:Checking exceptions
2024-12-12 17:17:05,140:INFO:Importing libraries
2024-12-12 17:17:05,140:INFO:Copying training dataset
2024-12-12 17:17:05,140:INFO:Defining folds
2024-12-12 17:17:05,140:INFO:Declaring metric variables
2024-12-12 17:17:05,140:INFO:Importing untrained model
2024-12-12 17:17:05,140:INFO:Declaring custom model
2024-12-12 17:17:05,140:INFO:Lasso Least Angle Regression Imported successfully
2024-12-12 17:17:05,155:INFO:Cross validation set to False
2024-12-12 17:17:05,155:INFO:Fitting Model
2024-12-12 17:17:05,161:INFO:LassoLars(random_state=495)
2024-12-12 17:17:05,161:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,242:INFO:Initializing create_model()
2024-12-12 17:17:05,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ElasticNet(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,242:INFO:Checking exceptions
2024-12-12 17:17:05,243:INFO:Importing libraries
2024-12-12 17:17:05,243:INFO:Copying training dataset
2024-12-12 17:17:05,246:INFO:Defining folds
2024-12-12 17:17:05,246:INFO:Declaring metric variables
2024-12-12 17:17:05,246:INFO:Importing untrained model
2024-12-12 17:17:05,246:INFO:Declaring custom model
2024-12-12 17:17:05,246:INFO:Elastic Net Imported successfully
2024-12-12 17:17:05,246:INFO:Cross validation set to False
2024-12-12 17:17:05,248:INFO:Fitting Model
2024-12-12 17:17:05,249:INFO:ElasticNet(random_state=495)
2024-12-12 17:17:05,249:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,329:INFO:Initializing create_model()
2024-12-12 17:17:05,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=GradientBoostingRegressor(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,329:INFO:Checking exceptions
2024-12-12 17:17:05,329:INFO:Importing libraries
2024-12-12 17:17:05,329:INFO:Copying training dataset
2024-12-12 17:17:05,329:INFO:Defining folds
2024-12-12 17:17:05,329:INFO:Declaring metric variables
2024-12-12 17:17:05,329:INFO:Importing untrained model
2024-12-12 17:17:05,329:INFO:Declaring custom model
2024-12-12 17:17:05,329:INFO:Gradient Boosting Regressor Imported successfully
2024-12-12 17:17:05,329:INFO:Cross validation set to False
2024-12-12 17:17:05,329:INFO:Fitting Model
2024-12-12 17:17:05,384:INFO:GradientBoostingRegressor(random_state=495)
2024-12-12 17:17:05,384:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,464:INFO:Initializing create_model()
2024-12-12 17:17:05,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=Ridge(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,464:INFO:Checking exceptions
2024-12-12 17:17:05,464:INFO:Importing libraries
2024-12-12 17:17:05,464:INFO:Copying training dataset
2024-12-12 17:17:05,464:INFO:Defining folds
2024-12-12 17:17:05,464:INFO:Declaring metric variables
2024-12-12 17:17:05,464:INFO:Importing untrained model
2024-12-12 17:17:05,464:INFO:Declaring custom model
2024-12-12 17:17:05,473:INFO:Ridge Regression Imported successfully
2024-12-12 17:17:05,473:INFO:Cross validation set to False
2024-12-12 17:17:05,473:INFO:Fitting Model
2024-12-12 17:17:05,479:INFO:Ridge(random_state=495)
2024-12-12 17:17:05,479:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,560:INFO:Initializing create_model()
2024-12-12 17:17:05,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=AdaBoostRegressor(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,560:INFO:Checking exceptions
2024-12-12 17:17:05,561:INFO:Importing libraries
2024-12-12 17:17:05,561:INFO:Copying training dataset
2024-12-12 17:17:05,564:INFO:Defining folds
2024-12-12 17:17:05,564:INFO:Declaring metric variables
2024-12-12 17:17:05,564:INFO:Importing untrained model
2024-12-12 17:17:05,564:INFO:Declaring custom model
2024-12-12 17:17:05,565:INFO:AdaBoost Regressor Imported successfully
2024-12-12 17:17:05,565:INFO:Cross validation set to False
2024-12-12 17:17:05,565:INFO:Fitting Model
2024-12-12 17:17:05,622:INFO:AdaBoostRegressor(random_state=495)
2024-12-12 17:17:05,622:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,689:INFO:Initializing create_model()
2024-12-12 17:17:05,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=DecisionTreeRegressor(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,689:INFO:Checking exceptions
2024-12-12 17:17:05,689:INFO:Importing libraries
2024-12-12 17:17:05,689:INFO:Copying training dataset
2024-12-12 17:17:05,707:INFO:Defining folds
2024-12-12 17:17:05,707:INFO:Declaring metric variables
2024-12-12 17:17:05,707:INFO:Importing untrained model
2024-12-12 17:17:05,707:INFO:Declaring custom model
2024-12-12 17:17:05,707:INFO:Decision Tree Regressor Imported successfully
2024-12-12 17:17:05,707:INFO:Cross validation set to False
2024-12-12 17:17:05,707:INFO:Fitting Model
2024-12-12 17:17:05,710:INFO:DecisionTreeRegressor(random_state=495)
2024-12-12 17:17:05,710:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,793:INFO:Initializing create_model()
2024-12-12 17:17:05,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,795:INFO:Checking exceptions
2024-12-12 17:17:05,795:INFO:Importing libraries
2024-12-12 17:17:05,795:INFO:Copying training dataset
2024-12-12 17:17:05,795:INFO:Defining folds
2024-12-12 17:17:05,795:INFO:Declaring metric variables
2024-12-12 17:17:05,795:INFO:Importing untrained model
2024-12-12 17:17:05,795:INFO:Declaring custom model
2024-12-12 17:17:05,795:INFO:Linear Regression Imported successfully
2024-12-12 17:17:05,795:INFO:Cross validation set to False
2024-12-12 17:17:05,795:INFO:Fitting Model
2024-12-12 17:17:05,795:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:17:05,795:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,877:INFO:Initializing create_model()
2024-12-12 17:17:05,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,877:INFO:Checking exceptions
2024-12-12 17:17:05,877:INFO:Importing libraries
2024-12-12 17:17:05,877:INFO:Copying training dataset
2024-12-12 17:17:05,877:INFO:Defining folds
2024-12-12 17:17:05,877:INFO:Declaring metric variables
2024-12-12 17:17:05,877:INFO:Importing untrained model
2024-12-12 17:17:05,877:INFO:Declaring custom model
2024-12-12 17:17:05,877:INFO:Huber Regressor Imported successfully
2024-12-12 17:17:05,890:INFO:Cross validation set to False
2024-12-12 17:17:05,890:INFO:Fitting Model
2024-12-12 17:17:05,909:INFO:HuberRegressor()
2024-12-12 17:17:05,909:INFO:create_model() successfully completed......................................
2024-12-12 17:17:05,985:INFO:Initializing create_model()
2024-12-12 17:17:05,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=Lars(random_state=495), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:05,985:INFO:Checking exceptions
2024-12-12 17:17:05,985:INFO:Importing libraries
2024-12-12 17:17:05,985:INFO:Copying training dataset
2024-12-12 17:17:06,001:INFO:Defining folds
2024-12-12 17:17:06,001:INFO:Declaring metric variables
2024-12-12 17:17:06,001:INFO:Importing untrained model
2024-12-12 17:17:06,001:INFO:Declaring custom model
2024-12-12 17:17:06,001:INFO:Least Angle Regression Imported successfully
2024-12-12 17:17:06,001:INFO:Cross validation set to False
2024-12-12 17:17:06,001:INFO:Fitting Model
2024-12-12 17:17:06,008:INFO:Lars(random_state=495)
2024-12-12 17:17:06,008:INFO:create_model() successfully completed......................................
2024-12-12 17:17:06,095:INFO:Initializing create_model()
2024-12-12 17:17:06,095:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:06,095:INFO:Checking exceptions
2024-12-12 17:17:06,095:INFO:Importing libraries
2024-12-12 17:17:06,095:INFO:Copying training dataset
2024-12-12 17:17:06,101:INFO:Defining folds
2024-12-12 17:17:06,101:INFO:Declaring metric variables
2024-12-12 17:17:06,101:INFO:Importing untrained model
2024-12-12 17:17:06,101:INFO:Declaring custom model
2024-12-12 17:17:06,101:INFO:Dummy Regressor Imported successfully
2024-12-12 17:17:06,101:INFO:Cross validation set to False
2024-12-12 17:17:06,101:INFO:Fitting Model
2024-12-12 17:17:06,107:INFO:DummyRegressor()
2024-12-12 17:17:06,107:INFO:create_model() successfully completed......................................
2024-12-12 17:17:06,199:INFO:_master_model_container: 19
2024-12-12 17:17:06,199:INFO:_display_container: 2
2024-12-12 17:17:06,202:INFO:[RandomForestRegressor(n_jobs=-1, random_state=495), LGBMRegressor(n_jobs=-1, random_state=495), KNeighborsRegressor(n_jobs=-1), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=495, ...), OrthogonalMatchingPursuit(), ExtraTreesRegressor(n_jobs=-1, random_state=495), BayesianRidge(), Lasso(random_state=495), LassoLars(random_state=495), ElasticNet(random_state=495), GradientBoostingRegressor(random_state=495), Ridge(random_state=495), AdaBoostRegressor(random_state=495), DecisionTreeRegressor(random_state=495), LinearRegression(n_jobs=-1), HuberRegressor(), Lars(random_state=495), DummyRegressor()]
2024-12-12 17:17:06,202:INFO:compare_models() successfully completed......................................
2024-12-12 17:17:06,202:INFO:Initializing predict_model()
2024-12-12 17:17:06,202:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA97D8DD00>)
2024-12-12 17:17:06,202:INFO:Checking exceptions
2024-12-12 17:17:06,202:INFO:Preloading libraries
2024-12-12 17:17:06,202:INFO:Set up data.
2024-12-12 17:17:06,209:INFO:Set up index.
2024-12-12 17:17:06,246:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:06,336:INFO:Initializing predict_model()
2024-12-12 17:17:06,336:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=LGBMRegressor(n_jobs=-1, random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA97D31300>)
2024-12-12 17:17:06,336:INFO:Checking exceptions
2024-12-12 17:17:06,336:INFO:Preloading libraries
2024-12-12 17:17:06,336:INFO:Set up data.
2024-12-12 17:17:06,346:INFO:Set up index.
2024-12-12 17:17:06,360:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:06,471:INFO:Initializing predict_model()
2024-12-12 17:17:06,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA97D8DD00>)
2024-12-12 17:17:06,471:INFO:Checking exceptions
2024-12-12 17:17:06,471:INFO:Preloading libraries
2024-12-12 17:17:06,471:INFO:Set up data.
2024-12-12 17:17:06,480:INFO:Set up index.
2024-12-12 17:17:06,509:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:06,597:INFO:Initializing predict_model()
2024-12-12 17:17:06,597:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=495, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:06,597:INFO:Checking exceptions
2024-12-12 17:17:06,597:INFO:Preloading libraries
2024-12-12 17:17:06,597:INFO:Set up data.
2024-12-12 17:17:06,610:INFO:Set up index.
2024-12-12 17:17:06,624:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:06,735:INFO:Initializing predict_model()
2024-12-12 17:17:06,735:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA97D31300>)
2024-12-12 17:17:06,735:INFO:Checking exceptions
2024-12-12 17:17:06,736:INFO:Preloading libraries
2024-12-12 17:17:06,736:INFO:Set up data.
2024-12-12 17:17:06,744:INFO:Set up index.
2024-12-12 17:17:06,756:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:06,849:INFO:Initializing predict_model()
2024-12-12 17:17:06,849:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:06,849:INFO:Checking exceptions
2024-12-12 17:17:06,849:INFO:Preloading libraries
2024-12-12 17:17:06,849:INFO:Set up data.
2024-12-12 17:17:06,857:INFO:Set up index.
2024-12-12 17:17:06,885:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:06,983:INFO:Initializing predict_model()
2024-12-12 17:17:06,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA97D8DD00>)
2024-12-12 17:17:06,983:INFO:Checking exceptions
2024-12-12 17:17:06,983:INFO:Preloading libraries
2024-12-12 17:17:06,983:INFO:Set up data.
2024-12-12 17:17:06,990:INFO:Set up index.
2024-12-12 17:17:07,002:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,110:INFO:Initializing predict_model()
2024-12-12 17:17:07,111:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=Lasso(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE75940>)
2024-12-12 17:17:07,111:INFO:Checking exceptions
2024-12-12 17:17:07,111:INFO:Preloading libraries
2024-12-12 17:17:07,111:INFO:Set up data.
2024-12-12 17:17:07,119:INFO:Set up index.
2024-12-12 17:17:07,123:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,225:INFO:Initializing predict_model()
2024-12-12 17:17:07,226:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=LassoLars(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:07,226:INFO:Checking exceptions
2024-12-12 17:17:07,226:INFO:Preloading libraries
2024-12-12 17:17:07,226:INFO:Set up data.
2024-12-12 17:17:07,232:INFO:Set up index.
2024-12-12 17:17:07,245:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,341:INFO:Initializing predict_model()
2024-12-12 17:17:07,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ElasticNet(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA97D8DD00>)
2024-12-12 17:17:07,341:INFO:Checking exceptions
2024-12-12 17:17:07,341:INFO:Preloading libraries
2024-12-12 17:17:07,341:INFO:Set up data.
2024-12-12 17:17:07,349:INFO:Set up index.
2024-12-12 17:17:07,362:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,453:INFO:Initializing predict_model()
2024-12-12 17:17:07,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=GradientBoostingRegressor(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE75940>)
2024-12-12 17:17:07,454:INFO:Checking exceptions
2024-12-12 17:17:07,454:INFO:Preloading libraries
2024-12-12 17:17:07,454:INFO:Set up data.
2024-12-12 17:17:07,462:INFO:Set up index.
2024-12-12 17:17:07,474:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,567:INFO:Initializing predict_model()
2024-12-12 17:17:07,567:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=Ridge(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:07,567:INFO:Checking exceptions
2024-12-12 17:17:07,567:INFO:Preloading libraries
2024-12-12 17:17:07,567:INFO:Set up data.
2024-12-12 17:17:07,574:INFO:Set up index.
2024-12-12 17:17:07,586:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,676:INFO:Initializing predict_model()
2024-12-12 17:17:07,676:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=AdaBoostRegressor(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE75940>)
2024-12-12 17:17:07,676:INFO:Checking exceptions
2024-12-12 17:17:07,676:INFO:Preloading libraries
2024-12-12 17:17:07,676:INFO:Set up data.
2024-12-12 17:17:07,684:INFO:Set up index.
2024-12-12 17:17:07,691:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,796:INFO:Initializing predict_model()
2024-12-12 17:17:07,796:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=DecisionTreeRegressor(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:07,796:INFO:Checking exceptions
2024-12-12 17:17:07,796:INFO:Preloading libraries
2024-12-12 17:17:07,796:INFO:Set up data.
2024-12-12 17:17:07,804:INFO:Set up index.
2024-12-12 17:17:07,808:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:07,909:INFO:Initializing predict_model()
2024-12-12 17:17:07,909:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE75940>)
2024-12-12 17:17:07,909:INFO:Checking exceptions
2024-12-12 17:17:07,909:INFO:Preloading libraries
2024-12-12 17:17:07,909:INFO:Set up data.
2024-12-12 17:17:07,921:INFO:Set up index.
2024-12-12 17:17:07,933:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:08,029:INFO:Initializing predict_model()
2024-12-12 17:17:08,029:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:08,029:INFO:Checking exceptions
2024-12-12 17:17:08,029:INFO:Preloading libraries
2024-12-12 17:17:08,030:INFO:Set up data.
2024-12-12 17:17:08,038:INFO:Set up index.
2024-12-12 17:17:08,049:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:08,142:INFO:Initializing predict_model()
2024-12-12 17:17:08,142:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=Lars(random_state=495), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE75940>)
2024-12-12 17:17:08,142:INFO:Checking exceptions
2024-12-12 17:17:08,142:INFO:Preloading libraries
2024-12-12 17:17:08,142:INFO:Set up data.
2024-12-12 17:17:08,152:INFO:Set up index.
2024-12-12 17:17:08,170:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:08,256:INFO:Initializing predict_model()
2024-12-12 17:17:08,256:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FADEE8DB20>)
2024-12-12 17:17:08,256:INFO:Checking exceptions
2024-12-12 17:17:08,256:INFO:Preloading libraries
2024-12-12 17:17:08,256:INFO:Set up data.
2024-12-12 17:17:08,271:INFO:Set up index.
2024-12-12 17:17:08,282:WARNING:C:\Users\Kanaji Rinntarou\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-12 17:17:08,371:INFO:Initializing compare_models()
2024-12-12 17:17:08,372:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-12 17:17:08,372:INFO:Checking exceptions
2024-12-12 17:17:08,373:INFO:Preparing display monitor
2024-12-12 17:17:08,374:INFO:Initializing Linear Regression
2024-12-12 17:17:08,374:INFO:Total runtime is 0.0 minutes
2024-12-12 17:17:08,375:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:08,375:INFO:Initializing create_model()
2024-12-12 17:17:08,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA97F51890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:08,375:INFO:Checking exceptions
2024-12-12 17:17:08,375:INFO:Importing libraries
2024-12-12 17:17:08,375:INFO:Copying training dataset
2024-12-12 17:17:08,378:INFO:Defining folds
2024-12-12 17:17:08,378:INFO:Declaring metric variables
2024-12-12 17:17:08,378:INFO:Importing untrained model
2024-12-12 17:17:08,378:INFO:Linear Regression Imported successfully
2024-12-12 17:17:08,379:INFO:Starting cross validation
2024-12-12 17:17:08,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:08,439:INFO:Calculating mean and std
2024-12-12 17:17:08,439:INFO:Creating metrics dataframe
2024-12-12 17:17:08,439:INFO:Uploading results into container
2024-12-12 17:17:08,439:INFO:Uploading model into container now
2024-12-12 17:17:08,439:INFO:_master_model_container: 20
2024-12-12 17:17:08,439:INFO:_display_container: 21
2024-12-12 17:17:08,439:INFO:LinearRegression(n_jobs=-1)
2024-12-12 17:17:08,439:INFO:create_model() successfully completed......................................
2024-12-12 17:17:08,518:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:08,518:INFO:Creating metrics dataframe
2024-12-12 17:17:08,522:INFO:Initializing Lasso Regression
2024-12-12 17:17:08,522:INFO:Total runtime is 0.002457630634307861 minutes
2024-12-12 17:17:08,522:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:08,522:INFO:Initializing create_model()
2024-12-12 17:17:08,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA97F51890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:08,522:INFO:Checking exceptions
2024-12-12 17:17:08,522:INFO:Importing libraries
2024-12-12 17:17:08,522:INFO:Copying training dataset
2024-12-12 17:17:08,522:INFO:Defining folds
2024-12-12 17:17:08,522:INFO:Declaring metric variables
2024-12-12 17:17:08,522:INFO:Importing untrained model
2024-12-12 17:17:08,522:INFO:Lasso Regression Imported successfully
2024-12-12 17:17:08,522:INFO:Starting cross validation
2024-12-12 17:17:08,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:08,574:INFO:Calculating mean and std
2024-12-12 17:17:08,574:INFO:Creating metrics dataframe
2024-12-12 17:17:08,574:INFO:Uploading results into container
2024-12-12 17:17:08,574:INFO:Uploading model into container now
2024-12-12 17:17:08,574:INFO:_master_model_container: 21
2024-12-12 17:17:08,574:INFO:_display_container: 21
2024-12-12 17:17:08,574:INFO:Lasso(random_state=495)
2024-12-12 17:17:08,574:INFO:create_model() successfully completed......................................
2024-12-12 17:17:08,654:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:08,656:INFO:Creating metrics dataframe
2024-12-12 17:17:08,658:INFO:Initializing Ridge Regression
2024-12-12 17:17:08,658:INFO:Total runtime is 0.004727665583292643 minutes
2024-12-12 17:17:08,658:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:08,658:INFO:Initializing create_model()
2024-12-12 17:17:08,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA97F51890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:08,658:INFO:Checking exceptions
2024-12-12 17:17:08,658:INFO:Importing libraries
2024-12-12 17:17:08,658:INFO:Copying training dataset
2024-12-12 17:17:08,661:INFO:Defining folds
2024-12-12 17:17:08,661:INFO:Declaring metric variables
2024-12-12 17:17:08,661:INFO:Importing untrained model
2024-12-12 17:17:08,661:INFO:Ridge Regression Imported successfully
2024-12-12 17:17:08,661:INFO:Starting cross validation
2024-12-12 17:17:08,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-12 17:17:08,722:INFO:Calculating mean and std
2024-12-12 17:17:08,722:INFO:Creating metrics dataframe
2024-12-12 17:17:08,723:INFO:Uploading results into container
2024-12-12 17:17:08,724:INFO:Uploading model into container now
2024-12-12 17:17:08,724:INFO:_master_model_container: 22
2024-12-12 17:17:08,724:INFO:_display_container: 21
2024-12-12 17:17:08,724:INFO:Ridge(random_state=495)
2024-12-12 17:17:08,724:INFO:create_model() successfully completed......................................
2024-12-12 17:17:08,801:INFO:SubProcess create_model() end ==================================
2024-12-12 17:17:08,801:INFO:Creating metrics dataframe
2024-12-12 17:17:08,805:INFO:Initializing Elastic Net
2024-12-12 17:17:08,805:INFO:Total runtime is 0.007177654902140299 minutes
2024-12-12 17:17:08,805:INFO:SubProcess create_model() called ==================================
2024-12-12 17:17:08,805:INFO:Initializing create_model()
2024-12-12 17:17:08,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA97AA5A90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FA97F51890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-12 17:17:08,805:INFO:Checking exceptions
2024-12-12 17:17:08,805:INFO:Importing libraries
2024-12-12 17:17:08,805:INFO:Copying training dataset
2024-12-12 17:17:08,808:INFO:Defining folds
2024-12-12 17:17:08,808:INFO:Declaring metric variables
2024-12-12 17:17:08,808:INFO:Importing untrained model
2024-12-12 17:17:08,808:INFO:Elastic Net Imported successfully
2024-12-12 17:17:08,808:INFO:Starting cross validation
2024-12-12 17:17:08,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
